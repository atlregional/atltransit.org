{"version":3,"sources":["planner-widget.js","utilities.js","locale.js","nav.js","schedules-widget.js"],"names":["getEsriGeometry","option","id","$","ajax","url","esriUrl","dataType","data","text","magicKey","f","success","console","log","geom","locations","feature","geometry","val","y","x","formatRepo","repo","loading","markup","description","formatRepoSelection","compareRouteNames","a","b","shortName","findBootstrapEnvironment","envs","$el","appendTo","i","length","env","addClass","is","remove","setupDatetime","pad","n","hide","attr","setTime","currentTime","date","year","month","setDate","datepicker","dateFormat","Locale","dayNames","days","dayNamesMin","daysMin","monthNames","months","defaultDate","hideIfNoPrevNext","minDate","whitelabel_minDate","maxDate","whitelabel_maxDate","document","on","this","parents","iso8601","parts","split","d","moment","format","input","getDate","getTime","time","scrollToAnchor","aid","aTag","scrollToOffset","offset","top","animate","scrollTop","equalHeight","group","tallest","each","css","height","thisHeight","trimHeadsign","headsign","replace","toTitleCase","cleanStopName","name","getDistanceFromLatLonInKm","lat1","lon1","lat2","lon2","R","dLat","deg2rad","dLon","Math","sin","cos","c","atan2","sqrt","deg","PI","str","txt","test","toLowerCase","charAt","toUpperCase","substr","whitelabel_prefix","Date","timeFormat","dateAriaLabel","edit","plan","geocoderInput","originInput","destinationInput","startpointEmpty","noStartpointSelected","destinationEmpty","noDestinationSelected","noValidDate","noValidTime","dateTooEarly","minDate8601","reverse","join","dateTooLate","maxDate8601","from","via","to","earlier","later","noAdviceFound","walk","platformrail","platform","amountTransfers","transfers","autocompleteMessages","noResults","results","amount","submit","e","preventDefault","value","tooltip","click","$this","removeClass","shiftContent","marginTop","geolocationBool","lat","lon","labelMap","RED","BLUE","GOLD","GREEN","MARTA","CCT","GCT","GRTA","ASC","timepicker","carousel","interval","urlParams","dropdown","setupAutoComplete","jQuery","unparam","window","location","hash","tab","trigger","stopId","setTimeout","change","select2","allowClear","delay","term","page","distance","searchExtents","res","suggestions","array","item","arrItem","push","cache","minimumInputLength","templateResult","templateSelection","routeTypeMap","0","1","2","3","4","5","6","7","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","error","code","PERMISSION_DENIED","params","key","serialize","json","list","agencies","agency","agencyId","removeAttr","widgetClass","hasClass","index","html","prop","routeNest","d3","nest","type","sortValues","map","routes","optgroup","route","routeFullText","longName","routeText","append","unix","radius","firstValue","agencyCount","routeId","includePolylines","selectedTrip","closestDistance","closestStop","stopGroups","entry","stopGroupings","stopMap","references","stops","tripMap","tripCounter","trip","tripLabel","tripOption","stopIds","j","stop","stopName","stopDir","direction","$stops","previousTrip","tableId","table","stopCode","query","show","minutesBefore","arrivals","arrivalsAndDepartures","lastUpdateTime","empty","tbody","predicted","predictedArrivalTime","seconds","scheduledArrivalTime","diff","valueOf","routeName","routeShortName","fromNow","floor","fromNowText","tripHeadsign","patt","RegExp","row","fn","dataTable","isDataTable","arrivalsDatatable","DataTable","destroy","order","paging","info","bFilter","plannerChoice","origin","destination","fadeIn","fadeOut","saddr","daddr","dirflg","googUrl","open","fromPlace","toPlace","arriveBy","fromName","toName","mode","atltransitUrl","href","toggleClass","stopRouteSchedules","routeMap","schedulesDiv","rowDiv","rowDiv2","directions","stopRouteDirectionSchedules","numTrips","gridWidth","columnDiv","scheduleFrequencies","scheduleStopTimes","minuteCell","stopTimes","firstTime","arrivalTime","currentHour","morning","hour","k","meridian","nextArrivalTime","arrivalTimeMinutes","minutes","history","pushState","reveal","args","Array","prototype","slice","call","arguments","img","src","load","apply","splice","ready","waitForFinalEvent","timers","callback","ms","uniqueId","clearTimeout","resize","substring","pair","l","pieces","decodeURIComponent","extend","disable","state","disabled","obj","prefix","p","hasOwnProperty","v","encodeURIComponent","bs"],"mappings":"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","file":"atltransit.js","sourcesContent":["var geolocationBool = false;\nvar lat, lon;\nvar labelMap = {\n\t'RED': 'label label-danger',\n\t'BLUE': 'label label-primary',\n\t'GOLD': 'label label-warning',\n\t'GREEN': 'label label-success',\n\t'MARTA': 'label label-orange',\n\t'CCT': 'label label-magenta',\n\t'GCT': 'label label-maroon',\n\t'GRTA': 'label label-cyan',\n\t'ASC': 'label label-purple'\n};\n\n// window.onload = function(){\n\t// Planner Widget Javascript\n\t$('#planner-timepicker').timepicker();\n\t$('#test-carousel, #next-carousel, #schedules-carousel').carousel({\n\t\t\tinterval: false\n\t});\n\t$('#next-arrivals-agencies').val('');\n\n\t// var Locale = {};\n\t// Locale.autocompleteMessages = {\n\t//         noResults: \"No results found.\",\n\t//         results: function( amount ) {\n\t//             return amount + ( amount > 1 ? \" results are \" : \" result is\" ) + \" available, use the up and down arrow keys to navigate them.\";\n\t//         }\n\t// };\n\t\n\tvar esriUrl = 'https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/';\n\tfunction getEsriGeometry(option, id){\n\t\t$.ajax({\n\t\t\turl: esriUrl + 'find?',\n\t\t\tdataType: 'jsonp',\n\t\t\t// delay: 250,\n\t\t\tdata: {\n\t\t\t    text: option.text, // search term\n\t\t\t    magicKey: option.id,\n\t\t\t    // outFields: 'City,Region',\n\t\t\t    f: 'pjson',\n\t\t\t    // distance: 20000,\n\t\t\t    // searchExtents: -'85.386,34.618,-83.269,32.844',\n\t\t\t    // location: '-84.383149,33.750855',\n\t\t\t},\n\t\t\tsuccess: function(data){\n\t\t\t\tconsole.log(data);\n\t\t\t\tvar geom = data.locations[0].feature.geometry;\n\t\t\t\t$('.planner-form input[name='+id+'Place]').val(geom.y + ',' + geom.x);\n\t\t\t}\n\t\t});\n\t}\n\tfunction formatRepo (repo) {\n\t\tif (repo.loading) return repo.text;\n\n\t\tvar markup = '<div class=\"clearfix\">' +\n\t\t'<div class=\"col-sm-1\">' +\n\t\t// '<img src=\"' + repo.owner.avatar_url + '\" style=\"max-width: 100%\" />' +\n\t\t'</div>' +\n\t\t'<div clas=\"col-sm-10\">' +\n\t\t'<div class=\"clearfix\">' +\n\t\t'<div class=\"col-sm-6\">' + repo.text + '</div>' +\n\t\t// '<div class=\"col-sm-3\"><i class=\"fa fa-code-fork\"></i> ' + repo.forks_count + '</div>' +\n\t\t// '<div class=\"col-sm-2\"><i class=\"fa fa-star\"></i> ' + repo.stargazers_count + '</div>' +\n\t\t'</div>';\n\n\t\tif (repo.description) {\n\t\tmarkup += '<div>' + repo.description + '</div>';\n\t\t}\n\n\t\tmarkup += '</div></div>';\n\n\t\treturn markup;\n\t}\n\n\tfunction formatRepoSelection (repo) {\n\t\treturn repo.text;\n\t}\n\tvar urlParams;\n\t$(function(){\n\t\t$('.dropdown-toggle').dropdown();\n\n\t\t// // load stop ids\n\t\t// var url = 'http://atlanta.onebusaway.org/api/api/where/stop-ids-for-agency/MARTA.json?';\n\t\t// var params = {};\n\t\t// // params.query = stopCode;\n\t\t// params.key = 'TEST';\n\t\t// url += serialize(params);\n\t\t// $.ajax({\n\t\t// \turl: url,\n\t\t// \tdataType: 'jsonp',\n\t\t// \tsuccess: function(json){\n\t\t// \t\tconsole.log(json.data);\n\t\t// \t\tif (json.data.list.length > 0){\n\t\t// \t\t\tstopId = json.data.list[0].id;\n\n\t\t// \t\t}\n\t\t// \t}\n\t\t// });\n\tif (typeof setupAutoComplete === 'function'){\n\t\tsetupAutoComplete();\n\t}\n\n\t\turlParams = jQuery.unparam(window.location.hash);\n\t\t// console.log(params);{}\n\t\tif (typeof urlParams.tab !== 'undefined'){\n\t\t\t$('#' + urlParams.tab + '-link').trigger('click');\n\t\t\tif (typeof urlParams.stopId !== 'undefined'){\n\t\t\t\twindow.setTimeout(function(){\n\t\t\t\t$('#' + urlParams.tab + '-arrivals-btn')\n\t\t\t\t\t.removeClass('disabled')\n\t\t\t\t\t.val(urlParams.stopId)\n\t\t\t\t\t.trigger('click');\n\t\t\t\t}, 200);\n\t\t\t\t\n\t\t\t\t// $(' .stop-code').trigger('click');\n\t\t\t}\n\t\t}\n\t\t$(\".js-data-example-ajax\").change(function(){\n\t\t\tconsole.log(this.value);\n\t\t\tconsole.log($(this).select2('data'));\n\t\t\tvar data = $(this).select2('data') // $(this).select2('data')[0];\n\t\t\tgetEsriGeometry(data, this.id);\n\t\t});\n\t\t$(\".js-data-example-ajax\").select2({\n\t\t\t// placeholder: \"From\",\n\t\t\tallowClear: true,\n\t\t\tajax: {\n\t\t\t\turl: esriUrl + 'suggest?',\n\t\t\t\tdataType: 'jsonp',\n\t\t\t\tdelay: 250,\n\t\t\t\tdata: function (term, page) {\n\t\t\t\t\treturn {\n\t\t\t\t\t\ttext: term, // search term\n\t\t\t\t\t\t// page: params.page,\n\t\t\t\t\t\t// outFields: 'City,Region',\n\t\t\t\t\t\tf: 'json',\n\t\t\t\t\t\tdistance: 20000,\n\t\t\t\t\t\tsearchExtents: '-85.386,34.618,-83.269,32.844',\n\t\t\t\t\t\tlocation: '-84.383149,33.750855',\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tresults: function (data, page) {\n\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t// parse the results into the format expected by Select2.\n\t\t\t\t\t// since we are using custom formatting functions we do not need to\n\t\t\t\t\t// alter the remote JSON data\n\t\t\t\t\tvar res = data.suggestions;\n\t\t\t\t\tvar array = []\n\t\t\t\t\t$.each(res, function(i, item){\n\t\t\t\t\tvar arrItem = {\n\t\t\t\t\tid: item.magicKey,\n\t\t\t\t\ttext: item.text\n\t\t\t\t\t};\n\t\t\t\t\tarray.push(arrItem);\n\t\t\t\t\t});\n\t\t\t\t\treturn {\n\t\t\t\t\t\tresults: array\n\t\t\t\t\t};\n\t\t\t\t},\n\t\t\t\tcache: true\n\t\t\t},\n\t\t\t// escapeMarkup: function (markup) { return markup; }, // let our custom formatter work\n\t\t\tminimumInputLength: 3,\n\t\t\ttemplateResult: function (option) {\n\t\t\t\treturn '<div class=\"clearfix\">' + option.text + '</div>';\n\t\t\t},\n\t\t\ttemplateSelection: function (option) {\n\t\t\t\treturn option.text;\n\t\t\t}\n\t\t});\n\t\tvar routeTypeMap = {\n\t\t\t'0': 'Tram',\n\t\t\t'1': 'Subway',\n\t\t\t'2': 'Rail',\n\t\t\t'3': 'Bus',\n\t\t\t'4': 'Ferry',\n\t\t\t'5': 'Cable',\n\t\t\t'6': 'Gondola',\n\t\t\t'7': 'Funicular'\n\t\t};\n\t\t// Geolocation\n\t\tif (\"geolocation\" in navigator) {\n\t\t\t/* geolocation is available */\n\t\t\tconsole.log('geolocation');\n\t\t\tconsole.log(navigator);\n\t\t\t\n\t\t\t// Check if geolocation is enabled\n\t\t\tnavigator.geolocation.getCurrentPosition(function(position) {\n\t\t\t\tgeolocationBool = true;\n\t\t\t\tlat = position.coords.latitude;\n\t\t\t\tlon = position.coords.longitude;\n\t\t\t\tconsole.log([position.coords.latitude, position.coords.longitude]);\n\t\t\t}, function (error) {\n\t\t\t  if (error.code == error.PERMISSION_DENIED)\n\t\t\t      console.log(\"you denied me :-(\");\n\t\t\t});\n\t\t} else {\n\t\t\t/* geolocation IS NOT available */\n\t\t}\n\t\t// Check if agency data exists\n\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/agencies-with-coverage.json?';\n\t\tvar params = {};\n\t\t// params.id = agencyId;\n\t\tparams.key = 'TEST';\n\t\turl += serialize(params);\n\t\t$.ajax({\n\t\t\turl: url,\n\t\t\tdataType: 'jsonp',\n\t\t\tsuccess: function(json){\n\t\t\t\tconsole.log(json.data.list);\n\t\t\t\tvar agencies = json.data.list;\n\t\t\t\t$.each(agencies, function(i, agency) {  \n\t\t\t\t\t$('.arrivals-agencies option[value='+agency.agencyId+']').removeAttr('disabled');\n\t\t\t\t});\n\t\t\t}\n\t\t}); // end ajax\n\n\t\t// Go back to previous view on planner widget carousels\n\t\t$('.planner-tab-li').click(function(e){\n\t\t\tvar widgetClass;\n\t\t\tif ($(this).hasClass('stop-code')){\n\t\t\t\twidgetClass = 'stop-code';\n\t\t\t}\n\t\t\telse{\n\t\t\t\twidgetClass = 'next';\n\t\t\t}\n\t\t\tif($(this).hasClass('active') && $('#' + widgetClass + '-carousel-inner > .active').index() === 1){\n\t\t\t\t// console.log('this is active');\n\t\t\t\t$('#' + widgetClass + '-back-btn').trigger('click');\n\t\t\t}\n\t\t});\n\t\t\n\t\t// Real-time agency select change\n\t\t$('input[type=radio][name=agency-arrivals-option], #next-arrivals-agencies').change(function(){\n\t\t\t$('#next-arrivals-routes').html('<option value=\"\">[Select Route]</option>');\n\t\t\t$('#next-arrivals-trips')\n\t\t\t\t.html('<option value=\"\">[Select Direction]</option>')\n\t\t\t\t.prop('disabled', true);\n\t\t\t$('#next-arrivals-stops')\n\t\t\t\t.html('<option value=\"\">[Select Stop]</option>')\n\t\t\t\t.trigger('change')\n\t\t\t\t.prop('disabled', true);\n\t\t\tconsole.log(this.value);\n\t\t\tif (this.value === 'Nearby'){\n\t\t\t\t$('#get-location').trigger('click');\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\tvar agencyId = this.value;\n\t\t\tlocation.hash = 'agency=' + agencyId;\n\t\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/routes-for-agency/' + agencyId + '.json?';\n\t\t\tvar params = {};\n\t\t\t// params.id = agencyId;\n\t\t\tparams.key = 'TEST';\n\t\t\turl += serialize(params);\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\tdataType: 'jsonp',\n\t\t\t\tsuccess: function(json){\n\t\t\t\t\tconsole.log(json.data);\n\t\t\t\t\tvar routeNest = d3.nest()\n\t\t\t\t\t\t\t.key(function(d) { return d.type; })\n\t\t\t\t\t\t\t.sortValues(compareRouteNames)\n\t\t\t\t\t\t\t.map(json.data.list);\n\t\t\t\t\tconsole.log(routeNest);\n\t\t\t\t\tvar routes = json.data.list;\n\t\t\t\t\t$.each(routeNest, function(type, routes) {  \n\t\t\t\t\t\tvar optgroup = $('<optgroup>');\n\t\t\t\t\t\toptgroup.attr('label',routeTypeMap[type]);\n\t\t\t\t\t\t$.each(routes, function(i, route){\n\t\t\t\t\t\t\tvar option = $(\"<option></option>\");\n\t\t\t\t\t\t\tvar routeFullText = routeTypeMap[type] === 'Subway' ? route.shortName : route.shortName + ' - ' + route.longName;\n\t\t\t\t\t\t\tvar routeText = route.longName === '' ? route.shortName : routeFullText;\n\t\t\t\t\t\t\toption.val(route.id);\n\t\t\t\t\t\t\toption.text(routeText);\n\t\t\t\t\t\t\toptgroup.append(option);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t$('#next-arrivals-routes').append(optgroup);\n\t\t\t\t\t});\n\t\t\t\t\t$('#next-arrivals-routes').prop('disabled', false);\n\t\t\t\t}\n\t\t\t}); // end ajax\n\t\t});\n\t\t// Use location \n\t\t$('#get-location').click(function(){\n\t\t\t$('#next-arrivals-agencies').val('Nearby');\n\t\t\t$('#next-arrivals-routes').html('<option value=\"\">[Select Route]</option>');\n\t\t\t$('#next-arrivals-stops')\n\t\t\t\t.html('<option value=\"\">[Select Stop]</option>')\n\t\t\t\t.trigger('change')\n\t\t\t\t.prop('disabled', true);\n\t\t\t$('#next-arrivals-trips')\n\t\t\t\t.html('<option value=\"\">[Select Direction]</option>')\n\t\t\t\t.prop('disabled', true);;\n\t\t\t$(this).val(moment().unix());\n\t\t\tif (geolocationBool && typeof lat !== 'undefined'){\n\t\t\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/routes-for-location.json?';\n\t\t\t\tvar params = {};\n\t\t\t\tparams.lat = lat;\n\t\t\t\tparams.lon = lon;\n\t\t\t\tparams.radius = 4000;\n\t\t\t\tparams.key = 'TEST';\n\t\t\t\turl += serialize(params);\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: url,\n\t\t\t\t\tdataType: 'jsonp',\n\t\t\t\t\tsuccess: function(json){\n\t\t\t\t\t\tconsole.log(json.data);\n\t\t\t\t\t\tvar routeNest = d3.nest()\n\t\t\t\t\t\t\t.key(function(d) { return d.agencyId; })\n\t\t\t\t\t\t\t.map(json.data.list);\n\t\t\t\t\t\tconsole.log(routeNest);\n\t\t\t\t\t\tvar agencyCount = 0;\n\t\t\t\t\t\tvar firstValue;\n\t\t\t\t\t\t$.each(routeNest, function(agency, routes) {  \n\t\t\t\t\t\t\tvar optgroup = $('<optgroup>');\n\t\t\t\t\t\t\toptgroup.attr('label',agency);\n\t\t\t\t\t\t\t$.each(routes, function(i, route){\n\t\t\t\t\t\t\t\tvar option = $(\"<option></option>\");\n\t\t\t\t\t\t\t\tif (agencyCount === 0 || i === 0){\n\t\t\t\t\t\t\t\t\tfirstValue = route.id;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar routeFullText = routeTypeMap[route.type] === 'Subway' ? route.shortName : route.shortName + ' - ' + route.longName;\n\t\t\t\t\t\t\t\tvar routeText = route.longName === '' ? route.shortName : routeFullText;\n\t\t\t\t\t\t\t\toption.val(route.id);\n\t\t\t\t\t\t\t\toption.text(routeText);\n\t\t\t\t\t\t\t\toptgroup.append(option);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t    $('#next-arrivals-routes').append(optgroup);\n\t\t\t\t\t\t    agencyCount++;\n\t\t\t\t\t\t});\n\t\t\t\t\t\t// $('#next-arrivals-routes').val(firstValue);\n\t\t\t\t\t\t$('#next-arrivals-routes').prop('disabled', false);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\telse{\n\t\t\t\tconsole.log('no geolocation available');\n\t\t\t}\n\t\t});\n\t\t// Select route change\n\t\t$('#next-arrivals-routes').change(function(){\n\t\t\tvar widgetClass;\n\t\t\tif ($(this).hasClass('nearby')){\n\t\t\t\twidgetClass = 'nearby';\n\t\t\t}\n\t\t\telse{\n\t\t\t\twidgetClass = 'next';\n\t\t\t}\n\t\t\t$('#next-arrivals-stops')\n\t\t\t\t.html('<option value=\"\">[Select Stop]</option>')\n\t\t\t\t.trigger('change')\n\t\t\t\t.prop('disabled', true);\n\t\t\t$('#next-arrivals-trips').html('<option value=\"\">[Select Direction]</option>');\n\t\t\tconsole.log(this.value);\n\t\t\tvar routeId = this.value;\n\t\t\tlocation.hash += '&route=' + routeId;\n\t\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/stops-for-route/' + routeId + '.json?';\n\t\t\tvar params = {};\n\t\t\tparams.key = 'TEST';\n\t\t\tparams.includePolylines = false;\n\t\t\turl += serialize(params);\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\tdataType: 'jsonp',\n\t\t\t\tsuccess: function(json){\n\t\t\t\t\tvar closestDistance = 10000000000;\n\t\t\t\t\tvar closestStop = '';\n\t\t\t\t\tvar selectedTrip;\n\t\t\t\t\tvar stopGroups = json.data.entry.stopGroupings[0].stopGroups;\n\t\t\t\t\tconsole.log(json.data.entry.stopGroupings[0].stopGroups);\n\t\t\t\t\tconsole.log(json.data);\n\t\t\t\t\tvar stopMap = d3.nest()\n\t\t\t\t\t\t.key(function(d) { return d.id; })\n\t\t\t\t\t\t.map(json.data.references.stops);\n\t\t\t\t\tvar tripMap = d3.nest()\n\t\t\t\t\t\t// .key(function(d) { return d.name.name; })\n\t\t\t\t\t\t// .key(function(d) { return d.tripHeadsign; })\n\t\t\t\t\t\t.key(function(d) { return d.id; })\n\t\t\t\t\t\t.map(stopGroups);\n\t\t\t\t\tconsole.log(stopMap);\n\t\t\t\t\tconsole.log(tripMap);\n\t\t\t\t\tconsole.log(routeId);\n\t\t\t\t\t// console.log(tripMap[routeId]);\n\t\t\t\t\tvar headsigns = [];\n\t\t\t\t\tvar tripCounter = 0;\n\t\t\t\t\t$.each(stopGroups, function(i, trip){\n\t\t\t\t\t\t// var tripId = trip.tripId;\n\t\t\t\t\t\t// console.log(trip.schedule.stopTimes);\n\t\t\t\t\t\t\n\t\t\t\t\t\t// if (typeof tripMap[routeId][tripId] !== 'undefined' && tripMap[routeId][tripId][0].routeId === routeId && headsigns.indexOf(tripMap[routeId][tripId][0].tripHeadsign) === -1){\n\t\t\t\t\t\t\t// var headsign = tripMap[routeId][tripId][0].tripHeadsign;\n\t\t\t\t\t\t\t// headsigns.push(headsign);\n\t\t\t\t\t\t\tvar tripLabel = trip.name.name === '' ? trip.id : trimHeadsign(trip.name.name);\n\t\t\t\t\t\t\ttripLabel = +tripLabel === 1 ? 'Inbound' : tripLabel;\n\t\t\t\t\t\t\ttripLabel = +tripLabel === 0 ? 'Outbound' : tripLabel;\n\t\t\t\t\t\t\tconsole.log(tripLabel)\n\t\t\t\t\t\t\tvar tripOption = $(\"<option></option>\");\n\t\t\t\t\t\t\ttripOption.val(trip.id);\n\t\t\t\t\t\t\ttripOption.text(tripLabel);\n\t\t\t\t\t\t\t$('#next-arrivals-trips').append(tripOption);\n\t\t\t\t\t\t\tvar optgroup = $('<optgroup>');\n\t\t\t\t\t\t\toptgroup.attr('id', trip.id);\n\t\t\t\t\t\t\toptgroup.attr('label',tripLabel);\n\t\t\t\t\t\t\tif (tripCounter === 0){\n\t\t\t\t\t\t\t\tselectedTrip = trip.id;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\toptgroup.addClass('hidden-optgroup');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t$.each(trip.stopIds, function(j, stopId){\n\t\t\t\t\t\t\t\tvar stop = stopMap[stopId][0];\n\t\t\t\t\t\t\t\t// console.log(stop)\n\t\t\t\t\t\t\t\tvar distance = \"\";\n\t\t\t\t\t\t\t\tif (typeof lat !== \"undefined\" && geolocationBool){\n\t\t\t\t\t\t\t\t\tdistance = getDistanceFromLatLonInKm(stop.lat, stop.lon, lat, lon);\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (tripCounter === 0){\n\t\t\t\t\t\t\t\t\t\tif (distance < closestDistance){\n\t\t\t\t\t\t\t\t\t\t\tclosestDistance = distance;\n\t\t\t\t\t\t\t\t\t\t\tclosestStop = stop.id;\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar option = $(\"<option></option>\");\n\t\t\t\t\t\t\t\toption.val(stop.id);\n\t\t\t\t\t\t\t\tif (geolocationBool && typeof lat != 'undefined'){\n\t\t\t\t\t\t\t\t\toption.attr('distance', distance);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tvar stopName = cleanStopName(stop.name);\n\t\t\t\t\t\t\t\tvar stopDir = stop.direction !== '' ? '(' + stop.direction + ') ' : '';\n\t\t\t\t\t\t\t\toption.text(stopDir + stopName);\n\t\t\t\t\t\t\t\toptgroup.append(option);\n\t\t\t\t\t\t\t\t// $('#' + widgetClass + '-arrivals-stops').append(option);\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t$('#' + widgetClass + '-arrivals-stops').append(optgroup);\n\t\t\t\t\t\t\ttripCounter++;\n\t\t\t\t\t\t// } // end if valid trip for route\n\n\t\t\t\t\t}); // end each trip\n\t\t\t\t\tvar $stops = $('#next-arrivals-stops');\n\t\t\t\t\t$('#next-arrivals-trips').prop('disabled', false);\n\t\t\t\t\t$('#next-arrivals-trips').val(selectedTrip);\n\t\t\t\t\t$stops.prop('disabled', false);\n\t\t\t\t\tif (geolocationBool && typeof lat !== 'undefined'){\n\t\t\t\t\t\t$stops.val(closestStop);\n\t\t\t\t\t}\n\t\t\t\t\tif ($stops.val() !== ''){\n\t\t\t\t\t\t$stops.trigger('change');\n\t\t\t\t\t}\n\t\t\t\t\tif ($('#next-arrivals-stops').val() !== ''){\n\t\t\t\t\t\t$('#next-arrivals-btn').prop('disabled', false);\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t$('#next-arrivals-btn').prop('disabled', true);\n\t\t\t\t\t}\n\t\t\t\t} // end success\n\t\t\t}); // end ajax\n\t\t});\n\t\t// $('.arrivals-routes').change(function(){\n\t\t// });\n\t\tvar previousTrip;\n\t\t$('#next-arrivals-trips')\n\t\t\t.on('focus', function () {\n\t\t\t\t// Store the current value on focus and on change\n\t\t\t\tpreviousTrip = this.value;\n\t\t    }).change(function(){\n\t\t    \tvar closestDistance = 10000000000;\n\t\t\t\tvar closestStop = '';\n\t\t\t\tconsole.log(this.value);\n\t\t\t\t$('#' + previousTrip).addClass('hidden-optgroup');\n\t\t\t\t$('#' + this.value).removeClass('hidden-optgroup');\n\t\t\t\tif (geolocationBool){\n\t\t\t\t\t$('#' + this.value + ' > option').each(function(){\n\t\t\t\t\t\tvar distance = $(this).attr('distance');\n\t\t\t\t\t\tconsole.log(distance);\n\t\t\t\t\t\tif (distance < closestDistance){\n\t\t\t\t\t\t\tclosestDistance = distance;\n\t\t\t\t\t\t\tclosestStop = this.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tconsole.log(closestStop);\n\t\t\t\tvar $stops = $('#next-arrivals-stops');\n\t\t\t\tif (closestStop !== ''){\n\t\t\t\t\t$stops.val(closestStop);\n\t\t\t\t\tif ($stops.val() !== ''){\n\t\t\t\t\t\t$stops.trigger('change');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t});\n\t\t$('#next-arrivals-stops').change(function(){\n\t\t\tvar stopId = this.value;\n\t\t\tconsole.log(stopId);\n\t\t\tif (stopId !== ''){\n\t\t\t\t$('#next-arrivals-btn')\n\t\t\t\t\t.removeClass('disabled')\n\t\t\t\t\t.removeAttr('disabled')\n\t\t\t\t\t.val(stopId);\n\t\t\t\t\n\t\t\t\tlocation.hash += '&stop=' + stopId;\n\n\t\t\t\t$('.get-schedules').removeClass('disabled');\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$('#next-arrivals-btn')\n\t\t\t\t\t.addClass('disabled')\n\t\t\t\t\t.attr('disabled', 'disabled')\n\t\t\t\t\t.val('');\n\t\t\t\t$('.get-schedules').addClass('disabled');\n\t\t\t}\n\t\t});\n\t\t$('#stop-code').on('keyup', function(e){\n\t\t\tvar tableId = '#stop-code-arrivals-table';\n\t\t\tvar table = $(tableId);\n\t\t\t\n\t\t\tvar stopCode = $('#stop-code').val() === '' ? '103134' : $('#stop-code').val();\n\t\t\tif (this.value.length < 6){\n\t\t\t\tconsole.log(this.value);\n\t\t\t\t$('#stop-code-error-msg').html('Please enter a valid <strong>six-digit</strong> stop ID.');\n\t\t\t\t$('#stop-code-arrivals-btn')\n\t\t\t\t\t.addClass('disabled')\n\t\t\t\t\t.val('');\n\t\t\t}\n\t\t\telse if (this.value.length === 6){\n\t\t\t\tconsole.log(e);\n\t\t\t\tconsole.log(this.value);\n\t\t\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/stops-for-location.json?';\n\t\t\t\tvar params = {};\n\t\t\t\tparams.query = stopCode;\n\t\t\t\tparams.key = 'TEST';\n\t\t\t\turl += serialize(params);\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: url,\n\t\t\t\t\tdataType: 'jsonp',\n\t\t\t\t\tsuccess: function(json){\n\t\t\t\t\t\tconsole.log(json.data);\n\t\t\t\t\t\tif (json.data.list.length > 0){\n\t\t\t\t\t\t\tstopId = json.data.list[0].id;\n\t\t\t\t\t\t\tstopName = cleanStopName(json.data.list[0].name);\n\t\t\t\t\t\t\t// $('.get-next-stop-code').removeClass('btn-danger').addClass('btn-primary');\n\t\t\t\t\t\t\t$('#stop-code-arrivals-btn')\n\t\t\t\t\t\t\t\t.removeClass('disabled')\n\t\t\t\t\t\t\t\t.val(stopId);\n\t\t\t\t\t\t\t$('#stop-code-error-msg').html('Stop: <strong>' + stopName + '</strong>');\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\ttable.hide();\n\t\t\t\t\t\t\t$('#nearby-arrival-msg').text('No arrivals.');\n\t\t\t\t\t\t\t$('#nearby-arrival-msg').show();\n\t\t\t\t\t\t\t$('#stop-code-error-msg').html('Unknown stop ID.');\n\t\t\t\t\t\t\t$('#stop-code-arrivals-btn')\n\t\t\t\t\t\t\t\t.addClass('disabled')\n\t\t\t\t\t\t\t\t.val('');;\n\t\t\t\t\t\t\t// $('.get-next-stop-code').removeClass('btn-primary').addClass('btn-danger');\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t} // end if stop code length === 6\n\t\t\telse {\n\t\t\t\t$('#stop-code-arrivals-btn')\n\t\t\t\t\t.addClass('disabled')\n\t\t\t\t\t.val('');\n\t\t\t\t$('#stop-code-error-msg').html('Please enter a valid <strong>six-digit</strong> stop ID.');\n\t\t\t}\n\t\t});\n\t\t$('.get-arrivals').click(function(){\n\t\t\tvar widgetClass, stopId;\n\t\t\t\n\t\t\tif ($(this).hasClass('stop-code')){\n\t\t\t\twidgetClass = 'stop-code';\n\t\t\t}\n\t\t\telse{\n\t\t\t\twidgetClass = 'next';\n\t\t\t}\n\t\t\tvar tableId = '#' + widgetClass + '-arrivals-table';\n\t\t\tvar table = $(tableId);\n\t\t\tstopId = $('#' + widgetClass + '-arrivals-btn').val();\n\n\t\t\tconsole.log(stopId);\n\t\t\tconsole.log(widgetClass);\n\t\t\tif (stopId !== ''){\n\t\t\t\t// console.log('stop coding it up');\n\t\t\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/arrivals-and-departures-for-stop/' + stopId + '.json?';\n\t\t\t\tvar params = {};\n\t\t\t\tparams.key = 'TEST';\n\t\t\t\tparams.minutesBefore = 1;\n\t\t\t\turl += serialize(params);\n\t\t\t\t$.ajax({\n\t\t\t\t\turl: url,\n\t\t\t\t\tdataType: 'jsonp',\n\t\t\t\t\tsuccess: function(json){\n\t\t\t\t\t\tvar arrivals = json.data.entry.arrivalsAndDepartures;\n\t\t\t\t\t\tconsole.log(json.data);\n\t\t\t\t\t\tvar stopMap = d3.nest()\n\t\t\t\t\t\t\t.key(function(d) { return d.id; })\n\t\t\t\t\t\t\t.map(json.data.references.stops);\n\n\t\t\t\t\t\tconsole.log(json.data.entry.arrivalsAndDepartures);\n\t\t\t\t\t\tif (arrivals.length > 0){\n\t\t\t\t\t\t\tstopName = stopMap[json.data.entry.stopId][0].name;\n\t\t\t\t\t\t\t$('#' + widgetClass + '-stop-id').html(cleanStopName('Stop ID: ' + stopId.split('_')[1]));\n\t\t\t\t\t\t\t$('#' + widgetClass + '-stop-name').html(cleanStopName(stopName));\n\t\t\t\t\t\t\t$('#' + widgetClass + '-last-updated .time').html(moment(arrivals[0].lastUpdateTime).format('h:mm a'));\n\t\t\t\t\t\t\t$('#nearby-arrival-msg').hide();\n\t\t\t\t\t\t\ttable.show();\n\t\t\t\t\t\t\ttable.empty();\n\n\t\t\t\t\t\t\t// var header = $('<thead>');\n\t\t\t\t\t\t\t// header.append('<tr><')\n\t\t\t\t\t\t\ttable.append('<thead><tr><th>Route</th><th>Minutes</th><th>Direction</th></tr></thead>');\n\t\t\t\t\t\t\tvar tbody = $('<tbody>');\n\t\t\t\t\t\t\tvar data = [];\n\t\t\t\t\t\t\tfor (var i = 0; i < arrivals.length; i++) {\n\t\t\t\t\t\t\t\t// if (i < 8) {\n\t\t\t\t\t\t\t\t\tvar predicted = arrivals[i].predictedArrivalTime ? true : false;\n\t\t\t\t\t\t\t\t\tvar seconds = arrivals[i].predictedArrivalTime || arrivals[i].scheduledArrivalTime;\n\t\t\t\t\t\t\t\t\tvar diff = seconds - moment().valueOf();\n\t\t\t\t\t\t\t\t\tvar routeName = arrivals[i].routeShortName;\n\t\t\t\t\t\t\t\t\t// console.log(diff);\n\t\t\t\t\t\t\t\t\t// var minutes = String(Math.floor(divisor_for_minutes / 60));\n\t\t\t\t\t\t\t\t\tvar fromNow = Math.floor(diff/60/1000);//moment(seconds).toNow(true)//.replace('minutes', '').replace('a few seconds', '<strong>NOW</strong>').replace('a minute', '<strong>NOW</strong>');\n\t\t\t\t\t\t\t\t\tvar fromNowText = fromNow <= 1 ? '<strong>NOW</strong>' : fromNow;\n\t\t\t\t\t\t\t\t\tvar headsign = trimHeadsign(arrivals[i].tripHeadsign);\n\t\t\t\t\t\t\t\t\tvar patt = new RegExp(\"Airport\");\n\t\t\t\t\t\t\t\t\tif (patt.test(headsign)){\n\t\t\t\t\t\t\t\t\t\theadsign += ' <i class=\"fa fa-plane\"></i>';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t// data.push([\n\t\t\t\t\t\t\t\t\t// \tarrivals[i].routeShortName, \n\t\t\t\t\t\t\t\t\t// \tfromNow, \n\t\t\t\t\t\t\t\t\t// \theadsign, \n\t\t\t\t\t\t\t\t\t// \t+seconds\n\t\t\t\t\t\t\t\t\t// ]);\n\t\t\t\t\t\t\t\t\tvar row = $('<tr class=\"info\">');\n\t\t\t\t\t\t\t\t\tif (predicted){\n\t\t\t\t\t\t\t\t\t\tfromNowText += ' <i style=\"font-size:0.7em;\" alt=\"Predicted arrival time\" title=\"Predicted arrival time\" class=\"fa fa-bolt\"></i>';\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\trow.append('<td><span class=\"'+labelMap[routeName]+'\">' + routeName + '</span></td>');\n\t\t\t\t\t\t\t\t\trow.append('<td data-order=\"'+fromNow+'\">' + fromNowText + '</td>');\n\t\t\t\t\t\t\t\t\trow.append('<td>' + headsign + '</td>');\n\t\t\t\t\t\t\t\t\ttbody.append(row);\n\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\ttable.append(tbody);\n\t\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\t\tif ( $.fn.dataTable.isDataTable(tableId) ) {\n\t\t\t\t\t\t\t\tarrivalsDatatable = table.DataTable();\n\t\t\t\t\t\t\t\t// arrivalsDatatable.clear();\n\t\t\t\t\t\t\t\t// arrivalsDatatable.rows.add(data);\n\t\t\t\t\t\t\t\t// arrivalsDatatable.draw();\n\t\t\t\t\t\t\t\tarrivalsDatatable.destroy();\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// else {\n\t\t\t\t\t\t\t\tarrivalsDatatable = table.DataTable( {\n\t\t\t\t\t\t\t\t\t\"order\": [[ 1, \"asc\" ]],\n\t\t\t\t\t\t\t\t\t// \"columns\": [\n\t\t\t\t\t\t\t\t\t// \t{\"title\": \"Route\"},\n\t\t\t\t\t\t\t\t\t// \t{\"title\": \"Minutes\"},\n\t\t\t\t\t\t\t\t\t// \t{\"title\": \"Direction\"},\n\t\t\t\t\t\t\t\t\t// \t{\"title\": \"diff\", \"type\": \"num\"}\n\t\t\t\t\t\t\t\t\t// ],\n\t\t\t\t\t\t\t\t\t// \"columnDefs\": [\n\t\t\t\t\t\t\t\t\t// \t// \"targets\": [ 2 ],\n\t\t\t\t\t\t\t\t\t// \t// \"visible\": false\n\t\t\t\t\t\t\t\t\t// \t// { \"type\": \"num\", \"targets\": 0 }\n\t\t\t\t\t\t\t\t\t// \t{ \"visible\": false, \"targets\": 3 },\n\t\t\t\t\t\t\t\t\t// \t// { \"orderData\": 1,    \"targets\": 3 },\n\t\t\t\t\t\t\t\t\t// ],\n\t\t\t\t\t\t\t\t\t// \"data\": data,\n\t\t\t\t\t\t\t\t\t\"paging\": false,\n\t\t\t\t\t\t\t\t\t// \"pageLength\": 6,\n\t\t\t\t\t\t\t\t\t// \"ordering\": false,\n\t\t\t\t\t\t\t\t\t\"info\": false,\n\t\t\t\t\t\t\t\t\t\"bFilter\": false\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t} // end if there are arrivals in the list\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\ttable.hide();\n\t\t\t\t\t\t\t$('#' + widgetClass + '-stop-name').html('');\n\t\t\t\t\t\t\t$('#' + widgetClass + '-last-updated').html('');\n\t\t\t\t\t\t\t$('#' + widgetClass + '-arrival-msg').text('No arrivals in the next 30 minutes.');\n\t\t\t\t\t\t\t$('#' + widgetClass + '-arrival-msg').show();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\tif (widgetClass === 'next'){\n\t\t\t\t$('#next-carousel').carousel('next');\n\t\t\t}\n\t\t});\n\t\t$('.plan-control').change(function(){\n\n\t\t});\n\t\t$(\".planner-go-btn\").click(function(){\n\t\t\tvar params = {};\n\t\t\t// var plannerChoice = $('.planner-choice-btn').val();\n\t\t\tvar plannerChoice = $(this).text();\n\t\t\tvar origin = $('#planner-options-from-latlng').val();\n\t\t\tvar destination = $('#planner-options-dest-latlng').val();\n\t\t\tvar time = $('#planner-timepicker').val();\n\t\t\tif (origin && destination && time){\n\t\t\t\t// Continue with trip plan\n\t\t\t}\n\t\t\telse {\n\t\t\t\t$('#planner-message')\n\t\t\t\t\t.fadeIn()\n\t\t\t\t\t.html('Please add a valid origin, destination, and time.')\n\t\t\t\t\t.delay(2000)\n\t\t\t\t\t.fadeOut('slow');\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (/Google/.test(plannerChoice)){\n\t\t\t\tparams.saddr = origin;\n\t\t\t    params.daddr = destination;\n\t\t\t    params.dirflg = 'r';\n\t\t\t\tvar googUrl = 'http://maps.google.com/?';\n\t\t\t\t// window.location.href = googUrl + serialize(params); \n\t\t\t\twindow.open(googUrl + serialize(params),'_blank');\n\t\t\t}\n\t\t\telse{\n\t\t\t\tparams.fromPlace = origin;\n\t\t\t    params.toPlace = destination;\n\t\t\t    params.arriveBy = $(\".planner-time-btn:first-child\").val() === 'Arrive by' ? true : false;\n\t\t\t    params.date = moment().format('YYYY-MM-DD');\n\t\t\t    params.time = $(\".planner-time-btn:first-child\").val() === 'Leave now' ? moment().valueOf() : getTime();\n\t\t\t    params.fromName = $('#planner-options-from').val() // $('#from').select2('data')[0].text;\n\t\t\t\t// params.toPlace = $('#planner-options-dest-latlng').val();\n\t\t\t\tparams.toName = $('#planner-options-dest').val() // $('#to').select2('data')[0].text;\n\t\t\t\tparams.mode = 'TRANSIT,WALK'; // $('input[name=mode-select]:checked').val()\n\t\t\t\tvar atltransitUrl = '/plan#';\n\t\t\t\t// console.log(atltransitUrl + serialize(params));\n\t\t\t\twindow.location.href = atltransitUrl + serialize(params);\n\t\t\t}\n\t\t\t// window.location.href='{{ site.baseurl }}/plan' + params;\n\t\t});\n\t    $(\".planner-time-menu li a\").click(function(){\n\n\t      $(\".planner-time-btn:first-child\").html('<i class=\"fa fa-clock-o right-5\"></i>' + $(this).text() + '<i class=\"fa fa-caret-down left-5\"></i>');\n\t      $(\".planner-time-btn:first-child\").val($(this).text());\n\t      var val = $(\".planner-time-btn:first-child\").val();\n\t      if (val === 'Depart at' || val === 'Arrive by'){\n\t      \t$('#planner-options-inputgroup-time').show();\n\t      }\n\t      else{\n\t      \t$('#planner-options-inputgroup-time').hide();\n\t      }\n\t   });\n\n\t   $(\".planner-choice-menu li a\").click(function(){\n\t      $(\".planner-choice-btn:first-child\").html($(this).text());\n\t      $(\".planner-choice-btn:first-child\").val($(this).text());\n\t   });\n\t //   $('.box').click(function() {\n\n\t\t//     $(this).animate({\n\t\t//         left: '-50%'\n\t\t//     }, 500, function() {\n\t\t//         $(this).css('left', '150%');\n\t\t//         $(this).appendTo('#box-container');\n\t\t//     });\n\n\t\t//     $(this).next().animate({\n\t\t//         left: '50%'\n\t\t//     }, 500);\n\t\t// });\n\t\t$('#trig').on('click', function () {\n\t\t    $('#col1').toggleClass('col-md-12 col-md-3');\n\t\t    $('#col2').toggleClass('col-md-0 col-md-9');\n\t\t});\n\t});\n// }","function compareRouteNames (a, b) { return a.shortName - b.shortName; }\nfunction findBootstrapEnvironment () {\n  var envs = ['xs', 'sm', 'md', 'lg']\n\n  $el = $('<div>')\n  $el.appendTo($('body'))\n\n  for (var i = envs.length - 1; i >= 0; i--) {\n    var env = envs[i]\n\n    $el.addClass('hidden-' + env)\n    if ($el.is(':hidden')) {\n      $el.remove()\n      return env\n    }\n  }\n}\n// function setupAutoComplete(inputId){\n//   console.log('setting up autocomplete for ' + inputId)\n//   if (typeof inputId !== 'undefined'){\n//     $( \"#\" + inputId ).autocomplete({\n//           autoFocus: true,\n//           minLength: 0,\n//           //appendTo: \"#planner-options-from-autocompletecontainer\",\n//           messages : Locale.autocompleteMessages,\n//           source: Geocoder.geocoder,\n//           search: function( event, ui ) {\n//               $( \"#\" + inputId + \"-latlng\" ).val( \"\" )\n//           },\n//           focus: function( event, ui ) {\n//               // $( \"#planner-options-from\" ).val( ui.item.label )\n//               //$( \"#planner-options-from-latlng\" ).val( ui.item.latlng )\n//               console.log('focus up toPlace')\n//               return false\n//           },\n//       select: function( event, ui ) {\n//         $( \"#project-description\" ).html( ui.item.desc )\n//         console.log(ui.item)\n//         var point\n//         if (typeof markers['originMarker'] !== 'undefined'){\n//           map.removeLayer(markers['originMarker'])\n//         }\n//         if (/Your location/g.test(ui.item.label)){\n//           console.log('your location selected')\n//           $( \"#\" + inputId ).val( ui.item.desc )\n//           point = ui.item.desc.split(\",\")\n//           if (typeof map !== 'undefined'){\n//             addMarker({lat:Number(point[0]),lng:Number(point[1])}, ui.item.label, \"originMarker\", 'form')\n//           }\n//           $( \"#planner-options-from-latlng\" ).val( ui.item.desc )\n//           return false\n//         }\n//         else{\n//           $( \"#\" + inputId ).val( ui.item.label )\n//           var params = {\n//             text: ui.item.label,\n//             magicKey: ui.item.key,\n//             f: 'pjson'\n//           }\n//           $.ajax(esri_url + 'find', {\n//             data : params,\n//             success: function( data ) {\n//             var json = JSON.parse(data)\n//             console.log(json)\n//             var geometry = json.locations[0].feature.geometry\n//             if (typeof map !== 'undefined'){\n//               addMarker({lat:Number(geometry.y),lng:Number(geometry.x)}, ui.item.label, \"originMarker\", 'form')\n//             }\n//             $( \"#\" + inputId + \"-latlng\" ).val( geometry.y + ',' + geometry.x )\n//             return false\n//                   }\n//                 })\n//               } \n//           }\n\n//       })\n//     .focus(function(){\n//       console.log('focus')\n//       if (typeof lat !== 'undefined'){\n//         $(this).autocomplete('search')\n//       }\n//       console.log(this.id)\n//     })\n//     .data(\"ui-autocomplete\")._renderItem = function (ul, item) {\n//       return $(\"<li></li>\")\n//         .data(\"item.autocomplete\", item)\n//         .append(\"<b>\" + item.label + \"</b><br>\" + item.desc) //+ \"</a>\")\n//         .appendTo(ul)\n//     }\n//   }\n// }\nfunction setupDatetime () {\n  // if(Modernizr.inputtypes.time){\n  $('#planner-options-timeformat').hide()\n  $('#planner-options-timeformat').attr('aria-hidden', true)\n  // }\n  setTime(currentTime)\n  function pad (n) { return n < 10 ? '0' + n : n }\n  var date = currentTime.year() + '-' + pad(currentTime.month() + 1) + '-' + pad(currentTime.date())\n  setDate(date)\n  if (typeof $().datepicker === 'function') {\n    $('#planner-options-date').datepicker({\n      dateFormat: Locale.dateFormat,\n      dayNames: Locale.days,\n      dayNamesMin: Locale.daysMin,\n      monthNames: Locale.months,\n      defaultDate: 0,\n      hideIfNoPrevNext: true,\n      minDate: whitelabel_minDate,\n      maxDate: whitelabel_maxDate\n    })\n  } else {\n    console.log('error no datetimepicker')\n  }\n  /* Read aloud the selected dates */\n  $(document).on('mouseenter', '.ui-state-default', function () {\n    var text = $(this).text() + ' ' + $('.ui-datepicker-month', $(this).parents()).text() + ' ' + $('.ui-datepicker-year', $(this).parents()).text()\n    $('#planner-options-date-messages').text(text)\n  })\n\n  // if(Modernizr.inputtypes.date){\n  $('#planner-options-dateformat').hide()\n  $('#planner-options-dateformat').attr('aria-hidden', true)\n// }\n}\nfunction setDate (iso8601) {\n  parts = iso8601.split('-')\n  var d = moment(iso8601)\n  $('#planner-options-date').val(d.format('MM-DD-YYYY'))\n}\nfunction setTime (iso8601) {\n  // if(Modernizr.inputtypes.time){\n  //     $('#planner-options-time').val(iso8601.slice(0,5))\n  // }else{\n  console.log(iso8601)\n  input = moment(iso8601, 'hh:mm a')\n  // var secs = parseInt(val[0])*60*60+parseInt(val[1])*60\n  // var hours = String(Math.floor(secs / (60 * 60)) % 24)\n  // var divisor_for_minutes = secs % (60 * 60)\n  // var minutes = String(Math.floor(divisor_for_minutes / 60))\n  console.log(input.format('HH:mm'))\n\n  $('#planner-options-time').val(input.format('HH:mm'))\n// }\n}\n\nfunction getDate () {\n  return moment($('#planner-options-date').val(), 'MM-DD-YYYY').format('YYYY-MM-DD')\n}\nfunction getTime () {\n  var time = moment($('#planner-options-time').val(), 'HH:mm')\n  return time.format('hh:mm a')\n}\n// Scrolls to anchor tag from subnav link\nfunction scrollToAnchor (aid) {\n  if (typeof aid !== 'undefined') {\n    console.log(aid)\n    var aTag = $(\"[id='\" + aid + \"']\")\n    console.log(aTag)\n    scrollToOffset(aTag.offset().top)\n  } else {\n    scrollToOffset(0)\n  }\n}\n\nfunction scrollToOffset (offset) {\n  $('html,body').animate({\n    scrollTop: offset // - 60\n  }, 'slow')\n}\n\n$('.toc a').click(function (e) {\n  e.preventDefault()\n\n  var hash = $(this).attr('href').split('#')[1]\n  history.pushState(null, null, '#' + hash)\n  scrollToAnchor($(this).attr('href').split('#')[1])\n})\n\n// Set all thumbnails to same height\nfunction equalHeight (group) {\n  var tallest = 0\n\n  group.each(function () {\n    $(this).css({'height': ''})\n    var thisHeight = $(this).height()\n    console.log(thisHeight)\n    if (thisHeight > tallest) {\n      tallest = thisHeight\n    }\n  })\n  console.log('resizing...' + tallest)\n  group.each(function () { $(this).height(tallest); })\n}\n// Bind the function to global jQuery object.\n$.fn.reveal = function () {\n  // Arguments is a variable which is available within all functions\n  // and returns an object which holds the arguments passed.\n  // It is not really an array, so by calling Array.prototype\n  // he is actually casting it into an array.\n  var args = Array.prototype.slice.call(arguments)\n\n  // For each elements that matches the selector:\n  return this.each(function () {\n    // this is the dom element, so encapsulate the element with jQuery.\n    var img = $(this),\n      src = img.data('src')\n\n    // If there is a data-src attribute, set the attribute\n    // src to make load the image and bind an onload event.\n    src && img.attr('src', src).load(function () {\n      // Call the first argument passed (like fadeIn, slideIn, default is 'show').\n      // This piece is like doing img.fadeIn(1000) but in a more dynamic way.\n      img[args[0] || 'show'].apply(img, args.splice(1))\n    })\n  })\n}\n$(document).ready(function () {\n  // Initialize lazy loading\n  // var layzr = new Layzr({\n  //       callback: function() {\n  //         // equalHeight($(\".equal-height\"))\n  //       }\n  // })\n  // $(\"img\").reveal(\"fadeIn\", 1000)\n  // equalHeight($(\".equal-height\")); \n})\n\n// Check equal-height height on resize\n\nvar waitForFinalEvent = (function () {\n  var timers = {}\n  return function (callback, ms, uniqueId) {\n    if (!uniqueId) {\n      uniqueId = \"Don't call this twice without a uniqueId\"\n    }\n    if (timers[uniqueId]) {\n      clearTimeout(timers[uniqueId])\n    }\n    timers[uniqueId] = setTimeout(callback, ms)\n  }\n})()\n\n$(window).resize(function () {\n  waitForFinalEvent(function () {\n    // equalHeight($(\".equal-height\"))\n    // ...\n  }, 500, 'some unique string')\n})\n\njQuery.unparam = function (value) {\n  if (value.length > 1 && value.charAt(0) == '#') {\n    value = value.substring(1)\n  }\n  var\n    // Object that holds names => values.\n    params = {},\n    // Get query string pieces (separated by &)\n    pieces = value.split('&'),\n    // Temporary variables used in loop.\n    pair, i, l\n\n  // Loop through query string pieces and assign params.\n  for (i = 0, l = pieces.length; i < l; i++) {\n    pair = pieces[i].split('=', 2)\n    // Repeated parameters with the same name are overwritten. Parameters\n    // with no value get set to boolean true.\n    params[decodeURIComponent(pair[0])] = (pair.length == 2 ?\n      decodeURIComponent(pair[1].replace(/\\+/g, ' ')) : true)\n  }\n  console.log(params)\n  return params\n}\n// Extended disable function\njQuery.fn.extend({\n  disable: function (state) {\n    return this.each(function () {\n      var $this = $(this)\n      if ($this.is('input, button, a'))\n        this.disabled = state\n      else\n        $this.toggleClass('disabled', state)\n    })\n  }\n})\nfunction trimHeadsign (headsign) {\n  headsign = headsign.split('-').length > 1 ? headsign.split('-')[1] : headsign\n  headsign = headsign.split('TO').length > 1 ? headsign.split('TO')[1] : headsign\n  headsign = headsign.replace(/STATION/i, '')\n  headsign = toTitleCase(headsign)\n\n  return headsign\n}\nfunction cleanStopName (name) {\n  name = name\n    .replace(/(@)(?!\\s)/g, ' @ ')\n    .replace(/(\\/)(?!\\s)/g, ' / ')\n    .replace(/STATION/g, '')\n  name = toTitleCase(name)\n  return name\n\n}\nfunction getDistanceFromLatLonInKm (lat1, lon1, lat2, lon2) {\n  var R = 6371 // Radius of the earth in km\n  var dLat = deg2rad(lat2 - lat1) // deg2rad below\n  var dLon = deg2rad(lon2 - lon1)\n  var a =\n  Math.sin(dLat / 2) * Math.sin(dLat / 2) +\n    Math.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) *\n    Math.sin(dLon / 2) * Math.sin(dLon / 2)\n\n  var c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a))\n  var d = R * c // Distance in km\n  return d\n}\nfunction deg2rad (deg) {\n  return deg * (Math.PI / 180)\n}\nfunction toTitleCase (str) {\n  return str.replace(/\\w\\S*/g, function (txt) {\n    if (/LCI|CTP|TDM|CSX|^NW$|^NE$|^SE$|^SW$|MARTA|GWCC|CNN|^FY$|^ARC$|^SR$|^II$|^STP$|^III$|^US$|CMAQ/g.test(txt))\n      return txt\n    else if (/^IN$|^OF$|^AND$|^FOR$/g.test(txt)) {\n      return txt.toLowerCase()\n    }\n    else\n      return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase()\n  })\n}\nserialize = function (obj, prefix) {\n  var str = []\n  for (var p in obj) {\n    if (obj.hasOwnProperty(p)) {\n      var k = prefix ? prefix + '[' + p + ']' : p, v = obj[p]\n      str.push(typeof v == 'object' ?\n        serialize(v, k) :\n        encodeURIComponent(k) + '=' + encodeURIComponent(v))\n    }\n  }\n  return str.join('&')\n}\nvar bs = findBootstrapEnvironment()\nconsole.log(bs)\nif (bs === 'md' || bs === 'sm') {\n  $('.agency-arrivals-radio').addClass('btn-xs')\n}\n","var whitelabel_prefix = 'http://opentrip.atlantaregion.com/otp-rest-servlet/';\n\nvar whitelabel_minDate = new Date(2014, 02, 08);\nvar whitelabel_maxDate = new Date(2020, 03, 30);\n\nvar Locale = {};\n\nLocale.dateFormat = 'mm-dd-yy';\nLocale.timeFormat = 'h:mma';\nLocale.dateAriaLabel = 'Date, use Ctrl en arrow keys to navigate, enter to choose';\nLocale.loading = \"Loading...\";\nLocale.edit = \"Change trip\";\nLocale.plan = \"Plan trip\";\nLocale.geocoderInput = \"Enter starting address...\";\nLocale.originInput = \"Enter starting address...\";\nLocale.destinationInput = \"Enter destination...\";\nLocale.startpointEmpty = \"No starting point entered\";\nLocale.noStartpointSelected = \"No starting point selected\";\nLocale.destinationEmpty = \"No destination entered\";\nLocale.noDestinationSelected = \"No destination selected\";\nLocale.noValidDate = \"Enter a valid date\";\nLocale.noValidTime = \"Enter a valid time\";\nLocale.dateTooEarly = function ( minDate8601 ) { return \"This trip planner works for travel dates starting \"+minDate8601.split('-').reverse().join('-'); };\nLocale.dateTooLate = function ( maxDate8601 ) { return \"This trip planner works for travel dates till \"+maxDate8601.split('-').reverse().join('-'); };\nLocale.from = \"From\";\nLocale.via = \"Via\";\nLocale.to = \"To\";\nLocale.date = \"Date\";\nLocale.time = \"Time\";\nLocale.months = ['January','February','March','April','May','June','July','August','September','October','November','December'];\nLocale.days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\nLocale.daysMin = ['Su','Mo','Tu','We','Th','Fr','Sa'];\nLocale.earlier = 'Earlier';\nLocale.later = 'Later';\nLocale.noAdviceFound = 'No valid trips found';\nLocale.walk = 'Walk';\nLocale.platformrail = 'Platform';\nLocale.platform = 'Platform';\nLocale.amountTransfers = function ( transfers ) { if (transfers === 0) { return 'Direct'; } else { return transfers+ ' transfers';} };\nLocale.autocompleteMessages = {\n        noResults: \"No results found.\",\n        results: function( amount ) {\n            return amount + ( amount > 1 ? \" results are \" : \" result is\" ) + \" available, use the up and down arrow keys to navigate them.\";\n        }\n};","$('.nav-search').submit(function(e){\n\te.preventDefault();\n\tconsole.log(this.value);\n});\n\n\n\n// For fare table tooltips\n$('[data-toggle=\"tooltip\"]').tooltip();\n\n// Close currently open nav div when another is clicked\n// http://stackoverflow.com/a/23973965/915811\n$(\"[data-collapse-group='navbarCollapse']\").click(function (e) {\n\te.preventDefault();\n    var $this = $(this);\n    console.log(this);\n    $(\"[data-collapse-group='navbarCollapse']:not([data-target='\" + $this.data(\"target\") + \"'])\").each(function () {\n    \t$(this).addClass('collapsed');\n    \tconsole.log(this);\n        $($(this).data(\"target\")).removeClass(\"in\").addClass('collapse');\n\n    });\n});\n\n// Google custom search engine javascript\n// (function() {\n//   var cx = '012656238249604753028:qzpqrvzllsa'; // Insert your own Custom Search engine ID here\n//   var gcse = document.createElement('script'); gcse.type = 'text/javascript'; gcse.async = true;\n//   gcse.src = (document.location.protocol == 'https' ? 'https:' : 'http:') +\n//       '//cse.google.com/cse.js?cx=' + cx;\n//   var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(gcse, s);\n// })();\n\n\n// function doneResizing(){$(\".drawer-marker\").toggleClass(\"is-resizing\",!1)}$(\"#gov_form\").submit(function(){var e=(new RegExp(\"/@/\",\"g\"),$(\"#gov_form input\").val());/@/g.test(e)?($(\"#gov_form select option[value=email]\").attr(\"selected\",\"selected\"),$('#gov_form input[type=\"text\"]').attr(\"id\",\"email\").attr(\"name\",\"email\"),$(\"#gov_form label\").attr(\"for\",\"email\")):($(\"#gov_form\").append('<input id=\"country_code\" name=\"country_code\" title=\"Country code\" type=\"hidden\" value=\"1\" />'),$(\"#gov_form select option[value=phone]\").attr(\"selected\",\"selected\"),$('#gov_form input[type=\"text\"]').attr(\"id\",\"phone\").attr(\"name\",\"phone\"),$(\"#gov_form label\").attr(\"for\",\"phone\"))}),$skip=$(\".mast-skip\"),$mastLogo=$(\".mast-logo\"),$menu=$(\".mast-menu\"),$menuControl=$(\".menu-control\"),$menuHeader=$(\".menu-item-header\"),$menuContent=$(\".menu-content\"),$linkHeader=$(\".menu-item-link\"),$drawers=$(\".drawer\"),$drawerHeaders=$(\".drawer-header\"),$drawerContents=$(\".drawer-content\"),$drawerFacade=$(\".drawer-facade\"),$moreDrawer=$(\".drawer-alt > .drawer-content\"),$menuControl.click(function(e){menuControlClick(e)}),$menuHeader.click(function(e){menuHeaderClick(e)}),$linkHeader.click(function(e){linkHeaderClick(e)}),$drawerHeaders.focus(function(e){drawerHeaderFocus(e)}),$drawerHeaders.blur(function(e){drawerHeaderBlur(e)}),$drawerHeaders.click(function(e){drawerHeaderClick(e)}),$skip.click(function(e){onSkip(e)}),this.lastWidth=0,this.lastHeight=0;var height,resizeId;this.isExpanded=!1,$content=$(\"#content\"),$(window).resize(function(e){$(\".drawer-marker\").toggleClass(\"is-resizing\",!0),clearTimeout(resizeId),resize(e),resizeId=setTimeout(doneResizing,500)}),setTimeout(function(){$(window).trigger(\"resize\")},1e3),this.activeDrawer=this.$drawers.eq(0),this.activeContent=this.activeDrawer.find(\".drawer-content\").eq(0),this.activeDrawer.addClass(\"is-active-drawer\"),this.isMobile=$(window).width()<720,this.isLastMobile=this.isMobile,resize=function(e){this.isLastMobile=this.isMobile,this.isMobile=$(window).width()<720,this.isMobile!==this.isLastMobile&&(this.collapseDrawer(),this.setDrawerHeight(0),this.$drawerHeaders.parent().removeClass(\"is-active\").siblings().removeClass(\"is-active\")),!this.isMobile&&this.isExpanded?this.setDrawerHeight(this.activeContent.children().outerHeight(!0)):this.setDrawerHeight(),this.lastWidth=$(window).width()},menuControlClick=function(e){this.isExpanded?(this.collapseDrawer(),this.setDrawerHeight(0)):(this.expandDrawer(),this.setDrawerHeight(100)),setTimeout(function(){$moreDrawer.attr(\"aria-hidden\",!self.isExpanded)},260)},menuHeaderClick=function(e){$(e.currentTarget).parent().toggleClass(\"is-active\").siblings().removeClass(\"is-active\")},onSkip=function(e){e.preventDefault(),$(\"#content\").find(\":focusable\").eq(0).trigger(\"focus\")},linkHeaderClick=function(e){this.collapseDrawer(),this.setDrawerHeight(0)},drawerHeaderClick=function(e){this.isMobile||e.preventDefault(),this.setActiveDrawer($(e.currentTarget))},drawerHeaderFocus=function(e){this.isMobile||e.preventDefault()},drawerHeaderBlur=function(e){this.isMobile||e.preventDefault()},setActiveDrawer=function(e){this.activeDrawer=e.parent(),this.activeContent=e.siblings(\".drawer-content\").eq(0),this.isExpanded&&this.activeDrawer.hasClass(\"is-active-drawer\")?(this.collapseDrawer(),this.setDrawerHeight(0)):(this.expandDrawer(),this.setDrawerHeight(this.activeContent.children().outerHeight(!0))),e.parent().addClass(\"is-active-drawer\").siblings().removeClass(\"is-active-drawer\")},expandDrawer=function(){this.isExpanded=!0,this.activeContent.attr(\"aria-hidden\",\"false\")},collapseDrawer=function(){this.isExpanded=!1,setTimeout(function(){$drawerContents.attr(\"aria-hidden\",\"true\")},250)},setDrawerHeightNarrow=function(e){0!==e&&(e=this.$menuContent.children().eq(0).outerHeight(!0)),this.setContentBuffer(e)},setDrawerHeight=function(e){return void 0===e?e=this.lastHeight:this.lastHeight=e,this.isMobile?void this.setDrawerHeightNarrow(e):void this.setContentBuffer(e)},\n\n// setContentBuffer=function(e){$content.css({transform:[\"translate3d(0\",e+\"px\",\"0)\"].join(\",\")}),$(\"#footer\").css({transform:[\"translate3d(0\",e+\"px\",\"0)\"].join(\",\"),\"margin-bottom\":e})};\n\nshiftContent=function(e){\n\t// $('.content, .footer').animate({ left: '+=300' }, 400);\n\t// $(\".content, .footer\").animate({\n\t//     step: function() {\n\t//         $(this).css('-webkit-transform',\"translate3d(0px, \" + e + \"px, 0px)\");\n\t//     },\n\t//     duration: 1000,\n\t//     easing: 'easeOutQuint'\n\t// });\n\t$('.content').animate({ marginTop: '+='+e+'px' }, 600, 'easeOutQuint');\n};\n\n// $('.dropdown-link').click(function(e){\n// \te.preventDefault();\n// \tvar $this = $(this);\n// \tshiftContent($this.height());\n\n// })\n\n\n// Active nav\n// console.log(atltransit.nav);\n// console.log(atltransit.nav['{{ page.category }}']);\n// $('.nav-sidebar').append('<li><a href=\"/{{ page.category }}\">{{ page.category }}</a></li>');\n// $.each(atltransit.nav['{{ page.category }}'], function(i, item){\n// \tvar activeLabel = '';\n// \tvar activeBar = '';\n// \tif ('{{ page.id }}' === item ){\n// \t\tactiveLabel = '<span class=\"sr-only\">(current)</span>';\n// \t\tactiveBar = 'class=\"active\"';\n// \t}\n// \t$('.nav-sidebar').append('<li ' + activeBar + '><a href=\"/{{ page.category }}/' + item + '\">'+item + activeLabel + '</a></li>');\n// });\n","var routeTypeMap = {\n\t\t'0': 'Tram',\n\t\t'1': 'Subway',\n\t\t'2': 'Rail',\n\t\t'3': 'Bus',\n\t\t'4': 'Ferry',\n\t\t'5': 'Cable',\n\t\t'6': 'Gondola',\n\t\t'7': 'Funicular'\n\t};\nvar currentTime = moment();\nsetupDatetime();\n\n// Schedules agency select change\n\t$('input[type=radio][name=agency-arrivals-option], #schedules-agencies').change(function(){\n\t\t$('#schedules-routes').html('<option value=\"\">[Select Route]</option>');\n\t\t$('#schedules-trips')\n\t\t\t.html('<option value=\"\">[Select Direction]</option>')\n\t\t\t.prop('disabled', true);\n\t\t$('#schedules-stops')\n\t\t\t.html('<option value=\"\">[Select Stop]</option>')\n\t\t\t.trigger('change')\n\t\t\t.prop('disabled', true);\n\t\tconsole.log(this.value);\n\t\tif (this.value === 'Nearby'){\n\t\t\t$('#get-location').trigger('click');\n\t\t\treturn true;\n\t\t}\n\t\tvar agencyId = this.value;\n\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/routes-for-agency/' + agencyId + '.json?';\n\t\tvar params = {};\n\t\t// params.id = agencyId;\n\t\tparams.key = 'TEST';\n\t\turl += serialize(params);\n\t\t$.ajax({\n\t\t\turl: url,\n\t\t\tdataType: 'jsonp',\n\t\t\tsuccess: function(json){\n\t\t\t\tconsole.log(json.data);\n\t\t\t\tvar routeNest = d3.nest()\n\t\t\t\t\t\t.key(function(d) { return d.type; })\n\t\t\t\t\t\t.sortValues(compareRouteNames)\n\t\t\t\t\t\t.map(json.data.list);\n\t\t\t\tconsole.log(routeNest);\n\t\t\t\tvar routes = json.data.list;\n\t\t\t\t$.each(routeNest, function(type, routes) {  \n\t\t\t\t\tvar optgroup = $('<optgroup>');\n\t\t\t\t\toptgroup.attr('label',routeTypeMap[type]);\n\t\t\t\t\t$.each(routes, function(i, route){\n\t\t\t\t\t\tvar option = $(\"<option></option>\");\n\t\t\t\t\t\tvar routeFullText = routeTypeMap[type] === 'Subway' ? route.shortName : route.shortName + ' - ' + route.longName;\n\t\t\t\t\t\tvar routeText = route.longName === '' ? route.shortName : routeFullText;\n\t\t\t\t\t\toption.val(route.id);\n\t\t\t\t\t\toption.text(routeText);\n\t\t\t\t\t\toptgroup.append(option);\n\t\t\t\t\t});\n\t\t\t\t\t$('#schedules-routes').append(optgroup);\n\t\t\t\t});\n\t\t\t\t$('#schedules-routes').prop('disabled', false);\n\t\t\t}\n\t\t}); // end ajax\n\t});\n\t// Use location \n\t$('#get-location').click(function(){\n\t\t$('#schedules-agencies').val('Nearby');\n\t\t$('#schedules-routes').html('<option value=\"\">[Select Route]</option>');\n\t\t$('#schedules-stops')\n\t\t\t.html('<option value=\"\">[Select Stop]</option>')\n\t\t\t.trigger('change')\n\t\t\t.prop('disabled', true);\n\t\t$('#schedules-trips')\n\t\t\t.html('<option value=\"\">[Select Direction]</option>')\n\t\t\t.prop('disabled', true);;\n\t\t$(this).val(moment().unix());\n\t\tif (geolocationBool && typeof lat !== 'undefined'){\n\t\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/routes-for-location.json?';\n\t\t\tvar params = {};\n\t\t\tparams.lat = lat;\n\t\t\tparams.lon = lon;\n\t\t\tparams.radius = 4000;\n\t\t\tparams.key = 'TEST';\n\t\t\turl += serialize(params);\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\tdataType: 'jsonp',\n\t\t\t\tsuccess: function(json){\n\t\t\t\t\tconsole.log(json.data);\n\t\t\t\t\tvar routeNest = d3.nest()\n\t\t\t\t\t\t.key(function(d) { return d.agencyId; })\n\t\t\t\t\t\t.map(json.data.list);\n\t\t\t\t\tconsole.log(routeNest);\n\t\t\t\t\tvar agencyCount = 0;\n\t\t\t\t\tvar firstValue;\n\t\t\t\t\t$.each(routeNest, function(agency, routes) {  \n\t\t\t\t\t\tvar optgroup = $('<optgroup>');\n\t\t\t\t\t\toptgroup.attr('label',agency);\n\t\t\t\t\t\t$.each(routes, function(i, route){\n\t\t\t\t\t\t\tvar option = $(\"<option></option>\");\n\t\t\t\t\t\t\tif (agencyCount === 0 || i === 0){\n\t\t\t\t\t\t\t\tfirstValue = route.id;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar routeFullText = routeTypeMap[route.type] === 'Subway' ? route.shortName : route.shortName + ' - ' + route.longName;\n\t\t\t\t\t\t\tvar routeText = route.longName === '' ? route.shortName : routeFullText;\n\t\t\t\t\t\t\toption.val(route.id);\n\t\t\t\t\t\t\toption.text(routeText);\n\t\t\t\t\t\t\toptgroup.append(option);\n\t\t\t\t\t\t});\n\t\t\t\t\t    $('#schedules-routes').append(optgroup);\n\t\t\t\t\t    agencyCount++;\n\t\t\t\t\t});\n\t\t\t\t\t// $('#schedules-routes').val(firstValue);\n\t\t\t\t\t$('#schedules-routes').prop('disabled', false);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tconsole.log('no geolocation available');\n\t\t}\n\t});\n\t// Select route change\n\t$('#schedules-routes').change(function(){\n\t\tvar widgetClass;\n\t\tif ($(this).hasClass('nearby')){\n\t\t\twidgetClass = 'nearby';\n\t\t}\n\t\telse{\n\t\t\twidgetClass = 'next';\n\t\t}\n\t\twidgetClass = 'schedules';\n\t\t$('#schedules-stops')\n\t\t\t.html('<option value=\"\">[Select Stop]</option>')\n\t\t\t.trigger('change')\n\t\t\t.prop('disabled', true);\n\t\t$('#schedules-trips').html('<option value=\"\">[Select Direction]</option>');\n\t\tconsole.log(this.value);\n\t\tvar routeId = this.value;\n\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/stops-for-route/' + routeId + '.json?';\n\t\tvar params = {};\n\t\tparams.key = 'TEST';\n\t\tparams.includePolylines = false;\n\t\turl += serialize(params);\n\t\t$.ajax({\n\t\t\turl: url,\n\t\t\tdataType: 'jsonp',\n\t\t\tsuccess: function(json){\n\t\t\t\tvar closestDistance = 10000000000;\n\t\t\t\tvar closestStop = '';\n\t\t\t\tvar selectedTrip;\n\t\t\t\tvar stopGroups = json.data.entry.stopGroupings[0].stopGroups;\n\t\t\t\tconsole.log(json.data.entry.stopGroupings[0].stopGroups);\n\t\t\t\tconsole.log(json.data);\n\t\t\t\tvar stopMap = d3.nest()\n\t\t\t\t\t.key(function(d) { return d.id; })\n\t\t\t\t\t.map(json.data.references.stops);\n\t\t\t\tvar tripMap = d3.nest()\n\t\t\t\t\t// .key(function(d) { return d.name.name; })\n\t\t\t\t\t// .key(function(d) { return d.tripHeadsign; })\n\t\t\t\t\t.key(function(d) { return d.id; })\n\t\t\t\t\t.map(stopGroups);\n\t\t\t\tconsole.log(stopMap);\n\t\t\t\tconsole.log(tripMap);\n\t\t\t\tconsole.log(routeId);\n\t\t\t\tconsole.log(tripMap[routeId]);\n\t\t\t\tvar headsigns = [];\n\t\t\t\tvar tripCounter = 0;\n\t\t\t\t$.each(stopGroups, function(i, trip){\n\t\t\t\t\t// var tripId = trip.tripId;\n\t\t\t\t\t// console.log(trip);\n\t\t\t\t\t\n\t\t\t\t\t// if (typeof tripMap[routeId][tripId] !== 'undefined' && tripMap[routeId][tripId][0].routeId === routeId && headsigns.indexOf(tripMap[routeId][tripId][0].tripHeadsign) === -1){\n\t\t\t\t\t\t// var headsign = tripMap[routeId][tripId][0].tripHeadsign;\n\t\t\t\t\t\t// headsigns.push(headsign);\n\t\t\t\t\t\tvar tripLabel = trip.name.name === '' ? trip.id : trimHeadsign(trip.name.name);\n\t\t\t\t\t\ttripLabel = +tripLabel === 1 ? 'Inbound' : tripLabel;\n\t\t\t\t\t\ttripLabel = +tripLabel === 0 ? 'Outbound' : tripLabel;\n\t\t\t\t\t\tvar tripOption = $(\"<option></option>\");\n\t\t\t\t\t\ttripOption.val(trip.id);\n\t\t\t\t\t\ttripOption.text(tripLabel);\n\t\t\t\t\t\t$('#schedules-trips').append(tripOption);\n\t\t\t\t\t\tvar optgroup = $('<optgroup>');\n\t\t\t\t\t\toptgroup.attr('id', trip.id);\n\t\t\t\t\t\toptgroup.attr('label',tripLabel);\n\t\t\t\t\t\tif (tripCounter === 0){\n\t\t\t\t\t\t\tselectedTrip = trip.id;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\toptgroup.addClass('hidden-optgroup');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t$.each(trip.stopIds, function(j, stopId){\n\t\t\t\t\t\t\tvar stop = stopMap[stopId][0];\n\t\t\t\t\t\t\tconsole.log(stop)\n\t\t\t\t\t\t\tvar distance = getDistanceFromLatLonInKm(stop.lat, stop.lon, lat, lon);\n\t\t\t\t\t\t\tif (tripCounter === 0){\n\t\t\t\t\t\t\t\tif (distance < closestDistance){\n\t\t\t\t\t\t\t\t\tclosestDistance = distance;\n\t\t\t\t\t\t\t\t\tclosestStop = stop.id;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar option = $(\"<option></option>\");\n\t\t\t\t\t\t\toption.val(stop.id);\n\t\t\t\t\t\t\toption.attr('distance', distance);\n\t\t\t\t\t\t\tvar stopName = cleanStopName(stop.name);\n\t\t\t\t\t\t\tvar stopDir = stop.direction !== '' ? '(' + stop.direction + ') ' : '';\n\t\t\t\t\t\t\toption.text(stopDir + stopName);\n\t\t\t\t\t\t\toptgroup.append(option);\n\t\t\t\t\t\t\t// $('#' + widgetClass + '-arrivals-stops').append(option);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t$('#schedules-stops').append(optgroup);\n\t\t\t\t\t\ttripCounter++;\n\t\t\t\t\t// } // end if valid trip for route\n\n\t\t\t\t}); // end each trip\n\t\t\t\tvar $stops = $('#schedules-stops');\n\t\t\t\t$('#schedules-trips').prop('disabled', false);\n\t\t\t\t$('#schedules-trips').val(selectedTrip);\n\t\t\t\t$stops.prop('disabled', false);\n\t\t\t\t$stops.val(closestStop);\n\t\t\t\tif ($stops.val() !== ''){\n\t\t\t\t\t$stops.trigger('change');\n\t\t\t\t}\n\t\t\t\tif ($('#schedules-stops').val() !== ''){\n\t\t\t\t\t$('#schedules-btn').prop('disabled', false);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t$('#schedules-btn').prop('disabled', true);\n\t\t\t\t}\n\t\t\t} // end success\n\t\t}); // end ajax\n\t});\n\tvar previousTrip;\n\t$('#schedules-trips')\n\t\t.on('focus', function () {\n\t\t\t// Store the current value on focus and on change\n\t\t\tpreviousTrip = this.value;\n\t    }).change(function(){\n\t    \tvar closestDistance = 10000000000;\n\t\t\tvar closestStop = '';\n\t\t\tconsole.log(this.value);\n\t\t\t$('#' + previousTrip).addClass('hidden-optgroup');\n\t\t\t$('#' + this.value).removeClass('hidden-optgroup');\n\t\t\t$('#' + this.value + ' > option').each(function(){\n\t\t\t\tvar distance = $(this).attr('distance');\n\t\t\t\tconsole.log(distance);\n\t\t\t\tif (distance < closestDistance){\n\t\t\t\t\tclosestDistance = distance;\n\t\t\t\t\tclosestStop = this.value;\n\t\t\t\t}\n\t\t\t});\n\t\t\tconsole.log(closestStop);\n\t\t\tvar $stops = $('#schedules-stops');\n\t\t\t$stops.val(closestStop);\n\t\t\tif ($stops.val() !== ''){\n\t\t\t\t$stops.trigger('change');\n\t\t\t}\n\t\t});\n\t$('#schedules-stops').change(function(){\n\t\tif (this.value !== ''){\n\t\t\t$('#schedules-btn')\n\t\t\t\t.removeClass('disabled')\n\t\t\t\t.removeAttr('disabled')\n\t\t\t\t.val(this.value);\n\t\t\t$('.get-realtime').removeClass('disabled');\n\t\t}\n\t\telse {\n\t\t\t$('#schedules-btn')\n\t\t\t\t.addClass('disabled')\n\t\t\t\t.attr('disabled', 'disabled')\n\t\t\t\t.val('');\n\t\t\t$('.get-realtime').addClass('disabled');\n\t\t}\n\t});\n\t$('.get-schedules').click(function(){\n\t\tvar widgetClass, stopId;\n\t\t\n\t\tif ($(this).hasClass('stop-code')){\n\t\t\twidgetClass = 'stop-code';\n\t\t}\n\t\telse{\n\t\t\twidgetClass = 'next';\n\t\t}\n\t\twidgetClass = 'schedules';\n\t\tstopId = $('#' + widgetClass + '-btn').val();\n\t\tvar routeId = $('#' + widgetClass + '-routes').val();\n\t\tconsole.log(stopId);\n\t\tconsole.log(routeId);\n\t\tconsole.log(widgetClass);\n\t\tif (stopId !== ''){\n\t\t\t// console.log('stop coding it up');\n\t\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/schedule-for-stop/' + stopId + '.json?';\n\t\t\tvar params = {};\n\t\t\tparams.key = 'TEST';\n\t\t\tparams.minutesBefore = 1;\n\t\t\turl += serialize(params);\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\tdataType: 'jsonp',\n\t\t\t\tsuccess: function(json){\n\t\t\t\t\tvar routes = json.data.entry.stopRouteSchedules;\n\t\t\t\t\tconsole.log(json.data);\n\t\t\t\t\tvar stopMap = d3.nest()\n\t\t\t\t\t\t.key(function(d) { return d.id; })\n\t\t\t\t\t\t.map(json.data.references.stops);\n\t\t\t\t\tvar routeMap = d3.nest()\n\t\t\t\t\t\t.key(function(d) { return d.id; })\n\t\t\t\t\t\t.map(json.data.references.routes);\n\t\t\t\t\tconsole.log(routeMap);\n\t\t\t\t\tconsole.log(json.data.entry.stopRouteSchedules);\n\t\t\t\t\tif (routes.length > 0){\n\t\t\t\t\t\tstopName = stopMap[json.data.entry.stopId][0].name;\n\t\t\t\t\t\t$('#' + widgetClass + '-stop-code').html(cleanStopName('Stop ID: ' + stopId.split('_')[1]));\n\t\t\t\t\t\t$('#' + widgetClass + '-stop-name').html(cleanStopName(stopName));\n\t\t\t\t\t\t// $('#' + widgetClass + '-last-updated').html('<a class=\"get-arrivals next btn\"><span class=\"glyphicon glyphicon-refresh\" aria-hidden=\"true\"></span> ' + moment(arrivals[0].lastUpdateTime).format('h:mm a') + '</a>');\n\t\t\t\t\t\t$('#nearby-arrival-msg').hide();\n\t\t\t\t\t\tvar data = [];\n\t\t\t\t\t\tvar schedulesDiv = $('.schedules-tables');\n\t\t\t\t\t\tvar rowDiv = $('<div class=\"row\"></div>');\n\t\t\t\t\t\tvar rowDiv2 = $('<div class=\"row\"></div>');\n\t\t\t\t\t\tschedulesDiv.empty();\n\t\t\t\t\t\tfor (var i = 0; i < routes.length; i++) {\n\t\t\t\t\t\t\tconsole.log(routes[i]);\n\t\t\t\t\t\t\tvar routeName = routeMap[routes[i].routeId][0].shortName;\n\t\t\t\t\t\t\tvar directions = routes[i].stopRouteDirectionSchedules;\n\t\t\t\t\t\t\tfor (var j = 0; j < directions.length; j++) {\n\t\t\t\t\t\t\t\tvar numTrips = directions.length * routes.length;\n\t\t\t\t\t\t\t\tvar gridWidth = numTrips > 4 ? 3 : 12 / numTrips;\n\t\t\t\t\t\t\t\tgridWidth = numTrips === 1 ? 6 : gridWidth;\n\t\t\t\t\t\t\t\tgridWidth = 6; // modified gridWidth for narrow layout\n\t\t\t\t\t\t\t\tvar gridWidthSm = numTrips > 4 ? 6 : 12 / numTrips * 2;\n\t\t\t\t\t\t\t\t// var tableId = '#' + widgetClass + '-table';\n\t\t\t\t\t\t\t\tvar columnDiv = $('<div class=\"schedule-table table-responsive col-xs-12 col-md-'+gridWidth+' col-sm-6\"></div>')\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar table = $('<table class=\"table table-striped table-condensed table-hover col-md-'+gridWidth+'\" id=\"schedule-'+routeId+j+'\"></table>');\n\n\t\t\t\t\t\t\t\ttable.append('<thead><tr><th class=\"text-right\">Hour</th><th>Minute</th></tr></thead>');\n\t\t\t\t\t\t\t\tvar tbody = $('<tbody>');\n\t\t\t\t\t\t\t\tvar headsign = trimHeadsign(directions[j].tripHeadsign);\n\t\t\t\t\t\t\t\tif (directions[j].scheduleFrequencies.length > 0){\n\t\t\t\t\t\t\t\t\tconsole.log('freq based');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\tconsole.log('sched based');\n\t\t\t\t\t\t\t\t\tconsole.log(directions[j].scheduleStopTimes);\n\t\t\t\t\t\t\t\t\tvar stopTimes = directions[j].scheduleStopTimes;\n\t\t\t\t\t\t\t\t\tvar firstTime = moment(stopTimes[0].arrivalTime);\n\t\t\t\t\t\t\t\t\tvar currentHour = 0;\n\t\t\t\t\t\t\t\t\tvar row;\n\t\t\t\t\t\t\t\t\tvar minuteCell;\n\t\t\t\t\t\t\t\t\tvar morning = firstTime.hour() < 12 ? true : false;\n\t\t\t\t\t\t\t\t\tfor (var k = 0; k < stopTimes.length; k++) {\n\t\t\t\t\t\t\t\t\t\tvar meridian = '';\n\t\t\t\t\t\t\t\t\t\tif (morning && k === 0){\n\t\t\t\t\t\t\t\t\t\t\t// tbody.append('<tr class=\"text-left warning\"><td colspan=\"2\"><strong>AM</strong></td></tr>');\n\t\t\t\t\t\t\t\t\t\t\tmeridian = '<strong>AM</strong>  ';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvar seconds = stopTimes[k].arrivalTime;\n\t\t\t\t\t\t\t\t\t\t// console.log(seconds);\n\t\t\t\t\t\t\t\t\t\tvar arrivalTime = moment(seconds);\n\t\t\t\t\t\t\t\t\t\tvar arrivalTimeMinutes = arrivalTime.minutes() < 10 ? '0' + arrivalTime.minutes() : arrivalTime.minutes();\n\t\t\t\t\t\t\t\t\t\tvar nextArrivalTime;\n\t\t\t\t\t\t\t\t\t\tif (k !== stopTimes.length - 1){\n\t\t\t\t\t\t\t\t\t\t\tnextArrivalTime = moment(stopTimes[k + 1].arrivalTime);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// console.log(arrivalTime.format('h:mm a'));\n\t\t\t\t\t\t\t\t\t\tif (arrivalTime.hour() !== currentHour){\n\t\t\t\t\t\t\t\t\t\t\t// console.log(arrivalTime.hour())\n\t\t\t\t\t\t\t\t\t\t\t// console.log(currentHour)\n\t\t\t\t\t\t\t\t\t\t\t// if (arrivalTime.hour() > firstTime.hour()){\n\t\t\t\t\t\t\t\t\t\t\t// \ttbody.append($('.' +i+j+arrivalTime.hour()));\n\t\t\t\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t\t\t\t\trow = $('<tr id=\"'+i+j+arrivalTime.hour()+'\">');\n\t\t\t\t\t\t\t\t\t\t\tif (arrivalTime.hour() >= 12 && morning){\n\t\t\t\t\t\t\t\t\t\t\t\tmorning = false;\n\t\t\t\t\t\t\t\t\t\t\t\ttbody.append('<tr class=\"blank_row\"><td colspan=\"2\"></td></tr>');\n\t\t\t\t\t\t\t\t\t\t\t\tmeridian = '<strong>PM</strong>  ';\n\t\t\t\t\t\t\t\t\t\t\t\t// tbody.append('<tr class=\"text-left info\"><td colspan=\"2\"><strong>PM</strong></td></tr>');\n\t\t\t\t\t\t\t\t\t\t\t\t// row.append('<td>PM</td>');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\trow.append('<td class=\"text-right\"><strong>' + meridian + arrivalTime.format('h') + ':</strong></td>');\n\t\t\t\t\t\t\t\t\t\t\tminuteCell = $('<td class=\"text-left\">' + arrivalTimeMinutes + '</td>');\n\t\t\t\t\t\t\t\t\t\t\trow.append();\n\t\t\t\t\t\t\t\t\t\t\tcurrentHour = arrivalTime.hour();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\tminuteCell.append(' ' + arrivalTimeMinutes);\n\t\t\t\t\t\t\t\t\t\t\t// console.log($('.'+i+j+'-hour-'+arrivalTime.hour()).html());\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (nextArrivalTime.hour() !== arrivalTime.hour()){\n\t\t\t\t\t\t\t\t\t\t\trow.append(minuteCell);\n\t\t\t\t\t\t\t\t\t\t\ttbody.append(row);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (k == stopTimes.length - 1){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('done')\n\t\t\t\t\t\t\t\t\t\t\ttable.append(tbody);\n\t\t\t\t\t\t\t\t\t\t\t// console.log(table);\n\t\t\t\t\t\t\t\t\t\t\tcolumnDiv\n\t\t\t\t\t\t\t\t\t\t\t\t.append('<h4><span class=\"'+labelMap[routeName]+'\">' + routeName + '</span> - ' + headsign +'</h4')\n\t\t\t\t\t\t\t\t\t\t\t\t.append(table);\n\t\t\t\t\t\t\t\t\t\t\tif ( i > 1 ){\n\t\t\t\t\t\t\t\t\t\t\t\trowDiv2\n\t\t\t\t\t\t\t\t\t\t\t\t\t.append(columnDiv);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\t\trowDiv\n\t\t\t\t\t\t\t\t\t\t\t\t\t.append(columnDiv);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tschedulesDiv\n\t\t\t\t\t\t\t\t\t\t\t\t.append(rowDiv)\n\t\t\t\t\t\t\t\t\t\t\t\t.append(rowDiv2);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// var predicted = routes[i].predictedArrivalTime ? true : false;\n\t\t\t\t\t\t\t// var seconds = routes[i].predictedArrivalTime || routes[i].scheduledArrivalTime;\n\t\t\t\t\t\t\t// var diff = seconds - moment().valueOf();\n\t\t\t\t\t\t\t// var routeName = routes[i].routeShortName;\n\t\t\t\t\t\t\t// var fromNow = Math.floor(diff/60/1000);//moment(seconds).toNow(true)//.replace('minutes', '').replace('a few seconds', '<strong>NOW</strong>').replace('a minute', '<strong>NOW</strong>');\n\t\t\t\t\t\t\t// var fromNowText = fromNow <= 1 ? '<strong>NOW</strong>' : fromNow;\n\t\t\t\t\t\t\t// var headsign = trimHeadsign(routes[i].tripHeadsign);\n\t\t\t\t\t\t\t// var patt = new RegExp(\"Airport\");\n\t\t\t\t\t\t\t// if (patt.test(headsign)){\n\t\t\t\t\t\t\t// \theadsign += ' <i class=\"fa fa-plane\"></i>';\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t// var row = $('<tr class=\"info\">');\n\t\t\t\t\t\t\t// if (predicted){\n\t\t\t\t\t\t\t// \tfromNowText += ' <i style=\"font-size:0.7em;\" alt=\"Predicted arrival time\" title=\"Predicted arrival time\" class=\"fa fa-bolt\"></i>';\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t// row.append('<td><span class=\"'+labelMap[routeName]+'\">' + routeName + '</span></td>');\n\t\t\t\t\t\t\t// row.append('<td data-order=\"'+fromNow+'\">' + fromNowText + '</td>');\n\t\t\t\t\t\t\t// row.append('<td>' + headsign + '</td>');\n\t\t\t\t\t\t\t// tbody.append(row);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\t// if ( $.fn.dataTable.isDataTable(tableId) ) {\n\t\t\t\t\t\t// \tarrivalsDatatable = table.DataTable();\n\t\t\t\t\t\t// \t// arrivalsDatatable.clear();\n\t\t\t\t\t\t// \t// arrivalsDatatable.rows.add(data);\n\t\t\t\t\t\t// \t// arrivalsDatatable.draw();\n\t\t\t\t\t\t// \tarrivalsDatatable.destroy();\n\t\t\t\t\t\t// }\n\t\t\t\t\t\t// else {\n\t\t\t\t\t\t\t// arrivalsDatatable = table.DataTable( {\n\t\t\t\t\t\t\t// \t\"order\": [[ 1, \"asc\" ]],\n\t\t\t\t\t\t\t// \t// \"columns\": [\n\t\t\t\t\t\t\t// \t// \t{\"title\": \"Route\"},\n\t\t\t\t\t\t\t// \t// \t{\"title\": \"Minutes\"},\n\t\t\t\t\t\t\t// \t// \t{\"title\": \"Direction\"},\n\t\t\t\t\t\t\t// \t// \t{\"title\": \"diff\", \"type\": \"num\"}\n\t\t\t\t\t\t\t// \t// ],\n\t\t\t\t\t\t\t// \t// \"columnDefs\": [\n\t\t\t\t\t\t\t// \t// \t// \"targets\": [ 2 ],\n\t\t\t\t\t\t\t// \t// \t// \"visible\": false\n\t\t\t\t\t\t\t// \t// \t// { \"type\": \"num\", \"targets\": 0 }\n\t\t\t\t\t\t\t// \t// \t{ \"visible\": false, \"targets\": 3 },\n\t\t\t\t\t\t\t// \t// \t// { \"orderData\": 1,    \"targets\": 3 },\n\t\t\t\t\t\t\t// \t// ],\n\t\t\t\t\t\t\t// \t// \"data\": data,\n\t\t\t\t\t\t\t// \t\"paging\": false,\n\t\t\t\t\t\t\t// \t// \"pageLength\": 6,\n\t\t\t\t\t\t\t// \t// \"ordering\": false,\n\t\t\t\t\t\t\t// \t\"info\": false,\n\t\t\t\t\t\t\t// \t\"bFilter\": false\n\t\t\t\t\t\t\t// });\n\t\t\t\t\t\t// }\n\t\t\t\t\t} // end if there are arrivals in the list\n\t\t\t\t\t// else{\n\t\t\t\t\t// \ttable.hide();\n\t\t\t\t\t// \t$('#' + widgetClass + '-stop-name').html('');\n\t\t\t\t\t// \t$('#' + widgetClass + '-last-updated').html('');\n\t\t\t\t\t// \t$('#' + widgetClass + '-arrival-msg').text('No arrivals in the next 30 minutes.');\n\t\t\t\t\t// \t$('#' + widgetClass + '-arrival-msg').show();\n\t\t\t\t\t// }\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t$('#schedules-carousel').carousel('next');\n\t});"],"sourceRoot":"/source/"}