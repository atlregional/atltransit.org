{"version":3,"sources":["planner-widget.js","utilities.js","locale.js","nav.js","schedules-widget.js"],"names":["getEsriGeometry","option","id","$","ajax","url","esriUrl","dataType","data","text","magicKey","f","success","console","log","geom","locations","feature","geometry","val","y","x","formatRepo","repo","loading","markup","description","formatRepoSelection","compareRouteNames","a","b","shortName","findBootstrapEnvironment","envs","$el","appendTo","i","length","env","addClass","is","remove","setupDatetime","pad","n","hide","attr","setTime","currentTime","date","year","month","setDate","datepicker","dateFormat","Locale","dayNames","days","dayNamesMin","daysMin","monthNames","months","defaultDate","hideIfNoPrevNext","minDate","whitelabel_minDate","maxDate","whitelabel_maxDate","document","on","this","parents","iso8601","parts","split","d","moment","format","input","getDate","getTime","time","scrollToAnchor","aid","aTag","animate","scrollTop","offset","top","equalHeight","group","tallest","each","css","height","thisHeight","trimHeadsign","headsign","replace","toTitleCase","cleanStopName","name","getDistanceFromLatLonInKm","lat1","lon1","lat2","lon2","R","dLat","deg2rad","dLon","Math","sin","cos","c","atan2","sqrt","deg","PI","str","txt","test","toLowerCase","charAt","toUpperCase","substr","whitelabel_prefix","Date","timeFormat","dateAriaLabel","edit","plan","geocoderInput","originInput","destinationInput","startpointEmpty","noStartpointSelected","destinationEmpty","noDestinationSelected","noValidDate","noValidTime","dateTooEarly","minDate8601","reverse","join","dateTooLate","maxDate8601","from","via","to","earlier","later","noAdviceFound","walk","platformrail","platform","amountTransfers","transfers","autocompleteMessages","noResults","results","amount","submit","e","preventDefault","value","tooltip","click","$this","removeClass","shiftContent","marginTop","timepicker","carousel","interval","geolocationBool","lat","lon","labelMap","RED","BLUE","GOLD","GREEN","MARTA","CCT","GCT","GRTA","urlParams","setupAutoComplete","jQuery","unparam","window","location","hash","tab","trigger","stopId","setTimeout","change","select2","allowClear","delay","term","page","distance","searchExtents","res","suggestions","array","item","arrItem","push","cache","minimumInputLength","templateResult","templateSelection","routeTypeMap","0","1","2","3","4","5","6","7","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","params","key","serialize","json","list","agencies","agency","agencyId","removeAttr","widgetClass","hasClass","index","html","prop","routeNest","d3","nest","type","sortValues","map","routes","optgroup","route","routeFullText","longName","routeText","append","unix","radius","firstValue","agencyCount","routeId","includePolylines","selectedTrip","closestDistance","closestStop","stopGroups","entry","stopGroupings","stopMap","references","stops","tripMap","tripCounter","trip","tripLabel","tripOption","stopIds","j","stop","stopName","stopDir","direction","$stops","previousTrip","tableId","table","stopCode","query","show","minutesBefore","arrivals","arrivalsAndDepartures","lastUpdateTime","empty","tbody","predicted","predictedArrivalTime","seconds","scheduledArrivalTime","diff","valueOf","routeName","routeShortName","fromNow","floor","fromNowText","tripHeadsign","patt","RegExp","row","fn","dataTable","isDataTable","arrivalsDatatable","DataTable","destroy","order","paging","info","bFilter","plannerChoice","origin","destination","saddr","daddr","dirflg","googUrl","href","fromPlace","toPlace","arriveBy","fromName","toName","mode","atltransitUrl","toggleClass","stopRouteSchedules","routeMap","schedulesDiv","rowDiv","rowDiv2","directions","stopRouteDirectionSchedules","numTrips","gridWidth","columnDiv","scheduleFrequencies","scheduleStopTimes","minuteCell","stopTimes","firstTime","arrivalTime","currentHour","morning","hour","k","meridian","nextArrivalTime","minutes","history","pushState","reveal","args","Array","prototype","slice","call","arguments","img","src","load","apply","splice","ready","waitForFinalEvent","timers","callback","ms","uniqueId","clearTimeout","resize","substring","pair","l","pieces","decodeURIComponent","extend","disable","state","disabled","obj","prefix","p","hasOwnProperty","v","encodeURIComponent","bs"],"mappings":"AA2BA,QAAAA,iBAAAC,EAAAC,GACAC,EAAAC,MACAC,IAAAC,QAAA,QACAC,SAAA,QAEAC,MACAC,KAAAR,EAAAQ,KACAC,SAAAT,EAAAC,GAEAS,EAAA,SAKAC,QAAA,SAAAJ,GACAK,QAAAC,IAAAN,EACA,IAAAO,GAAAP,EAAAQ,UAAA,GAAAC,QAAAC,QACAf,GAAA,4BAAAD,EAAA,UAAAiB,IAAAJ,EAAAK,EAAA,IAAAL,EAAAM,MAIA,QAAAC,YAAAC,GACA,GAAAA,EAAAC,QAAA,MAAAD,GAAAd,IAEA,IAAAgB,GAAA,uHAMAF,EAAAd,KAAA,cAWA,OANAc,GAAAG,cACAD,GAAA,QAAAF,EAAAG,YAAA,UAGAD,GAAA,eAKA,QAAAE,qBAAAJ,GACA,MAAAA,GAAAd,KCxEA,QAAAmB,mBAAAC,EAAAC,GAAA,MAAAD,GAAAE,UAAAD,EAAAC,UACA,QAAAC,4BACA,GAAAC,IAAA,KAAA,KAAA,KAAA,KAEAC,KAAA/B,EAAA,SACA+B,IAAAC,SAAAhC,EAAA,QAEA,KAAA,GAAAiC,GAAAH,EAAAI,OAAA,EAAAD,GAAA,EAAAA,IAAA,CACA,GAAAE,GAAAL,EAAAG,EAGA,IADAF,IAAAK,SAAA,UAAAD,GACAJ,IAAAM,GAAA,WAEA,MADAN,KAAAO,SACAH,GAIA,QAAAI,iBAMA,QAAAC,GAAAC,GAAA,MAAA,IAAAA,EAAA,IAAAA,EAAAA,EAJAzC,EAAA,+BAAA0C,OACA1C,EAAA,+BAAA2C,KAAA,eAAA,GAEAC,QAAAC,YAEA,IAAAC,GAAAD,YAAAE,OAAA,IAAAP,EAAAK,YAAAG,QAAA,GAAA,IAAAR,EAAAK,YAAAC,OACAG,SAAAH,GACA,kBAAA9C,KAAAkD,WACAlD,EAAA,yBAAAkD,YACAC,WAAAC,OAAAD,WACAE,SAAAD,OAAAE,KACAC,YAAAH,OAAAI,QACAC,WAAAL,OAAAM,OACAC,YAAA,EACAC,kBAAA,EACAC,QAAAC,mBACAC,QAAAC,qBAIAtD,QAAAC,IAAA,2BAGAX,EAAAiE,UAAAC,GAAA,aAAA,oBAAA,WACA,GAAA5D,GAAAN,EAAAmE,MAAA7D,OAAA,IAAAN,EAAA,uBAAAA,EAAAmE,MAAAC,WAAA9D,OAAA,IAAAN,EAAA,sBAAAA,EAAAmE,MAAAC,WAAA9D,MACAN,GAAA,kCAAAM,KAAAA,KAIAN,EAAA,+BAAA0C,OACA1C,EAAA,+BAAA2C,KAAA,eAAA,GAGA,QAAAM,SAAAoB,GACAC,MAAAD,EAAAE,MAAA,IACA,IAAAC,GAAAC,OAAAJ,EACArE,GAAA,yBAAAgB,IAAAwD,EAAAE,OAAA,eAEA,QAAA9B,SAAAyB,GAIA3D,QAAAC,IAAA0D,GACAM,MAAAF,OAAAJ,EAAA,WAKA3D,QAAAC,IAAAgE,MAAAD,OAAA,UAEA1E,EAAA,yBAAAgB,IAAA2D,MAAAD,OAAA,UAIA,QAAAE,WACA,MAAAH,QAAAzE,EAAA,yBAAAgB,OAAA0D,OAAA,cAQA,QAAAG,WACA,GAAAC,GAAAL,OAAAzE,EAAA,yBAAAgB,MAAA,QACA,OAAA8D,GAAAJ,OAAA,WAGA,QAAAK,gBAAAC,GACAtE,QAAAC,IAAAqE,EACA,IAAAC,GAAAjF,EAAA,QAAAgF,EAAA,KACAtE,SAAAC,IAAAsE,GACAjF,EAAA,aAAAkF,SACAC,UAAAF,EAAAG,SAAAC,KACA,QAYA,QAAAC,aAAAC,GACA,GAAAC,GAAA,CAEAD,GAAAE,KAAA,WACAzF,EAAAmE,MAAAuB,KAAAC,OAAA,IACA,IAAAC,GAAA5F,EAAAmE,MAAAwB,QACAjF,SAAAC,IAAAiF,GACAA,EAAAJ,IACAA,EAAAI,KAGAlF,QAAAC,IAAA,cAAA6E,GACAD,EAAAE,KAAA,WAAAzF,EAAAmE,MAAAwB,OAAAH,KA8FA,QAAAK,cAAAC,GAKA,MAJAA,GAAAA,EAAAvB,MAAA,KAAArC,OAAA,EAAA4D,EAAAvB,MAAA,KAAA,GAAAuB,EACAA,EAAAA,EAAAvB,MAAA,MAAArC,OAAA,EAAA4D,EAAAvB,MAAA,MAAA,GAAAuB,EACAA,EAAAA,EAAAC,QAAA,WAAA,IACAD,EAAAE,YAAAF,GAGA,QAAAG,eAAAC,GAMA,MALAA,GAAAA,EACAH,QAAA,aAAA,OACAA,QAAA,cAAA,OACAA,QAAA,WAAA,IACAG,EAAAF,YAAAE,GAIA,QAAAC,2BAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAA,KACAC,EAAAC,QAAAJ,EAAAF,GACAO,EAAAD,QAAAH,EAAAF,GACA3E,EACAkF,KAAAC,IAAAJ,EAAA,GAAAG,KAAAC,IAAAJ,EAAA,GACAG,KAAAE,IAAAJ,QAAAN,IAAAQ,KAAAE,IAAAJ,QAAAJ,IACAM,KAAAC,IAAAF,EAAA,GAAAC,KAAAC,IAAAF,EAAA,GAEAI,EAAA,EAAAH,KAAAI,MAAAJ,KAAAK,KAAAvF,GAAAkF,KAAAK,KAAA,EAAAvF,IACA8C,EAAAgC,EAAAO,CACA,OAAAvC,GAEA,QAAAkC,SAAAQ,GACA,MAAAA,IAAAN,KAAAO,GAAA,KAEA,QAAAnB,aAAAoB,GACA,MAAAA,GAAArB,QAAA,SAAA,SAAAsB,GACA,MAAA,iGAAAC,KAAAD,GACAA,EACA,yBAAAC,KAAAD,GACAA,EAAAE,cAGAF,EAAAG,OAAA,GAAAC,cAAAJ,EAAAK,OAAA,GAAAH,gBC3PA,GAAAI,mBAAA,sDAEA7D,mBAAA,GAAA8D,MAAA,KAAA,EAAA,GACA5D,mBAAA,GAAA4D,MAAA,KAAA,EAAA,IAEAxE,SAEAA,QAAAD,WAAA,WACAC,OAAAyE,WAAA,QACAzE,OAAA0E,cAAA,4DACA1E,OAAA/B,QAAA,aACA+B,OAAA2E,KAAA,cACA3E,OAAA4E,KAAA,YACA5E,OAAA6E,cAAA,iDACA7E,OAAA8E,YAAA,iDACA9E,OAAA+E,iBAAA,uBACA/E,OAAAgF,gBAAA,4BACAhF,OAAAiF,qBAAA,6BACAjF,OAAAkF,iBAAA,yBACAlF,OAAAmF,sBAAA,0BACAnF,OAAAoF,YAAA,qBACApF,OAAAqF,YAAA,qBACArF,OAAAsF,aAAA,SAAAC,GAAA,MAAA,qDAAAA,EAAApE,MAAA,KAAAqE,UAAAC,KAAA,MACAzF,OAAA0F,YAAA,SAAAC,GAAA,MAAA,iDAAAA,EAAAxE,MAAA,KAAAqE,UAAAC,KAAA,MACAzF,OAAA4F,KAAA,OACA5F,OAAA6F,IAAA,MACA7F,OAAA8F,GAAA,KACA9F,OAAAN,KAAA,OACAM,OAAA0B,KAAA,OACA1B,OAAAM,QAAA,UAAA,WAAA,QAAA,QAAA,MAAA,OAAA,OAAA,SAAA,YAAA,UAAA,WAAA,YACAN,OAAAE,MAAA,SAAA,SAAA,UAAA,YAAA,WAAA,SAAA,YACAF,OAAAI,SAAA,KAAA,KAAA,KAAA,KAAA,KAAA,KAAA,MACAJ,OAAA+F,QAAA,UACA/F,OAAAgG,MAAA,QACAhG,OAAAiG,cAAA,uBACAjG,OAAAkG,KAAA,OACAlG,OAAAmG,aAAA,WACAnG,OAAAoG,SAAA,WACApG,OAAAqG,gBAAA,SAAAC,GAAA,MAAA,KAAAA,EAAA,SAAAA,EAAA,cACAtG,OAAAuG,sBACAC,UAAA,oBACAC,QAAA,SAAAC,GACA,MAAAA,IAAAA,EAAA,EAAA,gBAAA,cAAA,iEC1CA9J,EAAA,eAAA+J,OAAA,SAAAC,GACAA,EAAAC,iBACAvJ,QAAAC,IAAAwD,KAAA+F,SAMAlK,EAAA,2BAAAmK,UAIAnK,EAAA,0CAAAoK,MAAA,SAAAJ,GACAA,EAAAC,gBACA,IAAAI,GAAArK,EAAAmE,KACAzD,SAAAC,IAAAwD,MACAnE,EAAA,4DAAAqK,EAAAhK,KAAA,UAAA,OAAAoF,KAAA,WACAzF,EAAAmE,MAAA/B,SAAA,aACA1B,QAAAC,IAAAwD,MACAnE,EAAAA,EAAAmE,MAAA9D,KAAA,WAAAiK,YAAA,MAAAlI,SAAA,gBAmBAmI,aAAA,SAAAP,GASAhK,EAAA,YAAAkF,SAAAsF,UAAA,KAAAR,EAAA,MAAA,IAAA,iBH7CAhK,EAAA,uBAAAyK,aACAzK,EAAA,uDAAA0K,UACAC,UAAA,IAEA3K,EAAA,2BAAAgB,IAAA,GACA,IAAA4J,kBAAA,EACAC,IAAAC,IAQAC,UACAC,IAAA,qBACAC,KAAA,sBACAC,KAAA,sBACAC,MAAA,sBACAC,MAAA,qBACAC,IAAA,sBACAC,IAAA,qBACAC,KAAA,oBAEApL,QAAA,uEAgDAqL,SACAxL,GAAA,WAkBA,kBAAAyL,oBACAA,oBAGAD,UAAAE,OAAAC,QAAAC,OAAAC,SAAAC,MAEA,mBAAAN,WAAAO,MACA/L,EAAA,IAAAwL,UAAAO,IAAA,SAAAC,QAAA,SACA,mBAAAR,WAAAS,QACAL,OAAAM,WAAA,WACAlM,EAAA,IAAAwL,UAAAO,IAAA,iBACAzB,YAAA,YACAtJ,IAAAwK,UAAAS,QACAD,QAAA,UACA,MAKAhM,EAAA,yBAAAmM,OAAA,WACAzL,QAAAC,IAAAwD,KAAA+F,OACAxJ,QAAAC,IAAAX,EAAAmE,MAAAiI,QAAA,QACA,IAAA/L,GAAAL,EAAAmE,MAAAiI,QAAA,OACAvM,iBAAAQ,EAAA8D,KAAApE,MAEAC,EAAA,yBAAAoM,SAEAC,YAAA,EACApM,MACAC,IAAAC,QAAA,WACAC,SAAA,QACAkM,MAAA,IACAjM,KAAA,SAAAkM,EAAAC,GACA,OACAlM,KAAAiM,EAGA/L,EAAA,OACAiM,SAAA,IACAC,cAAA,gCACAb,SAAA,yBAGAhC,QAAA,SAAAxJ,EAAAmM,GACA9L,QAAAC,IAAAN,EAIA,IAAAsM,GAAAtM,EAAAuM,YACAC,IAQA,OAPA7M,GAAAyF,KAAAkH,EAAA,SAAA1K,EAAA6K,GACA,GAAAC,IACAhN,GAAA+M,EAAAvM,SACAD,KAAAwM,EAAAxM,KAEAuM,GAAAG,KAAAD,MAGAlD,QAAAgD,IAGAI,OAAA,GAGAC,mBAAA,EACAC,eAAA,SAAArN,GACA,MAAA,yBAAAA,EAAAQ,KAAA,UAEA8M,kBAAA,SAAAtN,GACA,MAAAA,GAAAQ,OAGA,IAAA+M,IACAC,EAAA,OACAC,EAAA,SACAC,EAAA,OACAC,EAAA,MACAC,EAAA,QACAC,EAAA,QACAC,EAAA,UACAC,EAAA,YAGA,gBAAAC,aAEApN,QAAAC,IAAA,eACAiK,iBAAA,EACAkD,UAAAC,YAAAC,mBAAA,SAAAC,GACApD,IAAAoD,EAAAC,OAAAC,SACArD,IAAAmD,EAAAC,OAAAE,UACA1N,QAAAC,KAAAsN,EAAAC,OAAAC,SAAAF,EAAAC,OAAAE,cAMA,IAAAlO,GAAA,2EACAmO,IAEAA,GAAAC,IAAA,OACApO,GAAAqO,UAAAF,GACArO,EAAAC,MACAC,IAAAA,EACAE,SAAA,QACAK,QAAA,SAAA+N,GACA9N,QAAAC,IAAA6N,EAAAnO,KAAAoO,KACA,IAAAC,GAAAF,EAAAnO,KAAAoO,IACAzO,GAAAyF,KAAAiJ,EAAA,SAAAzM,EAAA0M,GACA3O,EAAA,mCAAA2O,EAAAC,SAAA,KAAAC,WAAA,iBAMA7O,EAAA,mBAAAoK,MAAA,SAAAJ,GACA,GAAA8E,EAEAA,GADA9O,EAAAmE,MAAA4K,SAAA,aACA,YAGA,OAEA/O,EAAAmE,MAAA4K,SAAA,WAAA,IAAA/O,EAAA,IAAA8O,EAAA,6BAAAE,SAEAhP,EAAA,IAAA8O,EAAA,aAAA9C,QAAA,WAKAhM,EAAA,2EAAAmM,OAAA,WAUA,GATAnM,EAAA,yBAAAiP,KAAA,4CACAjP,EAAA,wBACAiP,KAAA,gDACAC,KAAA,YAAA,GACAlP,EAAA,wBACAiP,KAAA,2CACAjD,QAAA,UACAkD,KAAA,YAAA,GACAxO,QAAAC,IAAAwD,KAAA+F,OACA,WAAA/F,KAAA+F,MAEA,MADAlK,GAAA,iBAAAgM,QAAA,UACA,CAEA,IAAA4C,GAAAzK,KAAA+F,KACA2B,UAAAC,KAAA,UAAA8C,CACA,IAAA1O,GAAA,iEAAA0O,EAAA,SACAP,IAEAA,GAAAC,IAAA,OACApO,GAAAqO,UAAAF,GACArO,EAAAC,MACAC,IAAAA,EACAE,SAAA,QACAK,QAAA,SAAA+N,GACA9N,QAAAC,IAAA6N,EAAAnO,KACA,IAAA8O,GAAAC,GAAAC,OACAf,IAAA,SAAA9J,GAAA,MAAAA,GAAA8K,OACAC,WAAA9N,mBACA+N,IAAAhB,EAAAnO,KAAAoO,KACA/N,SAAAC,IAAAwO,EACAX,GAAAnO,KAAAoO,IACAzO,GAAAyF,KAAA0J,EAAA,SAAAG,EAAAG,GACA,GAAAC,GAAA1P,EAAA,aACA0P,GAAA/M,KAAA,QAAA0K,EAAAiC,IACAtP,EAAAyF,KAAAgK,EAAA,SAAAxN,EAAA0N,GACA,GAAA7P,GAAAE,EAAA,qBACA4P,EAAA,WAAAvC,EAAAiC,GAAAK,EAAA/N,UAAA+N,EAAA/N,UAAA,MAAA+N,EAAAE,SACAC,EAAA,KAAAH,EAAAE,SAAAF,EAAA/N,UAAAgO,CACA9P,GAAAkB,IAAA2O,EAAA5P,IACAD,EAAAQ,KAAAwP,GACAJ,EAAAK,OAAAjQ,KAEAE,EAAA,yBAAA+P,OAAAL,KAEA1P,EAAA,yBAAAkP,KAAA,YAAA,QAKAlP,EAAA,iBAAAoK,MAAA,WAWA,GAVApK,EAAA,2BAAAgB,IAAA,UACAhB,EAAA,yBAAAiP,KAAA,4CACAjP,EAAA,wBACAiP,KAAA,2CACAjD,QAAA,UACAkD,KAAA,YAAA,GACAlP,EAAA,wBACAiP,KAAA,gDACAC,KAAA,YAAA,GACAlP,EAAAmE,MAAAnD,IAAAyD,SAAAuL,QACApF,iBAAA,mBAAAC,KAAA,CACA,GAAA3K,GAAA,wEACAmO,IACAA,GAAAxD,IAAAA,IACAwD,EAAAvD,IAAAA,IACAuD,EAAA4B,OAAA,IACA5B,EAAAC,IAAA,OACApO,GAAAqO,UAAAF,GACArO,EAAAC,MACAC,IAAAA,EACAE,SAAA,QACAK,QAAA,SAAA+N,GACA9N,QAAAC,IAAA6N,EAAAnO,KACA,IAAA8O,GAAAC,GAAAC,OACAf,IAAA,SAAA9J,GAAA,MAAAA,GAAAoK,WACAY,IAAAhB,EAAAnO,KAAAoO,KACA/N,SAAAC,IAAAwO,EACA,IACAe,GADAC,EAAA,CAEAnQ,GAAAyF,KAAA0J,EAAA,SAAAR,EAAAc,GACA,GAAAC,GAAA1P,EAAA,aACA0P,GAAA/M,KAAA,QAAAgM,GACA3O,EAAAyF,KAAAgK,EAAA,SAAAxN,EAAA0N,GACA,GAAA7P,GAAAE,EAAA,sBACA,IAAAmQ,GAAA,IAAAlO,KACAiO,EAAAP,EAAA5P,GAEA,IAAA6P,GAAA,WAAAvC,EAAAsC,EAAAL,MAAAK,EAAA/N,UAAA+N,EAAA/N,UAAA,MAAA+N,EAAAE,SACAC,EAAA,KAAAH,EAAAE,SAAAF,EAAA/N,UAAAgO,CACA9P,GAAAkB,IAAA2O,EAAA5P,IACAD,EAAAQ,KAAAwP,GACAJ,EAAAK,OAAAjQ,KAEAE,EAAA,yBAAA+P,OAAAL,GACAS,MAGAnQ,EAAA,yBAAAkP,KAAA,YAAA,UAKAxO,SAAAC,IAAA,8BAIAX,EAAA,yBAAAmM,OAAA,WACA,GAAA2C,EAEAA,GADA9O,EAAAmE,MAAA4K,SAAA,UACA,SAGA,OAEA/O,EAAA,wBACAiP,KAAA,2CACAjD,QAAA,UACAkD,KAAA,YAAA,GACAlP,EAAA,wBAAAiP,KAAA,gDACAvO,QAAAC,IAAAwD,KAAA+F,MACA,IAAAkG,GAAAjM,KAAA+F,KACA2B,UAAAC,MAAA,UAAAsE,CACA,IAAAlQ,GAAA,+DAAAkQ,EAAA,SACA/B,IACAA,GAAAC,IAAA,OACAD,EAAAgC,kBAAA,EACAnQ,GAAAqO,UAAAF,GACArO,EAAAC,MACAC,IAAAA,EACAE,SAAA,QACAK,QAAA,SAAA+N,GACA,GAEA8B,GAFAC,EAAA,KACAC,EAAA,GAEAC,EAAAjC,EAAAnO,KAAAqQ,MAAAC,cAAA,GAAAF,UACA/P,SAAAC,IAAA6N,EAAAnO,KAAAqQ,MAAAC,cAAA,GAAAF,YACA/P,QAAAC,IAAA6N,EAAAnO,KACA,IAAAuQ,GAAAxB,GAAAC,OACAf,IAAA,SAAA9J,GAAA,MAAAA,GAAAzE,KACAyP,IAAAhB,EAAAnO,KAAAwQ,WAAAC,OACAC,EAAA3B,GAAAC,OAGAf,IAAA,SAAA9J,GAAA,MAAAA,GAAAzE,KACAyP,IAAAiB,EACA/P,SAAAC,IAAAiQ,GACAlQ,QAAAC,IAAAoQ,GACArQ,QAAAC,IAAAyP,GACA1P,QAAAC,IAAAoQ,EAAAX,GACA,IACAY,GAAA,CACAhR,GAAAyF,KAAAgL,EAAA,SAAAxO,EAAAgP,GAOA,GAAAC,GAAA,KAAAD,EAAA/K,KAAAA,KAAA+K,EAAAlR,GAAA8F,aAAAoL,EAAA/K,KAAAA,MACAiL,EAAAnR,EAAA,oBACAmR,GAAAnQ,IAAAiQ,EAAAlR,IACAoR,EAAA7Q,KAAA4Q,GACAlR,EAAA,wBAAA+P,OAAAoB,EACA,IAAAzB,GAAA1P,EAAA,aACA0P,GAAA/M,KAAA,KAAAsO,EAAAlR,IACA2P,EAAA/M,KAAA,QAAAuO,GACA,IAAAF,EACAV,EAAAW,EAAAlR,GAGA2P,EAAAtN,SAAA,mBAGApC,EAAAyF,KAAAwL,EAAAG,QAAA,SAAAC,EAAApF,GACA,GAAAqF,GAAAV,EAAA3E,GAAA,GAEAQ,EAAAtG,0BAAAmL,EAAAzG,IAAAyG,EAAAxG,IAAAD,IAAAC,IACA,KAAAkG,GACAT,EAAA9D,IACA8D,EAAA9D,EACA+D,EAAAc,EAAAvR,GAGA,IAAAD,GAAAE,EAAA,oBACAF,GAAAkB,IAAAsQ,EAAAvR,IACAD,EAAA6C,KAAA,WAAA8J,EACA,IAAA8E,GAAAtL,cAAAqL,EAAApL,MACAsL,EAAA,KAAAF,EAAAG,UAAA,IAAAH,EAAAG,UAAA,KAAA,EACA3R,GAAAQ,KAAAkR,EAAAD,GACA7B,EAAAK,OAAAjQ,KAIAE,EAAA,IAAA8O,EAAA,mBAAAiB,OAAAL,GACAsB,KAIA,IAAAU,GAAA1R,EAAA,uBACAA,GAAA,wBAAAkP,KAAA,YAAA,GACAlP,EAAA,wBAAAgB,IAAAsP,GACAoB,EAAAxC,KAAA,YAAA,GACAwC,EAAA1Q,IAAAwP,GACA,KAAAkB,EAAA1Q,OACA0Q,EAAA1F,QAAA,UAEA,KAAAhM,EAAA,wBAAAgB,MACAhB,EAAA,sBAAAkP,KAAA,YAAA,GAGAlP,EAAA,sBAAAkP,KAAA,YAAA,OAOA,IAAAyC,EACA3R,GAAA,wBACAkE,GAAA,QAAA,WAEAyN,EAAAxN,KAAA+F,QACAiC,OAAA,WACA,GAAAoE,GAAA,KACAC,EAAA,EACA9P,SAAAC,IAAAwD,KAAA+F,OACAlK,EAAA,IAAA2R,GAAAvP,SAAA,mBACApC,EAAA,IAAAmE,KAAA+F,OAAAI,YAAA,mBACAtK,EAAA,IAAAmE,KAAA+F,MAAA,aAAAzE,KAAA,WACA,GAAAgH,GAAAzM,EAAAmE,MAAAxB,KAAA,WACAjC,SAAAC,IAAA8L,GACA8D,EAAA9D,IACA8D,EAAA9D,EACA+D,EAAArM,KAAA+F,SAGAxJ,QAAAC,IAAA6P,EACA,IAAAkB,GAAA1R,EAAA,uBACA0R,GAAA1Q,IAAAwP,GACA,KAAAkB,EAAA1Q,OACA0Q,EAAA1F,QAAA,YAGAhM,EAAA,wBAAAmM,OAAA,WACA,GAAAF,GAAA9H,KAAA+F,KACA,MAAA+B,GACAjM,EAAA,sBACAsK,YAAA,YACAtJ,IAAAiL,GAEAJ,SAAAC,MAAA,SAAAG,EAEAjM,EAAA,kBAAAsK,YAAA,cAGAtK,EAAA,sBACAoC,SAAA,YACApB,IAAA,IACAhB,EAAA,kBAAAoC,SAAA,eAGApC,EAAA,cAAAkE,GAAA,QAAA,SAAA8F,GACA,GAAA4H,GAAA,4BACAC,EAAA7R,EAAA4R,GAEAE,EAAA,KAAA9R,EAAA,cAAAgB,MAAA,SAAAhB,EAAA,cAAAgB,KACA,IAAAmD,KAAA+F,MAAAhI,OAAA,EACAxB,QAAAC,IAAAwD,KAAA+F,OACAlK,EAAA,wBAAAiP,KAAA,4DACAjP,EAAA,2BACAoC,SAAA,YACApB,IAAA,QAEA,IAAA,IAAAmD,KAAA+F,MAAAhI,OAAA,CACAxB,QAAAC,IAAAqJ,GACAtJ,QAAAC,IAAAwD,KAAA+F,MACA,IAAAhK,GAAA,uEACAmO,IACAA,GAAA0D,MAAAD,EACAzD,EAAAC,IAAA,OACApO,GAAAqO,UAAAF,GACArO,EAAAC,MACAC,IAAAA,EACAE,SAAA,QACAK,QAAA,SAAA+N,GACA9N,QAAAC,IAAA6N,EAAAnO,MACAmO,EAAAnO,KAAAoO,KAAAvM,OAAA,GACA+J,OAAAuC,EAAAnO,KAAAoO,KAAA,GAAA1O,GACAwR,SAAAtL,cAAAuI,EAAAnO,KAAAoO,KAAA,GAAAvI,MAEAlG,EAAA,2BACAsK,YAAA,YACAtJ,IAAAiL,QACAjM,EAAA,wBAAAiP,KAAA,iBAAAsC,SAAA,eAGAM,EAAAnP,OACA1C,EAAA,uBAAAM,KAAA,gBACAN,EAAA,uBAAAgS,OACAhS,EAAA,wBAAAiP,KAAA,oBACAjP,EAAA,2BACAoC,SAAA,YACApB,IAAA,YAOAhB,GAAA,2BACAoC,SAAA,YACApB,IAAA,IACAhB,EAAA,wBAAAiP,KAAA,8DAGAjP,EAAA,iBAAAoK,MAAA,WACA,GAAA0E,GAAA7C,CAGA6C,GADA9O,EAAAmE,MAAA4K,SAAA,aACA,YAGA,MAEA,IAAA6C,GAAA,IAAA9C,EAAA,kBACA+C,EAAA7R,EAAA4R,EAKA,IAJA3F,EAAAjM,EAAA,IAAA8O,EAAA,iBAAA9N,MAEAN,QAAAC,IAAAsL,GACAvL,QAAAC,IAAAmO,GACA,KAAA7C,EAAA,CAEA,GAAA/L,GAAA,gFAAA+L,EAAA,SACAoC,IACAA,GAAAC,IAAA,OACAD,EAAA4D,cAAA,EACA/R,GAAAqO,UAAAF,GACArO,EAAAC,MACAC,IAAAA,EACAE,SAAA,QACAK,QAAA,SAAA+N,GACA,GAAA0D,GAAA1D,EAAAnO,KAAAqQ,MAAAyB,qBACAzR,SAAAC,IAAA6N,EAAAnO,KACA,IAAAuQ,GAAAxB,GAAAC,OACAf,IAAA,SAAA9J,GAAA,MAAAA,GAAAzE,KACAyP,IAAAhB,EAAAnO,KAAAwQ,WAAAC,MAGA,IADApQ,QAAAC,IAAA6N,EAAAnO,KAAAqQ,MAAAyB,uBACAD,EAAAhQ,OAAA,EAAA,CACAqP,SAAAX,EAAApC,EAAAnO,KAAAqQ,MAAAzE,QAAA,GAAA/F,KACAlG,EAAA,IAAA8O,EAAA,cAAAG,KAAAhJ,cAAA,YAAAgG,EAAA1H,MAAA,KAAA,KACAvE,EAAA,IAAA8O,EAAA,cAAAG,KAAAhJ,cAAAsL,WACAvR,EAAA,IAAA8O,EAAA,uBAAAG,KAAAxK,OAAAyN,EAAA,GAAAE,gBAAA1N,OAAA,WACA1E,EAAA,uBAAA0C,OACAmP,EAAAG,OACAH,EAAAQ,QAIAR,EAAA9B,OAAA,2EAGA,KAAA,GAFAuC,GAAAtS,EAAA,WACAK,KACA4B,EAAA,EAAAA,EAAAiQ,EAAAhQ,OAAAD,IAAA,CAEA,GAAAsQ,GAAAL,EAAAjQ,GAAAuQ,sBAAA,GAAA,EACAC,EAAAP,EAAAjQ,GAAAuQ,sBAAAN,EAAAjQ,GAAAyQ,qBACAC,EAAAF,EAAAhO,SAAAmO,UACAC,EAAAX,EAAAjQ,GAAA6Q,eAGAC,EAAAnM,KAAAoM,MAAAL,EAAA,GAAA,KACAM,EAAA,GAAAF,EAAA,uBAAAA,EACAjN,EAAAD,aAAAqM,EAAAjQ,GAAAiR,cACAC,EAAA,GAAAC,QAAA,UACAD,GAAA7L,KAAAxB,KACAA,GAAA,+BAQA,IAAAuN,GAAArT,EAAA,oBACAuS,KACAU,GAAA,oHAEAI,EAAAtD,OAAA,oBAAAhF,SAAA8H,GAAA,KAAAA,EAAA,gBACAQ,EAAAtD,OAAA,mBAAAgD,EAAA,KAAAE,EAAA,SACAI,EAAAtD,OAAA,OAAAjK,EAAA,SACAwM,EAAAvC,OAAAsD,GAGAxB,EAAA9B,OAAAuC,GACA5R,QAAAC,IAAAN,GACAL,EAAAsT,GAAAC,UAAAC,YAAA5B,KACA6B,kBAAA5B,EAAA6B,YAIAD,kBAAAE,WAGAF,kBAAA5B,EAAA6B,WACAE,QAAA,EAAA,QAeAC,QAAA,EAGAC,MAAA,EACAC,SAAA,QAKAlC,GAAAnP,OACA1C,EAAA,IAAA8O,EAAA,cAAAG,KAAA,IACAjP,EAAA,IAAA8O,EAAA,iBAAAG,KAAA,IACAjP,EAAA,IAAA8O,EAAA,gBAAAxO,KAAA,uCACAN,EAAA,IAAA8O,EAAA,gBAAAkD,aAMAhS,EAAA,mBAAAoK,MAAA,WACA,CAAA,GAAAiE,MACA2F,EAAAhU,EAAA,uBAAAgB,MACAiT,EAAAjU,EAAA,gCAAAgB,MACAkT,EAAAlU,EAAA,gCAAAgB,KACAhB,GAAA,uBAAAgB,MAEA,GADAN,QAAAC,IAAAsT,GACA,mBAAAD,EAAA,CACA3F,EAAA8F,MAAAF,EACA5F,EAAA+F,MAAAF,EACA7F,EAAAgG,OAAA,GACA,IAAAC,GAAA,0BACA1I,QAAAC,SAAA0I,KAAAD,EAAA/F,UAAAF,OAEA,CACAA,EAAAmG,UAAAP,EACA5F,EAAAoG,QAAAP,EACA7F,EAAAqG,SAAA,cAAA1U,EAAA,iCAAAgB,OAAA,GAAA,EACAqN,EAAAvL,KAAA2B,SAAAC,OAAA,cACA2J,EAAAvJ,KAAAL,SAAAmO,UACAvE,EAAAsG,SAAA3U,EAAA,yBAAAgB,MAEAqN,EAAAuG,OAAA5U,EAAA,yBAAAgB,MACAqN,EAAAwG,KAAA,cACA,IAAAC,GAAA,QAEAlJ,QAAAC,SAAA0I,KAAAO,EAAAvG,UAAAF,MAIArO,EAAA,2BAAAoK,MAAA,WAEApK,EAAA,iCAAAiP,KAAA,iCAAAjP,EAAAmE,MAAA7D,QACAN,EAAA,iCAAAgB,IAAAhB,EAAAmE,MAAA7D,OACA,IAAAU,GAAAhB,EAAA,iCAAAgB,KACA,eAAAA,GAAA,cAAAA,EACAhB,EAAA,uBAAAgS,OAGAhS,EAAA,uBAAA0C,SAIA1C,EAAA,6BAAAoK,MAAA,WACApK,EAAA,mCAAAiP,KAAAjP,EAAAmE,MAAA7D,QACAN,EAAA,mCAAAgB,IAAAhB,EAAAmE,MAAA7D,UAeAN,EAAA,SAAAkE,GAAA,QAAA,WACAlE,EAAA,SAAA+U,YAAA,sBACA/U,EAAA,SAAA+U,YAAA,wBIntBA,IAAA1H,eACAC,EAAA,OACAC,EAAA,SACAC,EAAA,OACAC,EAAA,MACAC,EAAA,QACAC,EAAA,QACAC,EAAA,UACAC,EAAA,aAEAhL,YAAA4B,QACAlC,iBAGAvC,EAAA,uEAAAmM,OAAA,WAUA,GATAnM,EAAA,qBAAAiP,KAAA,4CACAjP,EAAA,oBACAiP,KAAA,gDACAC,KAAA,YAAA,GACAlP,EAAA,oBACAiP,KAAA,2CACAjD,QAAA,UACAkD,KAAA,YAAA,GACAxO,QAAAC,IAAAwD,KAAA+F,OACA,WAAA/F,KAAA+F,MAEA,MADAlK,GAAA,iBAAAgM,QAAA,UACA,CAEA,IAAA4C,GAAAzK,KAAA+F,MACAhK,EAAA,iEAAA0O,EAAA,SACAP,IAEAA,GAAAC,IAAA,OACApO,GAAAqO,UAAAF,GACArO,EAAAC,MACAC,IAAAA,EACAE,SAAA,QACAK,QAAA,SAAA+N,GACA9N,QAAAC,IAAA6N,EAAAnO,KACA,IAAA8O,GAAAC,GAAAC,OACAf,IAAA,SAAA9J,GAAA,MAAAA,GAAA8K,OACAC,WAAA9N,mBACA+N,IAAAhB,EAAAnO,KAAAoO,KACA/N,SAAAC,IAAAwO,EACAX,GAAAnO,KAAAoO,IACAzO,GAAAyF,KAAA0J,EAAA,SAAAG,EAAAG,GACA,GAAAC,GAAA1P,EAAA,aACA0P,GAAA/M,KAAA,QAAA0K,aAAAiC,IACAtP,EAAAyF,KAAAgK,EAAA,SAAAxN,EAAA0N,GACA,GAAA7P,GAAAE,EAAA,qBACA4P,EAAA,WAAAvC,aAAAiC,GAAAK,EAAA/N,UAAA+N,EAAA/N,UAAA,MAAA+N,EAAAE,SACAC,EAAA,KAAAH,EAAAE,SAAAF,EAAA/N,UAAAgO,CACA9P,GAAAkB,IAAA2O,EAAA5P,IACAD,EAAAQ,KAAAwP,GACAJ,EAAAK,OAAAjQ,KAEAE,EAAA,qBAAA+P,OAAAL,KAEA1P,EAAA,qBAAAkP,KAAA,YAAA,QAKAlP,EAAA,iBAAAoK,MAAA,WAWA,GAVApK,EAAA,uBAAAgB,IAAA,UACAhB,EAAA,qBAAAiP,KAAA,4CACAjP,EAAA,oBACAiP,KAAA,2CACAjD,QAAA,UACAkD,KAAA,YAAA,GACAlP,EAAA,oBACAiP,KAAA,gDACAC,KAAA,YAAA,GACAlP,EAAAmE,MAAAnD,IAAAyD,SAAAuL,QACApF,iBAAA,mBAAAC,KAAA,CACA,GAAA3K,GAAA,wEACAmO,IACAA,GAAAxD,IAAAA,IACAwD,EAAAvD,IAAAA,IACAuD,EAAA4B,OAAA,IACA5B,EAAAC,IAAA,OACApO,GAAAqO,UAAAF,GACArO,EAAAC,MACAC,IAAAA,EACAE,SAAA,QACAK,QAAA,SAAA+N,GACA9N,QAAAC,IAAA6N,EAAAnO,KACA,IAAA8O,GAAAC,GAAAC,OACAf,IAAA,SAAA9J,GAAA,MAAAA,GAAAoK,WACAY,IAAAhB,EAAAnO,KAAAoO,KACA/N,SAAAC,IAAAwO,EACA,IACAe,GADAC,EAAA,CAEAnQ,GAAAyF,KAAA0J,EAAA,SAAAR,EAAAc,GACA,GAAAC,GAAA1P,EAAA,aACA0P,GAAA/M,KAAA,QAAAgM,GACA3O,EAAAyF,KAAAgK,EAAA,SAAAxN,EAAA0N,GACA,GAAA7P,GAAAE,EAAA,sBACA,IAAAmQ,GAAA,IAAAlO,KACAiO,EAAAP,EAAA5P,GAEA,IAAA6P,GAAA,WAAAvC,aAAAsC,EAAAL,MAAAK,EAAA/N,UAAA+N,EAAA/N,UAAA,MAAA+N,EAAAE,SACAC,EAAA,KAAAH,EAAAE,SAAAF,EAAA/N,UAAAgO,CACA9P,GAAAkB,IAAA2O,EAAA5P,IACAD,EAAAQ,KAAAwP,GACAJ,EAAAK,OAAAjQ,KAEAE,EAAA,qBAAA+P,OAAAL,GACAS,MAGAnQ,EAAA,qBAAAkP,KAAA,YAAA,UAKAxO,SAAAC,IAAA,8BAIAX,EAAA,qBAAAmM,OAAA,WACA,GAAA2C,EAEAA,GADA9O,EAAAmE,MAAA4K,SAAA,UACA,SAGA,OAEAD,EAAA,YACA9O,EAAA,oBACAiP,KAAA,2CACAjD,QAAA,UACAkD,KAAA,YAAA,GACAlP,EAAA,oBAAAiP,KAAA,gDACAvO,QAAAC,IAAAwD,KAAA+F,MACA,IAAAkG,GAAAjM,KAAA+F,MACAhK,EAAA,+DAAAkQ,EAAA,SACA/B,IACAA,GAAAC,IAAA,OACAD,EAAAgC,kBAAA,EACAnQ,GAAAqO,UAAAF,GACArO,EAAAC,MACAC,IAAAA,EACAE,SAAA,QACAK,QAAA,SAAA+N,GACA,GAEA8B,GAFAC,EAAA,KACAC,EAAA,GAEAC,EAAAjC,EAAAnO,KAAAqQ,MAAAC,cAAA,GAAAF,UACA/P,SAAAC,IAAA6N,EAAAnO,KAAAqQ,MAAAC,cAAA,GAAAF,YACA/P,QAAAC,IAAA6N,EAAAnO,KACA,IAAAuQ,GAAAxB,GAAAC,OACAf,IAAA,SAAA9J,GAAA,MAAAA,GAAAzE,KACAyP,IAAAhB,EAAAnO,KAAAwQ,WAAAC,OACAC,EAAA3B,GAAAC,OAGAf,IAAA,SAAA9J,GAAA,MAAAA,GAAAzE,KACAyP,IAAAiB,EACA/P,SAAAC,IAAAiQ,GACAlQ,QAAAC,IAAAoQ,GACArQ,QAAAC,IAAAyP,GACA1P,QAAAC,IAAAoQ,EAAAX,GACA,IACAY,GAAA,CACAhR,GAAAyF,KAAAgL,EAAA,SAAAxO,EAAAgP,GAOA,GAAAC,GAAA,KAAAD,EAAA/K,KAAAA,KAAA+K,EAAAlR,GAAA8F,aAAAoL,EAAA/K,KAAAA,MACAiL,EAAAnR,EAAA,oBACAmR,GAAAnQ,IAAAiQ,EAAAlR,IACAoR,EAAA7Q,KAAA4Q,GACAlR,EAAA,oBAAA+P,OAAAoB,EACA,IAAAzB,GAAA1P,EAAA,aACA0P,GAAA/M,KAAA,KAAAsO,EAAAlR,IACA2P,EAAA/M,KAAA,QAAAuO,GACA,IAAAF,EACAV,EAAAW,EAAAlR,GAGA2P,EAAAtN,SAAA,mBAGApC,EAAAyF,KAAAwL,EAAAG,QAAA,SAAAC,EAAApF,GACA,GAAAqF,GAAAV,EAAA3E,GAAA,EACAvL,SAAAC,IAAA2Q,EACA,IAAA7E,GAAAtG,0BAAAmL,EAAAzG,IAAAyG,EAAAxG,IAAAD,IAAAC,IACA,KAAAkG,GACAT,EAAA9D,IACA8D,EAAA9D,EACA+D,EAAAc,EAAAvR,GAGA,IAAAD,GAAAE,EAAA,oBACAF,GAAAkB,IAAAsQ,EAAAvR,IACAD,EAAA6C,KAAA,WAAA8J,EACA,IAAA8E,GAAAtL,cAAAqL,EAAApL,MACAsL,EAAA,KAAAF,EAAAG,UAAA,IAAAH,EAAAG,UAAA,KAAA,EACA3R,GAAAQ,KAAAkR,EAAAD,GACA7B,EAAAK,OAAAjQ,KAIAE,EAAA,oBAAA+P,OAAAL,GACAsB,KAIA,IAAAU,GAAA1R,EAAA,mBACAA,GAAA,oBAAAkP,KAAA,YAAA,GACAlP,EAAA,oBAAAgB,IAAAsP,GACAoB,EAAAxC,KAAA,YAAA,GACAwC,EAAA1Q,IAAAwP,GACA,KAAAkB,EAAA1Q,OACA0Q,EAAA1F,QAAA,UAEA,KAAAhM,EAAA,oBAAAgB,MACAhB,EAAA,kBAAAkP,KAAA,YAAA,GAGAlP,EAAA,kBAAAkP,KAAA,YAAA,OAKA,IAAAyC,aACA3R,GAAA,oBACAkE,GAAA,QAAA,WAEAyN,aAAAxN,KAAA+F,QACAiC,OAAA,WACA,GAAAoE,GAAA,KACAC,EAAA,EACA9P,SAAAC,IAAAwD,KAAA+F,OACAlK,EAAA,IAAA2R,cAAAvP,SAAA,mBACApC,EAAA,IAAAmE,KAAA+F,OAAAI,YAAA,mBACAtK,EAAA,IAAAmE,KAAA+F,MAAA,aAAAzE,KAAA,WACA,GAAAgH,GAAAzM,EAAAmE,MAAAxB,KAAA,WACAjC,SAAAC,IAAA8L,GACA8D,EAAA9D,IACA8D,EAAA9D,EACA+D,EAAArM,KAAA+F,SAGAxJ,QAAAC,IAAA6P,EACA,IAAAkB,GAAA1R,EAAA,mBACA0R,GAAA1Q,IAAAwP,GACA,KAAAkB,EAAA1Q,OACA0Q,EAAA1F,QAAA,YAGAhM,EAAA,oBAAAmM,OAAA,WACA,KAAAhI,KAAA+F,OACAlK,EAAA,kBACAsK,YAAA,YACAtJ,IAAAmD,KAAA+F,OACAlK,EAAA,iBAAAsK,YAAA,cAGAtK,EAAA,kBACAoC,SAAA,YACApB,IAAA,IACAhB,EAAA,iBAAAoC,SAAA,eAGApC,EAAA,kBAAAoK,MAAA,WACA,GAAA0E,GAAA7C,CAGA6C,GADA9O,EAAAmE,MAAA4K,SAAA,aACA,YAGA,OAEAD,EAAA,YACA7C,EAAAjM,EAAA,IAAA8O,EAAA,QAAA9N,KACA,IAAAoP,GAAApQ,EAAA,IAAA8O,EAAA,WAAA9N,KAIA,IAHAN,QAAAC,IAAAsL,GACAvL,QAAAC,IAAAyP,GACA1P,QAAAC,IAAAmO,GACA,KAAA7C,EAAA,CAEA,GAAA/L,GAAA,iEAAA+L,EAAA,SACAoC,IACAA,GAAAC,IAAA,OACAD,EAAA4D,cAAA,EACA/R,GAAAqO,UAAAF,GACArO,EAAAC,MACAC,IAAAA,EACAE,SAAA,QACAK,QAAA,SAAA+N,GACA,GAAAiB,GAAAjB,EAAAnO,KAAAqQ,MAAAsE,kBACAtU,SAAAC,IAAA6N,EAAAnO,KACA,IAAAuQ,GAAAxB,GAAAC,OACAf,IAAA,SAAA9J,GAAA,MAAAA,GAAAzE,KACAyP,IAAAhB,EAAAnO,KAAAwQ,WAAAC,OACAmE,EAAA7F,GAAAC,OACAf,IAAA,SAAA9J,GAAA,MAAAA,GAAAzE,KACAyP,IAAAhB,EAAAnO,KAAAwQ,WAAApB,OAGA,IAFA/O,QAAAC,IAAAsU,GACAvU,QAAAC,IAAA6N,EAAAnO,KAAAqQ,MAAAsE,oBACAvF,EAAAvN,OAAA,EAAA,CACAqP,SAAAX,EAAApC,EAAAnO,KAAAqQ,MAAAzE,QAAA,GAAA/F,KACAlG,EAAA,IAAA8O,EAAA,cAAAG,KAAAhJ,cAAA,YAAAgG,EAAA1H,MAAA,KAAA,KACAvE,EAAA,IAAA8O,EAAA,cAAAG,KAAAhJ,cAAAsL,WAEAvR,EAAA,uBAAA0C,MACA,IAAArC,MACA6U,EAAAlV,EAAA,qBACAmV,EAAAnV,EAAA,2BACAoV,EAAApV,EAAA,0BACAkV,GAAA7C,OACA,KAAA,GAAApQ,GAAA,EAAAA,EAAAwN,EAAAvN,OAAAD,IAAA,CACAvB,QAAAC,IAAA8O,EAAAxN,GAGA,KAAA,GAFA4Q,GAAAoC,EAAAxF,EAAAxN,GAAAmO,SAAA,GAAAxO,UACAyT,EAAA5F,EAAAxN,GAAAqT,4BACAjE,EAAA,EAAAA,EAAAgE,EAAAnT,OAAAmP,IAAA,CACA,GAAAkE,GAAAF,EAAAnT,OAAAuN,EAAAvN,OACAsT,EAAAD,EAAA,EAAA,EAAA,GAAAA,CACAC,GAAA,IAAAD,EAAA,EAAAC,EACAA,EAAA,CACA,IAEAC,GAAAzV,EAAA,gEAAAwV,EAAA,qBAEA3D,EAAA7R,EAAA,wEAAAwV,EAAA,kBAAApF,EAAAiB,EAAA,aAEAQ,GAAA9B,OAAA,0EACA,IAAAuC,GAAAtS,EAAA,WACA8F,EAAAD,aAAAwP,EAAAhE,GAAA6B,aACA,IAAAmC,EAAAhE,GAAAqE,oBAAAxT,OAAA,EACAxB,QAAAC,IAAA,kBAEA,CACAD,QAAAC,IAAA,eACAD,QAAAC,IAAA0U,EAAAhE,GAAAsE,kBAOA,KAAA,GAHAtC,GACAuC,EAJAC,EAAAR,EAAAhE,GAAAsE,kBACAG,EAAArR,OAAAoR,EAAA,GAAAE,aACAC,EAAA,EAGAC,EAAAH,EAAAI,OAAA,IAAA,GAAA,EACAC,EAAA,EAAAA,EAAAN,EAAA3T,OAAAiU,IAAA,CACA,GAAAC,GAAA,EACAH,IAAA,IAAAE,IAEAC,EAAA,wBAEA,IAGAC,GAHA5D,EAAAoD,EAAAM,GAAAJ,YAEAA,EAAAtR,OAAAgO,EAEA0D,KAAAN,EAAA3T,OAAA,IACAmU,EAAA5R,OAAAoR,EAAAM,EAAA,GAAAJ,cAGAA,EAAAG,SAAAF,GAMA3C,EAAArT,EAAA,WAAAiC,EAAAoP,EAAA0E,EAAAG,OAAA,MACAH,EAAAG,QAAA,IAAAD,IACAA,GAAA,EACA3D,EAAAvC,OAAA,oDACAqG,EAAA,yBAKA/C,EAAAtD,OAAA,kCAAAqG,EAAAL,EAAArR,OAAA,KAAA,mBACAkR,EAAA5V,EAAA,yBAAA+V,EAAAO,UAAA,SACAjD,EAAAtD,SACAiG,EAAAD,EAAAG,QAGAN,EAAA7F,OAAA,IAAAgG,EAAAO,WAIAD,EAAAH,SAAAH,EAAAG,SACA7C,EAAAtD,OAAA6F,GACAtD,EAAAvC,OAAAsD,IAGA8C,GAAAN,EAAA3T,OAAA,IACAxB,QAAAC,IAAA,QACAkR,EAAA9B,OAAAuC,GAEAmD,EACA1F,OAAA,oBAAAhF,SAAA8H,GAAA,KAAAA,EAAA,aAAA/M,EAAA,QACAiK,OAAA8B,GACA5P,EAAA,EACAmT,EACArF,OAAA0F,GAGAN,EACApF,OAAA0F,GAGAP,EACAnF,OAAAoF,GACApF,OAAAqF,OA2BA1U,QAAAC,IAAAN,UHnVAL,EAAA,UAAAoK,MAAA,SAAAJ,GACAA,EAAAC,gBAEA,IAAA6B,GAAA9L,EAAAmE,MAAAxB,KAAA,QAAA4B,MAAA,KAAA,EACAgS,SAAAC,UAAA,KAAA,KAAA,IAAA1K,GACA/G,eAAA/E,EAAAmE,MAAAxB,KAAA,QAAA4B,MAAA,KAAA,MAmBAvE,EAAAsT,GAAAmD,OAAA,WAKA,GAAAC,GAAAC,MAAAC,UAAAC,MAAAC,KAAAC,UAGA,OAAA5S,MAAAsB,KAAA,WAEA,GAAAuR,GAAAhX,EAAAmE,MACA8S,EAAAD,EAAA3W,KAAA,MAIA4W,IAAAD,EAAArU,KAAA,MAAAsU,GAAAC,KAAA,WAGAF,EAAAN,EAAA,IAAA,QAAAS,MAAAH,EAAAN,EAAAU,OAAA,SAIApX,EAAAiE,UAAAoT,MAAA,aAaA,IAAAC,mBAAA,WACA,GAAAC,KACA,OAAA,UAAAC,EAAAC,EAAAC,GACAA,IACAA,EAAA,4CAEAH,EAAAG,IACAC,aAAAJ,EAAAG,IAEAH,EAAAG,GAAAxL,WAAAsL,EAAAC,MAIAzX,GAAA4L,QAAAgM,OAAA,WAEAN,kBAAA,aAGA,IAAA,wBAGA5L,OAAAC,QAAA,SAAAzB,GACAA,EAAAhI,OAAA,GAAA,KAAAgI,EAAA1C,OAAA,KACA0C,EAAAA,EAAA2N,UAAA,GAEA,IAMAC,GAAA7V,EAAA8V,EAJA1J,KAEA2J,EAAA9N,EAAA3F,MAAA,IAKA,KAAAtC,EAAA,EAAA8V,EAAAC,EAAA9V,OAAA6V,EAAA9V,EAAAA,IACA6V,EAAAE,EAAA/V,GAAAsC,MAAA,IAAA,GAGA8J,EAAA4J,mBAAAH,EAAA,KAAA,GAAAA,EAAA5V,OACA+V,mBAAAH,EAAA,GAAA/R,QAAA,MAAA,OAAA,CAGA,OADArF,SAAAC,IAAA0N,GACAA,GAGA3C,OAAA4H,GAAA4E,QACAC,QAAA,SAAAC,GACA,MAAAjU,MAAAsB,KAAA,WACA,GAAA4E,GAAArK,EAAAmE,KACAkG,GAAAhI,GAAA,oBACA8B,KAAAkU,SAAAD,EAEA/N,EAAA0K,YAAA,WAAAqD,QA+CA7J,UAAA,SAAA+J,EAAAC,GACA,GAAAnR,KACA,KAAA,GAAAoR,KAAAF,GACA,GAAAA,EAAAG,eAAAD,GAAA,CACA,GAAArC,GAAAoC,EAAAA,EAAA,IAAAC,EAAA,IAAAA,EAAAE,EAAAJ,EAAAE,EACApR,GAAA4F,KAAA,gBAAA0L,GACAnK,UAAAmK,EAAAvC,GACAwC,mBAAAxC,GAAA,IAAAwC,mBAAAD,IAGA,MAAAtR,GAAAyB,KAAA,KAEA,IAAA+P,IAAA/W,0BACAnB,SAAAC,IAAAiY,KACA,OAAAA,IAAA,OAAAA,KACA5Y,EAAA,0BAAAoC,SAAA","file":"atltransit.js","sourcesContent":["\n// Planner Widget Javascript\n$('#planner-timepicker').timepicker();\n$('#test-carousel, #next-carousel, #schedules-carousel').carousel({\n\t\tinterval: false\n});\n$('#next-arrivals-agencies').val('');\nvar geolocationBool = false;\nvar lat, lon;\n// var Locale = {};\n// Locale.autocompleteMessages = {\n//         noResults: \"No results found.\",\n//         results: function( amount ) {\n//             return amount + ( amount > 1 ? \" results are \" : \" result is\" ) + \" available, use the up and down arrow keys to navigate them.\";\n//         }\n// };\nvar labelMap = {\n\t'RED': 'label label-danger',\n\t'BLUE': 'label label-primary',\n\t'GOLD': 'label label-warning',\n\t'GREEN': 'label label-success',\n\t'MARTA': 'label label-orange',\n\t'CCT': 'label label-magenta',\n\t'GCT': 'label label-maroon',\n\t'GRTA': 'label label-cyan',\n};\nvar esriUrl = 'https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer/';\nfunction getEsriGeometry(option, id){\n\t$.ajax({\n\t\turl: esriUrl + 'find?',\n\t\tdataType: 'jsonp',\n\t\t// delay: 250,\n\t\tdata: {\n\t\t    text: option.text, // search term\n\t\t    magicKey: option.id,\n\t\t    // outFields: 'City,Region',\n\t\t    f: 'pjson',\n\t\t    // distance: 20000,\n\t\t    // searchExtents: -'85.386,34.618,-83.269,32.844',\n\t\t    // location: '-84.383149,33.750855',\n\t\t},\n\t\tsuccess: function(data){\n\t\t\tconsole.log(data);\n\t\t\tvar geom = data.locations[0].feature.geometry;\n\t\t\t$('.planner-form input[name='+id+'Place]').val(geom.y + ',' + geom.x);\n\t\t}\n\t});\n}\nfunction formatRepo (repo) {\n\tif (repo.loading) return repo.text;\n\n\tvar markup = '<div class=\"clearfix\">' +\n\t'<div class=\"col-sm-1\">' +\n\t// '<img src=\"' + repo.owner.avatar_url + '\" style=\"max-width: 100%\" />' +\n\t'</div>' +\n\t'<div clas=\"col-sm-10\">' +\n\t'<div class=\"clearfix\">' +\n\t'<div class=\"col-sm-6\">' + repo.text + '</div>' +\n\t// '<div class=\"col-sm-3\"><i class=\"fa fa-code-fork\"></i> ' + repo.forks_count + '</div>' +\n\t// '<div class=\"col-sm-2\"><i class=\"fa fa-star\"></i> ' + repo.stargazers_count + '</div>' +\n\t'</div>';\n\n\tif (repo.description) {\n\tmarkup += '<div>' + repo.description + '</div>';\n\t}\n\n\tmarkup += '</div></div>';\n\n\treturn markup;\n}\n\nfunction formatRepoSelection (repo) {\n\treturn repo.text;\n}\nvar urlParams;\n$(function(){\n\t// // load stop ids\n\t// var url = 'http://atlanta.onebusaway.org/api/api/where/stop-ids-for-agency/MARTA.json?';\n\t// var params = {};\n\t// // params.query = stopCode;\n\t// params.key = 'TEST';\n\t// url += serialize(params);\n\t// $.ajax({\n\t// \turl: url,\n\t// \tdataType: 'jsonp',\n\t// \tsuccess: function(json){\n\t// \t\tconsole.log(json.data);\n\t// \t\tif (json.data.list.length > 0){\n\t// \t\t\tstopId = json.data.list[0].id;\n\n\t// \t\t}\n\t// \t}\n\t// });\nif (typeof setupAutoComplete === 'function'){\n\tsetupAutoComplete();\n}\n\n\turlParams = jQuery.unparam(window.location.hash);\n\t// console.log(params);{}\n\tif (typeof urlParams.tab !== 'undefined'){\n\t\t$('#' + urlParams.tab + '-link').trigger('click');\n\t\tif (typeof urlParams.stopId !== 'undefined'){\n\t\t\twindow.setTimeout(function(){\n\t\t\t$('#' + urlParams.tab + '-arrivals-btn')\n\t\t\t\t.removeClass('disabled')\n\t\t\t\t.val(urlParams.stopId)\n\t\t\t\t.trigger('click');\n\t\t\t}, 200);\n\t\t\t\n\t\t\t// $(' .stop-code').trigger('click');\n\t\t}\n\t}\n\t$(\".js-data-example-ajax\").change(function(){\n\t\tconsole.log(this.value);\n\t\tconsole.log($(this).select2('data'));\n\t\tvar data = $(this).select2('data') // $(this).select2('data')[0];\n\t\tgetEsriGeometry(data, this.id);\n\t});\n\t$(\".js-data-example-ajax\").select2({\n\t\t// placeholder: \"From\",\n\t\tallowClear: true,\n\t\tajax: {\n\t\t\turl: esriUrl + 'suggest?',\n\t\t\tdataType: 'jsonp',\n\t\t\tdelay: 250,\n\t\t\tdata: function (term, page) {\n\t\t\t\treturn {\n\t\t\t\t\ttext: term, // search term\n\t\t\t\t\t// page: params.page,\n\t\t\t\t\t// outFields: 'City,Region',\n\t\t\t\t\tf: 'json',\n\t\t\t\t\tdistance: 20000,\n\t\t\t\t\tsearchExtents: '-85.386,34.618,-83.269,32.844',\n\t\t\t\t\tlocation: '-84.383149,33.750855',\n\t\t\t\t};\n\t\t\t},\n\t\t\tresults: function (data, page) {\n\t\t\t\tconsole.log(data);\n\t\t\t\t// parse the results into the format expected by Select2.\n\t\t\t\t// since we are using custom formatting functions we do not need to\n\t\t\t\t// alter the remote JSON data\n\t\t\t\tvar res = data.suggestions;\n\t\t\t\tvar array = []\n\t\t\t\t$.each(res, function(i, item){\n\t\t\t\tvar arrItem = {\n\t\t\t\tid: item.magicKey,\n\t\t\t\ttext: item.text\n\t\t\t\t};\n\t\t\t\tarray.push(arrItem);\n\t\t\t\t});\n\t\t\t\treturn {\n\t\t\t\t\tresults: array\n\t\t\t\t};\n\t\t\t},\n\t\t\tcache: true\n\t\t},\n\t\t// escapeMarkup: function (markup) { return markup; }, // let our custom formatter work\n\t\tminimumInputLength: 3,\n\t\ttemplateResult: function (option) {\n\t\t\treturn '<div class=\"clearfix\">' + option.text + '</div>';\n\t\t},\n\t\ttemplateSelection: function (option) {\n\t\t\treturn option.text;\n\t\t}\n\t});\n\tvar routeTypeMap = {\n\t\t'0': 'Tram',\n\t\t'1': 'Subway',\n\t\t'2': 'Rail',\n\t\t'3': 'Bus',\n\t\t'4': 'Ferry',\n\t\t'5': 'Cable',\n\t\t'6': 'Gondola',\n\t\t'7': 'Funicular'\n\t};\n\t// Geolocation\n\tif (\"geolocation\" in navigator) {\n\t\t/* geolocation is available */\n\t\tconsole.log('geolocation');\n\t\tgeolocationBool = true;\n\t\tnavigator.geolocation.getCurrentPosition(function(position) {\n\t\t\tlat = position.coords.latitude;\n\t\t\tlon = position.coords.longitude;\n\t\t\tconsole.log([position.coords.latitude, position.coords.longitude]);\n\t\t});\n\t} else {\n\t\t/* geolocation IS NOT available */\n\t}\n\t// Check if agency data exists\n\tvar url = 'http://atlanta.onebusaway.org/api/api/where/agencies-with-coverage.json?';\n\tvar params = {};\n\t// params.id = agencyId;\n\tparams.key = 'TEST';\n\turl += serialize(params);\n\t$.ajax({\n\t\turl: url,\n\t\tdataType: 'jsonp',\n\t\tsuccess: function(json){\n\t\t\tconsole.log(json.data.list);\n\t\t\tvar agencies = json.data.list;\n\t\t\t$.each(agencies, function(i, agency) {  \n\t\t\t\t$('.arrivals-agencies option[value='+agency.agencyId+']').removeAttr('disabled');\n\t\t\t});\n\t\t}\n\t}); // end ajax\n\n\t// Go back to previous view on planner widget carousels\n\t$('.planner-tab-li').click(function(e){\n\t\tvar widgetClass;\n\t\tif ($(this).hasClass('stop-code')){\n\t\t\twidgetClass = 'stop-code';\n\t\t}\n\t\telse{\n\t\t\twidgetClass = 'next';\n\t\t}\n\t\tif($(this).hasClass('active') && $('#' + widgetClass + '-carousel-inner > .active').index() === 1){\n\t\t\t// console.log('this is active');\n\t\t\t$('#' + widgetClass + '-back-btn').trigger('click');\n\t\t}\n\t});\n\t\n\t// Real-time agency select change\n\t$('input[type=radio][name=agency-arrivals-option], #next-arrivals-agencies').change(function(){\n\t\t$('#next-arrivals-routes').html('<option value=\"\">[Select Route]</option>');\n\t\t$('#next-arrivals-trips')\n\t\t\t.html('<option value=\"\">[Select Direction]</option>')\n\t\t\t.prop('disabled', true);\n\t\t$('#next-arrivals-stops')\n\t\t\t.html('<option value=\"\">[Select Stop]</option>')\n\t\t\t.trigger('change')\n\t\t\t.prop('disabled', true);\n\t\tconsole.log(this.value);\n\t\tif (this.value === 'Nearby'){\n\t\t\t$('#get-location').trigger('click');\n\t\t\treturn true;\n\t\t}\n\t\tvar agencyId = this.value;\n\t\tlocation.hash = 'agency=' + agencyId;\n\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/routes-for-agency/' + agencyId + '.json?';\n\t\tvar params = {};\n\t\t// params.id = agencyId;\n\t\tparams.key = 'TEST';\n\t\turl += serialize(params);\n\t\t$.ajax({\n\t\t\turl: url,\n\t\t\tdataType: 'jsonp',\n\t\t\tsuccess: function(json){\n\t\t\t\tconsole.log(json.data);\n\t\t\t\tvar routeNest = d3.nest()\n\t\t\t\t\t\t.key(function(d) { return d.type; })\n\t\t\t\t\t\t.sortValues(compareRouteNames)\n\t\t\t\t\t\t.map(json.data.list);\n\t\t\t\tconsole.log(routeNest);\n\t\t\t\tvar routes = json.data.list;\n\t\t\t\t$.each(routeNest, function(type, routes) {  \n\t\t\t\t\tvar optgroup = $('<optgroup>');\n\t\t\t\t\toptgroup.attr('label',routeTypeMap[type]);\n\t\t\t\t\t$.each(routes, function(i, route){\n\t\t\t\t\t\tvar option = $(\"<option></option>\");\n\t\t\t\t\t\tvar routeFullText = routeTypeMap[type] === 'Subway' ? route.shortName : route.shortName + ' - ' + route.longName;\n\t\t\t\t\t\tvar routeText = route.longName === '' ? route.shortName : routeFullText;\n\t\t\t\t\t\toption.val(route.id);\n\t\t\t\t\t\toption.text(routeText);\n\t\t\t\t\t\toptgroup.append(option);\n\t\t\t\t\t});\n\t\t\t\t\t$('#next-arrivals-routes').append(optgroup);\n\t\t\t\t});\n\t\t\t\t$('#next-arrivals-routes').prop('disabled', false);\n\t\t\t}\n\t\t}); // end ajax\n\t});\n\t// Use location \n\t$('#get-location').click(function(){\n\t\t$('#next-arrivals-agencies').val('Nearby');\n\t\t$('#next-arrivals-routes').html('<option value=\"\">[Select Route]</option>');\n\t\t$('#next-arrivals-stops')\n\t\t\t.html('<option value=\"\">[Select Stop]</option>')\n\t\t\t.trigger('change')\n\t\t\t.prop('disabled', true);\n\t\t$('#next-arrivals-trips')\n\t\t\t.html('<option value=\"\">[Select Direction]</option>')\n\t\t\t.prop('disabled', true);;\n\t\t$(this).val(moment().unix());\n\t\tif (geolocationBool && typeof lat !== 'undefined'){\n\t\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/routes-for-location.json?';\n\t\t\tvar params = {};\n\t\t\tparams.lat = lat;\n\t\t\tparams.lon = lon;\n\t\t\tparams.radius = 4000;\n\t\t\tparams.key = 'TEST';\n\t\t\turl += serialize(params);\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\tdataType: 'jsonp',\n\t\t\t\tsuccess: function(json){\n\t\t\t\t\tconsole.log(json.data);\n\t\t\t\t\tvar routeNest = d3.nest()\n\t\t\t\t\t\t.key(function(d) { return d.agencyId; })\n\t\t\t\t\t\t.map(json.data.list);\n\t\t\t\t\tconsole.log(routeNest);\n\t\t\t\t\tvar agencyCount = 0;\n\t\t\t\t\tvar firstValue;\n\t\t\t\t\t$.each(routeNest, function(agency, routes) {  \n\t\t\t\t\t\tvar optgroup = $('<optgroup>');\n\t\t\t\t\t\toptgroup.attr('label',agency);\n\t\t\t\t\t\t$.each(routes, function(i, route){\n\t\t\t\t\t\t\tvar option = $(\"<option></option>\");\n\t\t\t\t\t\t\tif (agencyCount === 0 || i === 0){\n\t\t\t\t\t\t\t\tfirstValue = route.id;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar routeFullText = routeTypeMap[route.type] === 'Subway' ? route.shortName : route.shortName + ' - ' + route.longName;\n\t\t\t\t\t\t\tvar routeText = route.longName === '' ? route.shortName : routeFullText;\n\t\t\t\t\t\t\toption.val(route.id);\n\t\t\t\t\t\t\toption.text(routeText);\n\t\t\t\t\t\t\toptgroup.append(option);\n\t\t\t\t\t\t});\n\t\t\t\t\t    $('#next-arrivals-routes').append(optgroup);\n\t\t\t\t\t    agencyCount++;\n\t\t\t\t\t});\n\t\t\t\t\t// $('#next-arrivals-routes').val(firstValue);\n\t\t\t\t\t$('#next-arrivals-routes').prop('disabled', false);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tconsole.log('no geolocation available');\n\t\t}\n\t});\n\t// Select route change\n\t$('#next-arrivals-routes').change(function(){\n\t\tvar widgetClass;\n\t\tif ($(this).hasClass('nearby')){\n\t\t\twidgetClass = 'nearby';\n\t\t}\n\t\telse{\n\t\t\twidgetClass = 'next';\n\t\t}\n\t\t$('#next-arrivals-stops')\n\t\t\t.html('<option value=\"\">[Select Stop]</option>')\n\t\t\t.trigger('change')\n\t\t\t.prop('disabled', true);\n\t\t$('#next-arrivals-trips').html('<option value=\"\">[Select Direction]</option>');\n\t\tconsole.log(this.value);\n\t\tvar routeId = this.value;\n\t\tlocation.hash += '&route=' + routeId;\n\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/stops-for-route/' + routeId + '.json?';\n\t\tvar params = {};\n\t\tparams.key = 'TEST';\n\t\tparams.includePolylines = false;\n\t\turl += serialize(params);\n\t\t$.ajax({\n\t\t\turl: url,\n\t\t\tdataType: 'jsonp',\n\t\t\tsuccess: function(json){\n\t\t\t\tvar closestDistance = 10000000000;\n\t\t\t\tvar closestStop = '';\n\t\t\t\tvar selectedTrip;\n\t\t\t\tvar stopGroups = json.data.entry.stopGroupings[0].stopGroups;\n\t\t\t\tconsole.log(json.data.entry.stopGroupings[0].stopGroups);\n\t\t\t\tconsole.log(json.data);\n\t\t\t\tvar stopMap = d3.nest()\n\t\t\t\t\t.key(function(d) { return d.id; })\n\t\t\t\t\t.map(json.data.references.stops);\n\t\t\t\tvar tripMap = d3.nest()\n\t\t\t\t\t// .key(function(d) { return d.name.name; })\n\t\t\t\t\t// .key(function(d) { return d.tripHeadsign; })\n\t\t\t\t\t.key(function(d) { return d.id; })\n\t\t\t\t\t.map(stopGroups);\n\t\t\t\tconsole.log(stopMap);\n\t\t\t\tconsole.log(tripMap);\n\t\t\t\tconsole.log(routeId);\n\t\t\t\tconsole.log(tripMap[routeId]);\n\t\t\t\tvar headsigns = [];\n\t\t\t\tvar tripCounter = 0;\n\t\t\t\t$.each(stopGroups, function(i, trip){\n\t\t\t\t\t// var tripId = trip.tripId;\n\t\t\t\t\t// console.log(trip.schedule.stopTimes);\n\t\t\t\t\t\n\t\t\t\t\t// if (typeof tripMap[routeId][tripId] !== 'undefined' && tripMap[routeId][tripId][0].routeId === routeId && headsigns.indexOf(tripMap[routeId][tripId][0].tripHeadsign) === -1){\n\t\t\t\t\t\t// var headsign = tripMap[routeId][tripId][0].tripHeadsign;\n\t\t\t\t\t\t// headsigns.push(headsign);\n\t\t\t\t\t\tvar tripLabel = trip.name.name === '' ? trip.id : trimHeadsign(trip.name.name);\n\t\t\t\t\t\tvar tripOption = $(\"<option></option>\");\n\t\t\t\t\t\ttripOption.val(trip.id);\n\t\t\t\t\t\ttripOption.text(tripLabel);\n\t\t\t\t\t\t$('#next-arrivals-trips').append(tripOption);\n\t\t\t\t\t\tvar optgroup = $('<optgroup>');\n\t\t\t\t\t\toptgroup.attr('id', trip.id);\n\t\t\t\t\t\toptgroup.attr('label',tripLabel);\n\t\t\t\t\t\tif (tripCounter === 0){\n\t\t\t\t\t\t\tselectedTrip = trip.id;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\toptgroup.addClass('hidden-optgroup');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t$.each(trip.stopIds, function(j, stopId){\n\t\t\t\t\t\t\tvar stop = stopMap[stopId][0];\n\t\t\t\t\t\t\t// console.log(stop)\n\t\t\t\t\t\t\tvar distance = getDistanceFromLatLonInKm(stop.lat, stop.lon, lat, lon);\n\t\t\t\t\t\t\tif (tripCounter === 0){\n\t\t\t\t\t\t\t\tif (distance < closestDistance){\n\t\t\t\t\t\t\t\t\tclosestDistance = distance;\n\t\t\t\t\t\t\t\t\tclosestStop = stop.id;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar option = $(\"<option></option>\");\n\t\t\t\t\t\t\toption.val(stop.id);\n\t\t\t\t\t\t\toption.attr('distance', distance);\n\t\t\t\t\t\t\tvar stopName = cleanStopName(stop.name);\n\t\t\t\t\t\t\tvar stopDir = stop.direction !== '' ? '(' + stop.direction + ') ' : '';\n\t\t\t\t\t\t\toption.text(stopDir + stopName);\n\t\t\t\t\t\t\toptgroup.append(option);\n\t\t\t\t\t\t\t// $('#' + widgetClass + '-arrivals-stops').append(option);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t$('#' + widgetClass + '-arrivals-stops').append(optgroup);\n\t\t\t\t\t\ttripCounter++;\n\t\t\t\t\t// } // end if valid trip for route\n\n\t\t\t\t}); // end each trip\n\t\t\t\tvar $stops = $('#next-arrivals-stops');\n\t\t\t\t$('#next-arrivals-trips').prop('disabled', false);\n\t\t\t\t$('#next-arrivals-trips').val(selectedTrip);\n\t\t\t\t$stops.prop('disabled', false);\n\t\t\t\t$stops.val(closestStop);\n\t\t\t\tif ($stops.val() !== ''){\n\t\t\t\t\t$stops.trigger('change');\n\t\t\t\t}\n\t\t\t\tif ($('#next-arrivals-stops').val() !== ''){\n\t\t\t\t\t$('#next-arrivals-btn').prop('disabled', false);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t$('#next-arrivals-btn').prop('disabled', true);\n\t\t\t\t}\n\t\t\t} // end success\n\t\t}); // end ajax\n\t});\n\t// $('.arrivals-routes').change(function(){\n\t// });\n\tvar previousTrip;\n\t$('#next-arrivals-trips')\n\t\t.on('focus', function () {\n\t\t\t// Store the current value on focus and on change\n\t\t\tpreviousTrip = this.value;\n\t    }).change(function(){\n\t    \tvar closestDistance = 10000000000;\n\t\t\tvar closestStop = '';\n\t\t\tconsole.log(this.value);\n\t\t\t$('#' + previousTrip).addClass('hidden-optgroup');\n\t\t\t$('#' + this.value).removeClass('hidden-optgroup');\n\t\t\t$('#' + this.value + ' > option').each(function(){\n\t\t\t\tvar distance = $(this).attr('distance');\n\t\t\t\tconsole.log(distance);\n\t\t\t\tif (distance < closestDistance){\n\t\t\t\t\tclosestDistance = distance;\n\t\t\t\t\tclosestStop = this.value;\n\t\t\t\t}\n\t\t\t});\n\t\t\tconsole.log(closestStop);\n\t\t\tvar $stops = $('#next-arrivals-stops');\n\t\t\t$stops.val(closestStop);\n\t\t\tif ($stops.val() !== ''){\n\t\t\t\t$stops.trigger('change');\n\t\t\t}\n\t\t});\n\t$('#next-arrivals-stops').change(function(){\n\t\tvar stopId = this.value;\n\t\tif (stopId !== ''){\n\t\t\t$('#next-arrivals-btn')\n\t\t\t\t.removeClass('disabled')\n\t\t\t\t.val(stopId);\n\t\t\t\n\t\t\tlocation.hash += '&stop=' + stopId;\n\n\t\t\t$('.get-schedules').removeClass('disabled');\n\t\t}\n\t\telse {\n\t\t\t$('#next-arrivals-btn')\n\t\t\t\t.addClass('disabled')\n\t\t\t\t.val('');\n\t\t\t$('.get-schedules').addClass('disabled');\n\t\t}\n\t});\n\t$('#stop-code').on('keyup', function(e){\n\t\tvar tableId = '#stop-code-arrivals-table';\n\t\tvar table = $(tableId);\n\t\t\n\t\tvar stopCode = $('#stop-code').val() === '' ? '103134' : $('#stop-code').val();\n\t\tif (this.value.length < 6){\n\t\t\tconsole.log(this.value);\n\t\t\t$('#stop-code-error-msg').html('Please enter a valid <strong>six-digit</strong> stop ID.');\n\t\t\t$('#stop-code-arrivals-btn')\n\t\t\t\t.addClass('disabled')\n\t\t\t\t.val('');\n\t\t}\n\t\telse if (this.value.length === 6){\n\t\t\tconsole.log(e);\n\t\t\tconsole.log(this.value);\n\t\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/stops-for-location.json?';\n\t\t\tvar params = {};\n\t\t\tparams.query = stopCode;\n\t\t\tparams.key = 'TEST';\n\t\t\turl += serialize(params);\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\tdataType: 'jsonp',\n\t\t\t\tsuccess: function(json){\n\t\t\t\t\tconsole.log(json.data);\n\t\t\t\t\tif (json.data.list.length > 0){\n\t\t\t\t\t\tstopId = json.data.list[0].id;\n\t\t\t\t\t\tstopName = cleanStopName(json.data.list[0].name);\n\t\t\t\t\t\t// $('.get-next-stop-code').removeClass('btn-danger').addClass('btn-primary');\n\t\t\t\t\t\t$('#stop-code-arrivals-btn')\n\t\t\t\t\t\t\t.removeClass('disabled')\n\t\t\t\t\t\t\t.val(stopId);\n\t\t\t\t\t\t$('#stop-code-error-msg').html('Stop: <strong>' + stopName + '</strong>');\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\ttable.hide();\n\t\t\t\t\t\t$('#nearby-arrival-msg').text('No arrivals.');\n\t\t\t\t\t\t$('#nearby-arrival-msg').show();\n\t\t\t\t\t\t$('#stop-code-error-msg').html('Unknown stop ID.');\n\t\t\t\t\t\t$('#stop-code-arrivals-btn')\n\t\t\t\t\t\t\t.addClass('disabled')\n\t\t\t\t\t\t\t.val('');;\n\t\t\t\t\t\t// $('.get-next-stop-code').removeClass('btn-primary').addClass('btn-danger');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t} // end if stop code length === 6\n\t\telse {\n\t\t\t$('#stop-code-arrivals-btn')\n\t\t\t\t.addClass('disabled')\n\t\t\t\t.val('');\n\t\t\t$('#stop-code-error-msg').html('Please enter a valid <strong>six-digit</strong> stop ID.');\n\t\t}\n\t});\n\t$('.get-arrivals').click(function(){\n\t\tvar widgetClass, stopId;\n\t\t\n\t\tif ($(this).hasClass('stop-code')){\n\t\t\twidgetClass = 'stop-code';\n\t\t}\n\t\telse{\n\t\t\twidgetClass = 'next';\n\t\t}\n\t\tvar tableId = '#' + widgetClass + '-arrivals-table';\n\t\tvar table = $(tableId);\n\t\tstopId = $('#' + widgetClass + '-arrivals-btn').val();\n\n\t\tconsole.log(stopId);\n\t\tconsole.log(widgetClass);\n\t\tif (stopId !== ''){\n\t\t\t// console.log('stop coding it up');\n\t\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/arrivals-and-departures-for-stop/' + stopId + '.json?';\n\t\t\tvar params = {};\n\t\t\tparams.key = 'TEST';\n\t\t\tparams.minutesBefore = 1;\n\t\t\turl += serialize(params);\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\tdataType: 'jsonp',\n\t\t\t\tsuccess: function(json){\n\t\t\t\t\tvar arrivals = json.data.entry.arrivalsAndDepartures;\n\t\t\t\t\tconsole.log(json.data);\n\t\t\t\t\tvar stopMap = d3.nest()\n\t\t\t\t\t\t.key(function(d) { return d.id; })\n\t\t\t\t\t\t.map(json.data.references.stops);\n\n\t\t\t\t\tconsole.log(json.data.entry.arrivalsAndDepartures);\n\t\t\t\t\tif (arrivals.length > 0){\n\t\t\t\t\t\tstopName = stopMap[json.data.entry.stopId][0].name;\n\t\t\t\t\t\t$('#' + widgetClass + '-stop-code').html(cleanStopName('Stop ID: ' + stopId.split('_')[1]));\n\t\t\t\t\t\t$('#' + widgetClass + '-stop-name').html(cleanStopName(stopName));\n\t\t\t\t\t\t$('#' + widgetClass + '-last-updated .time').html(moment(arrivals[0].lastUpdateTime).format('h:mm a'));\n\t\t\t\t\t\t$('#nearby-arrival-msg').hide();\n\t\t\t\t\t\ttable.show();\n\t\t\t\t\t\ttable.empty();\n\n\t\t\t\t\t\t// var header = $('<thead>');\n\t\t\t\t\t\t// header.append('<tr><')\n\t\t\t\t\t\ttable.append('<thead><tr><th>Route</th><th>Minutes</th><th>Direction</th></tr></thead>');\n\t\t\t\t\t\tvar tbody = $('<tbody>');\n\t\t\t\t\t\tvar data = [];\n\t\t\t\t\t\tfor (var i = 0; i < arrivals.length; i++) {\n\t\t\t\t\t\t\t// if (i < 8) {\n\t\t\t\t\t\t\t\tvar predicted = arrivals[i].predictedArrivalTime ? true : false;\n\t\t\t\t\t\t\t\tvar seconds = arrivals[i].predictedArrivalTime || arrivals[i].scheduledArrivalTime;\n\t\t\t\t\t\t\t\tvar diff = seconds - moment().valueOf();\n\t\t\t\t\t\t\t\tvar routeName = arrivals[i].routeShortName;\n\t\t\t\t\t\t\t\t// console.log(diff);\n\t\t\t\t\t\t\t\t// var minutes = String(Math.floor(divisor_for_minutes / 60));\n\t\t\t\t\t\t\t\tvar fromNow = Math.floor(diff/60/1000);//moment(seconds).toNow(true)//.replace('minutes', '').replace('a few seconds', '<strong>NOW</strong>').replace('a minute', '<strong>NOW</strong>');\n\t\t\t\t\t\t\t\tvar fromNowText = fromNow <= 1 ? '<strong>NOW</strong>' : fromNow;\n\t\t\t\t\t\t\t\tvar headsign = trimHeadsign(arrivals[i].tripHeadsign);\n\t\t\t\t\t\t\t\tvar patt = new RegExp(\"Airport\");\n\t\t\t\t\t\t\t\tif (patt.test(headsign)){\n\t\t\t\t\t\t\t\t\theadsign += ' <i class=\"fa fa-plane\"></i>';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t// data.push([\n\t\t\t\t\t\t\t\t// \tarrivals[i].routeShortName, \n\t\t\t\t\t\t\t\t// \tfromNow, \n\t\t\t\t\t\t\t\t// \theadsign, \n\t\t\t\t\t\t\t\t// \t+seconds\n\t\t\t\t\t\t\t\t// ]);\n\t\t\t\t\t\t\t\tvar row = $('<tr class=\"info\">');\n\t\t\t\t\t\t\t\tif (predicted){\n\t\t\t\t\t\t\t\t\tfromNowText += ' <i style=\"font-size:0.7em;\" alt=\"Predicted arrival time\" title=\"Predicted arrival time\" class=\"fa fa-bolt\"></i>';\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\trow.append('<td><span class=\"'+labelMap[routeName]+'\">' + routeName + '</span></td>');\n\t\t\t\t\t\t\t\trow.append('<td data-order=\"'+fromNow+'\">' + fromNowText + '</td>');\n\t\t\t\t\t\t\t\trow.append('<td>' + headsign + '</td>');\n\t\t\t\t\t\t\t\ttbody.append(row);\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttable.append(tbody);\n\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\tif ( $.fn.dataTable.isDataTable(tableId) ) {\n\t\t\t\t\t\t\tarrivalsDatatable = table.DataTable();\n\t\t\t\t\t\t\t// arrivalsDatatable.clear();\n\t\t\t\t\t\t\t// arrivalsDatatable.rows.add(data);\n\t\t\t\t\t\t\t// arrivalsDatatable.draw();\n\t\t\t\t\t\t\tarrivalsDatatable.destroy();\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// else {\n\t\t\t\t\t\t\tarrivalsDatatable = table.DataTable( {\n\t\t\t\t\t\t\t\t\"order\": [[ 1, \"asc\" ]],\n\t\t\t\t\t\t\t\t// \"columns\": [\n\t\t\t\t\t\t\t\t// \t{\"title\": \"Route\"},\n\t\t\t\t\t\t\t\t// \t{\"title\": \"Minutes\"},\n\t\t\t\t\t\t\t\t// \t{\"title\": \"Direction\"},\n\t\t\t\t\t\t\t\t// \t{\"title\": \"diff\", \"type\": \"num\"}\n\t\t\t\t\t\t\t\t// ],\n\t\t\t\t\t\t\t\t// \"columnDefs\": [\n\t\t\t\t\t\t\t\t// \t// \"targets\": [ 2 ],\n\t\t\t\t\t\t\t\t// \t// \"visible\": false\n\t\t\t\t\t\t\t\t// \t// { \"type\": \"num\", \"targets\": 0 }\n\t\t\t\t\t\t\t\t// \t{ \"visible\": false, \"targets\": 3 },\n\t\t\t\t\t\t\t\t// \t// { \"orderData\": 1,    \"targets\": 3 },\n\t\t\t\t\t\t\t\t// ],\n\t\t\t\t\t\t\t\t// \"data\": data,\n\t\t\t\t\t\t\t\t\"paging\": false,\n\t\t\t\t\t\t\t\t// \"pageLength\": 6,\n\t\t\t\t\t\t\t\t// \"ordering\": false,\n\t\t\t\t\t\t\t\t\"info\": false,\n\t\t\t\t\t\t\t\t\"bFilter\": false\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t// }\n\t\t\t\t\t} // end if there are arrivals in the list\n\t\t\t\t\telse{\n\t\t\t\t\t\ttable.hide();\n\t\t\t\t\t\t$('#' + widgetClass + '-stop-name').html('');\n\t\t\t\t\t\t$('#' + widgetClass + '-last-updated').html('');\n\t\t\t\t\t\t$('#' + widgetClass + '-arrival-msg').text('No arrivals in the next 30 minutes.');\n\t\t\t\t\t\t$('#' + widgetClass + '-arrival-msg').show();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});\n\t$(\"#planner-go-btn\").click(function(){\n\t\tvar params = {};\n\t\tvar plannerChoice = $('.planner-choice-btn').val();\n\t\tvar origin = $('#planner-options-from-latlng').val();\n\t\tvar destination = $('#planner-options-dest-latlng').val();\n\t\tvar time = $('#planner-timepicker').val();\n\t\tconsole.log(origin);\n\t\tif (plannerChoice === 'Google Transit'){\n\t\t\tparams.saddr = origin;\n\t\t    params.daddr = destination;\n\t\t    params.dirflg = 'r';\n\t\t\tvar googUrl = 'http://maps.google.com/?';\n\t\t\twindow.location.href = googUrl + serialize(params);\n\t\t}\n\t\telse{\n\t\t\tparams.fromPlace = origin;\n\t\t    params.toPlace = destination;\n\t\t    params.arriveBy = $(\".planner-time-btn:first-child\").val() === 'Arrive by' ? true : false;\n\t\t    params.date = moment().format('YYYY-MM-DD');\n\t\t    params.time = moment().valueOf();\n\t\t    params.fromName = $('#planner-options-from').val() // $('#from').select2('data')[0].text;\n\t\t\t// params.toPlace = $('#planner-options-dest-latlng').val();\n\t\t\tparams.toName = $('#planner-options-dest').val() // $('#to').select2('data')[0].text;\n\t\t\tparams.mode = 'TRANSIT,WALK'; // $('input[name=mode-select]:checked').val()\n\t\t\tvar atltransitUrl = '/plan#';\n\t\t\t// console.log(atltransitUrl + serialize(params));\n\t\t\twindow.location.href = atltransitUrl + serialize(params);\n\t\t}\n\t\t// window.location.href='{{ site.baseurl }}/plan' + params;\n\t});\n    $(\".planner-time-menu li a\").click(function(){\n\n      $(\".planner-time-btn:first-child\").html('<i class=\"fa fa-clock-o\"></i> ' + $(this).text());\n      $(\".planner-time-btn:first-child\").val($(this).text());\n      var val = $(\".planner-time-btn:first-child\").val();\n      if (val === 'Depart at' || val === 'Arrive by'){\n      \t$('#planner-time-input').show();\n      }\n      else{\n      \t$('#planner-time-input').hide();\n      }\n   });\n\n   $(\".planner-choice-menu li a\").click(function(){\n      $(\".planner-choice-btn:first-child\").html($(this).text());\n      $(\".planner-choice-btn:first-child\").val($(this).text());\n   });\n //   $('.box').click(function() {\n\n\t//     $(this).animate({\n\t//         left: '-50%'\n\t//     }, 500, function() {\n\t//         $(this).css('left', '150%');\n\t//         $(this).appendTo('#box-container');\n\t//     });\n\n\t//     $(this).next().animate({\n\t//         left: '50%'\n\t//     }, 500);\n\t// });\n\t$('#trig').on('click', function () {\n\t    $('#col1').toggleClass('col-md-12 col-md-3');\n\t    $('#col2').toggleClass('col-md-0 col-md-9');\n\t});\n});","function compareRouteNames(a,b){ return a.shortName - b.shortName; }\nfunction findBootstrapEnvironment() {\n    var envs = ['xs', 'sm', 'md', 'lg'];\n\n    $el = $('<div>');\n    $el.appendTo($('body'));\n\n    for (var i = envs.length - 1; i >= 0; i--) {\n        var env = envs[i];\n\n        $el.addClass('hidden-'+env);\n        if ($el.is(':hidden')) {\n            $el.remove();\n            return env;\n        }\n    }\n}\nfunction setupDatetime(){\n    // if(Modernizr.inputtypes.time){\n        $('#planner-options-timeformat').hide();\n        $('#planner-options-timeformat').attr('aria-hidden',true);\n    // }\n    setTime(currentTime);\n    function pad(n) { return n < 10 ? '0' + n : n }\n    var date = currentTime.year() + '-' + pad(currentTime.month() + 1) + '-' + pad(currentTime.date());\n    setDate(date);\n    if (typeof $().datepicker === 'function'){\n      $(\"#planner-options-date\").datepicker( {\n         dateFormat: Locale.dateFormat,\n         dayNames: Locale.days,\n         dayNamesMin : Locale.daysMin,\n         monthNames: Locale.months,\n         defaultDate: 0,\n         hideIfNoPrevNext: true,\n         minDate: whitelabel_minDate,\n         maxDate: whitelabel_maxDate\n      });\n    }\n    else{\n      console.log('error no datetimepicker');\n    }\n    /* Read aloud the selected dates */\n    $(document).on(\"mouseenter\", \".ui-state-default\", function() {\n        var text = $(this).text()+\" \"+$(\".ui-datepicker-month\",$(this).parents()).text()+\" \"+$(\".ui-datepicker-year\",$(this).parents()).text();\n        $(\"#planner-options-date-messages\").text(text);\n    });\n\n    // if(Modernizr.inputtypes.date){\n        $('#planner-options-dateformat').hide();\n        $('#planner-options-dateformat').attr('aria-hidden',true);\n    // }\n};\nfunction setDate(iso8601){\n  parts = iso8601.split('-');\n  var d = moment(iso8601);\n  $('#planner-options-date').val(d.format('MM-DD-YYYY'));\n}\nfunction setTime(iso8601){\n    // if(Modernizr.inputtypes.time){\n    //     $('#planner-options-time').val(iso8601.slice(0,5));\n    // }else{\n      console.log(iso8601)\n         input = moment(iso8601, \"hh:mm a\");\n        // var secs = parseInt(val[0])*60*60+parseInt(val[1])*60;\n        // var hours = String(Math.floor(secs / (60 * 60)) % 24);\n        // var divisor_for_minutes = secs % (60 * 60);\n        // var minutes = String(Math.floor(divisor_for_minutes / 60));\n        console.log(input.format(\"HH:mm\"))\n\n        $('#planner-options-time').val(input.format(\"HH:mm\"));\n    // }\n}\n\nfunction getDate(){\n  return moment($('#planner-options-date').val()).format(\"YYYY-MM-DD\");\n  console.log(elements)\n  var month = currentTime.day();\n  var day = currentTime.month();\n  var year = String(currentTime.year());\n  setDate(year+'-'+month+'-'+day);\n  return year+'-'+month+'-'+day;\n}\nfunction getTime(){\n  var time = moment($('#planner-options-time').val(), \"HH:mm\");\n  return time.format(\"hh:mm a\")\n}\n// Scrolls to anchor tag from subnav link\nfunction scrollToAnchor(aid){\n    console.log(aid)\n    var aTag = $(\"[id='\"+ aid +\"']\");\n    console.log(aTag)\n    $('html,body').animate({\n      scrollTop: aTag.offset().top // - 60\n    },'slow');\n}\n\n$(\".toc a\").click(function(e) {\n  e.preventDefault();\n  \n  var hash = $(this).attr('href').split('#')[1];\n  history.pushState(null, null, '#' + hash);\n   scrollToAnchor($(this).attr('href').split('#')[1]);\n});\n\n// Set all thumbnails to same height\nfunction equalHeight(group) {    \n    var tallest = 0;    \n\n    group.each(function() {     \n        $(this).css({'height' : ''});  \n        var thisHeight = $(this).height();       \n        console.log(thisHeight);\n        if(thisHeight > tallest) {          \n            tallest = thisHeight;       \n        }    \n    });\n    console.log('resizing...' + tallest);\n    group.each(function() { $(this).height(tallest); });\n} \n// Bind the function to global jQuery object.\n$.fn.reveal = function(){\n    // Arguments is a variable which is available within all functions\n    // and returns an object which holds the arguments passed.\n    // It is not really an array, so by calling Array.prototype\n    // he is actually casting it into an array.\n    var args = Array.prototype.slice.call(arguments);\n\n    // For each elements that matches the selector:\n    return this.each(function(){\n        // this is the dom element, so encapsulate the element with jQuery.\n        var img = $(this),\n            src = img.data(\"src\");\n\n        // If there is a data-src attribute, set the attribute\n        // src to make load the image and bind an onload event.\n        src && img.attr(\"src\", src).load(function(){\n            // Call the first argument passed (like fadeIn, slideIn, default is 'show').\n            // This piece is like doing img.fadeIn(1000) but in a more dynamic way.\n            img[args[0]||\"show\"].apply(img, args.splice(1));\n        });\n    });\n};\n$(document).ready(function() {\n    // Initialize lazy loading\n    // var layzr = new Layzr({\n    //       callback: function() {\n    //         // equalHeight($(\".equal-height\"));\n    //       }\n    // });\n    // $(\"img\").reveal(\"fadeIn\", 1000);\n    // equalHeight($(\".equal-height\")); \n});\n\n// Check equal-height height on resize\n\nvar waitForFinalEvent = (function () {\n  var timers = {};\n  return function (callback, ms, uniqueId) {\n    if (!uniqueId) {\n      uniqueId = \"Don't call this twice without a uniqueId\";\n    }\n    if (timers[uniqueId]) {\n      clearTimeout (timers[uniqueId]);\n    }\n    timers[uniqueId] = setTimeout(callback, ms);\n  };\n})();\n\n$(window).resize(function () {\n\n    waitForFinalEvent(function(){\n      // equalHeight($(\".equal-height\"));\n      //...\n    }, 500, \"some unique string\");\n});\n\njQuery.unparam = function (value) {\n  if (value.length > 1 && value.charAt(0) == '#'){\n    value = value.substring(1);\n  }\n  var\n  // Object that holds names => values.\n  params = {},\n  // Get query string pieces (separated by &)\n  pieces = value.split('&'),\n  // Temporary variables used in loop.\n  pair, i, l;\n\n  // Loop through query string pieces and assign params.\n  for (i = 0, l = pieces.length; i < l; i++) {\n    pair = pieces[i].split('=', 2);\n    // Repeated parameters with the same name are overwritten. Parameters\n    // with no value get set to boolean true.\n    params[decodeURIComponent(pair[0])] = (pair.length == 2 ?\n    decodeURIComponent(pair[1].replace(/\\+/g, ' ')) : true);\n  }\n  console.log(params);\n  return params;\n};\n// Extended disable function\njQuery.fn.extend({\n    disable: function(state) {\n        return this.each(function() {\n            var $this = $(this);\n            if($this.is('input, button, a'))\n              this.disabled = state;\n            else\n              $this.toggleClass('disabled', state);\n        });\n    }\n});\nfunction trimHeadsign(headsign){\n\theadsign = headsign.split('-').length > 1 ? headsign.split('-')[1] : headsign;\n  headsign = headsign.split('TO').length > 1 ? headsign.split('TO')[1] : headsign;\n\theadsign = headsign.replace(/STATION/i, '');\n\theadsign = toTitleCase(headsign);\n\treturn headsign;\n}\nfunction cleanStopName(name){\n  name = name\n          .replace(/(@)(?!\\s)/g, ' @ ')\n          .replace(/(\\/)(?!\\s)/g, ' / ')\n          .replace(/STATION/g, '');\n  name = toTitleCase(name);\n  return name;\n\n}\nfunction getDistanceFromLatLonInKm(lat1,lon1,lat2,lon2) {\n\tvar R = 6371; // Radius of the earth in km\n\tvar dLat = deg2rad(lat2-lat1);  // deg2rad below\n\tvar dLon = deg2rad(lon2-lon1); \n\tvar a = \n\tMath.sin(dLat/2) * Math.sin(dLat/2) +\n\t\tMath.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \n\t\tMath.sin(dLon/2) * Math.sin(dLon/2)\n\t\t; \n\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n\tvar d = R * c; // Distance in km\n\treturn d;\n}\nfunction deg2rad(deg) {\n\treturn deg * (Math.PI/180);\n}\nfunction toTitleCase(str) {\n    return str.replace(/\\w\\S*/g, function(txt){\n      if (/LCI|CTP|TDM|CSX|^NW$|^NE$|^SE$|^SW$|MARTA|GWCC|CNN|^FY$|^ARC$|^SR$|^II$|^STP$|^III$|^US$|CMAQ/g.test(txt))\n        return txt\n      else if (/^IN$|^OF$|^AND$|^FOR$/g.test(txt)){\n        return txt.toLowerCase()\n      }\n      else\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n}\nserialize = function(obj, prefix) {\n\tvar str = [];\n\tfor(var p in obj) {\n\t  if (obj.hasOwnProperty(p)) {\n\t    var k = prefix ? prefix + \"[\" + p + \"]\" : p, v = obj[p];\n\t    str.push(typeof v == \"object\" ?\n\t      serialize(v, k) :\n\t      encodeURIComponent(k) + \"=\" + encodeURIComponent(v));\n\t  }\n\t}\n\treturn str.join(\"&\");\n}\nvar bs = findBootstrapEnvironment();\nconsole.log(bs);\nif (bs === 'md' || bs === 'sm'){\n\t$('.agency-arrivals-radio').addClass('btn-xs');\n}","var whitelabel_prefix = 'http://opentrip.atlantaregion.com/otp-rest-servlet/';\n\nvar whitelabel_minDate = new Date(2014, 02, 08);\nvar whitelabel_maxDate = new Date(2020, 03, 30);\n\nvar Locale = {};\n\nLocale.dateFormat = 'mm-dd-yy';\nLocale.timeFormat = 'h:mma';\nLocale.dateAriaLabel = 'Date, use Ctrl en arrow keys to navigate, enter to choose';\nLocale.loading = \"Loading...\";\nLocale.edit = \"Change trip\";\nLocale.plan = \"Plan trip\";\nLocale.geocoderInput = \"Enter starting address, or click on the map...\";\nLocale.originInput = \"Enter starting address, or click on the map...\";\nLocale.destinationInput = \"Enter destination...\";\nLocale.startpointEmpty = \"No starting point entered\";\nLocale.noStartpointSelected = \"No starting point selected\";\nLocale.destinationEmpty = \"No destination entered\";\nLocale.noDestinationSelected = \"No destination selected\";\nLocale.noValidDate = \"Enter a valid date\";\nLocale.noValidTime = \"Enter a valid time\";\nLocale.dateTooEarly = function ( minDate8601 ) { return \"This trip planner works for travel dates starting \"+minDate8601.split('-').reverse().join('-'); };\nLocale.dateTooLate = function ( maxDate8601 ) { return \"This trip planner works for travel dates till \"+maxDate8601.split('-').reverse().join('-'); };\nLocale.from = \"From\";\nLocale.via = \"Via\";\nLocale.to = \"To\";\nLocale.date = \"Date\";\nLocale.time = \"Time\";\nLocale.months = ['January','February','March','April','May','June','July','August','September','October','November','December'];\nLocale.days = ['Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'];\nLocale.daysMin = ['Su','Mo','Tu','We','Th','Fr','Sa'];\nLocale.earlier = 'Earlier';\nLocale.later = 'Later';\nLocale.noAdviceFound = 'No valid trips found';\nLocale.walk = 'Walk';\nLocale.platformrail = 'Platform';\nLocale.platform = 'Platform';\nLocale.amountTransfers = function ( transfers ) { if (transfers === 0) { return 'Direct'; } else { return transfers+ ' transfers';} };\nLocale.autocompleteMessages = {\n        noResults: \"No results found.\",\n        results: function( amount ) {\n            return amount + ( amount > 1 ? \" results are \" : \" result is\" ) + \" available, use the up and down arrow keys to navigate them.\";\n        }\n};","$('.nav-search').submit(function(e){\n\te.preventDefault();\n\tconsole.log(this.value);\n});\n\n\n\n// For fare table tooltips\n$('[data-toggle=\"tooltip\"]').tooltip();\n\n// Close currently open nav div when another is clicked\n// http://stackoverflow.com/a/23973965/915811\n$(\"[data-collapse-group='navbarCollapse']\").click(function (e) {\n\te.preventDefault();\n    var $this = $(this);\n    console.log(this);\n    $(\"[data-collapse-group='navbarCollapse']:not([data-target='\" + $this.data(\"target\") + \"'])\").each(function () {\n    \t$(this).addClass('collapsed');\n    \tconsole.log(this);\n        $($(this).data(\"target\")).removeClass(\"in\").addClass('collapse');\n\n    });\n});\n\n// Google custom search engine javascript\n// (function() {\n//   var cx = '012656238249604753028:qzpqrvzllsa'; // Insert your own Custom Search engine ID here\n//   var gcse = document.createElement('script'); gcse.type = 'text/javascript'; gcse.async = true;\n//   gcse.src = (document.location.protocol == 'https' ? 'https:' : 'http:') +\n//       '//cse.google.com/cse.js?cx=' + cx;\n//   var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(gcse, s);\n// })();\n\n\n// function doneResizing(){$(\".drawer-marker\").toggleClass(\"is-resizing\",!1)}$(\"#gov_form\").submit(function(){var e=(new RegExp(\"/@/\",\"g\"),$(\"#gov_form input\").val());/@/g.test(e)?($(\"#gov_form select option[value=email]\").attr(\"selected\",\"selected\"),$('#gov_form input[type=\"text\"]').attr(\"id\",\"email\").attr(\"name\",\"email\"),$(\"#gov_form label\").attr(\"for\",\"email\")):($(\"#gov_form\").append('<input id=\"country_code\" name=\"country_code\" title=\"Country code\" type=\"hidden\" value=\"1\" />'),$(\"#gov_form select option[value=phone]\").attr(\"selected\",\"selected\"),$('#gov_form input[type=\"text\"]').attr(\"id\",\"phone\").attr(\"name\",\"phone\"),$(\"#gov_form label\").attr(\"for\",\"phone\"))}),$skip=$(\".mast-skip\"),$mastLogo=$(\".mast-logo\"),$menu=$(\".mast-menu\"),$menuControl=$(\".menu-control\"),$menuHeader=$(\".menu-item-header\"),$menuContent=$(\".menu-content\"),$linkHeader=$(\".menu-item-link\"),$drawers=$(\".drawer\"),$drawerHeaders=$(\".drawer-header\"),$drawerContents=$(\".drawer-content\"),$drawerFacade=$(\".drawer-facade\"),$moreDrawer=$(\".drawer-alt > .drawer-content\"),$menuControl.click(function(e){menuControlClick(e)}),$menuHeader.click(function(e){menuHeaderClick(e)}),$linkHeader.click(function(e){linkHeaderClick(e)}),$drawerHeaders.focus(function(e){drawerHeaderFocus(e)}),$drawerHeaders.blur(function(e){drawerHeaderBlur(e)}),$drawerHeaders.click(function(e){drawerHeaderClick(e)}),$skip.click(function(e){onSkip(e)}),this.lastWidth=0,this.lastHeight=0;var height,resizeId;this.isExpanded=!1,$content=$(\"#content\"),$(window).resize(function(e){$(\".drawer-marker\").toggleClass(\"is-resizing\",!0),clearTimeout(resizeId),resize(e),resizeId=setTimeout(doneResizing,500)}),setTimeout(function(){$(window).trigger(\"resize\")},1e3),this.activeDrawer=this.$drawers.eq(0),this.activeContent=this.activeDrawer.find(\".drawer-content\").eq(0),this.activeDrawer.addClass(\"is-active-drawer\"),this.isMobile=$(window).width()<720,this.isLastMobile=this.isMobile,resize=function(e){this.isLastMobile=this.isMobile,this.isMobile=$(window).width()<720,this.isMobile!==this.isLastMobile&&(this.collapseDrawer(),this.setDrawerHeight(0),this.$drawerHeaders.parent().removeClass(\"is-active\").siblings().removeClass(\"is-active\")),!this.isMobile&&this.isExpanded?this.setDrawerHeight(this.activeContent.children().outerHeight(!0)):this.setDrawerHeight(),this.lastWidth=$(window).width()},menuControlClick=function(e){this.isExpanded?(this.collapseDrawer(),this.setDrawerHeight(0)):(this.expandDrawer(),this.setDrawerHeight(100)),setTimeout(function(){$moreDrawer.attr(\"aria-hidden\",!self.isExpanded)},260)},menuHeaderClick=function(e){$(e.currentTarget).parent().toggleClass(\"is-active\").siblings().removeClass(\"is-active\")},onSkip=function(e){e.preventDefault(),$(\"#content\").find(\":focusable\").eq(0).trigger(\"focus\")},linkHeaderClick=function(e){this.collapseDrawer(),this.setDrawerHeight(0)},drawerHeaderClick=function(e){this.isMobile||e.preventDefault(),this.setActiveDrawer($(e.currentTarget))},drawerHeaderFocus=function(e){this.isMobile||e.preventDefault()},drawerHeaderBlur=function(e){this.isMobile||e.preventDefault()},setActiveDrawer=function(e){this.activeDrawer=e.parent(),this.activeContent=e.siblings(\".drawer-content\").eq(0),this.isExpanded&&this.activeDrawer.hasClass(\"is-active-drawer\")?(this.collapseDrawer(),this.setDrawerHeight(0)):(this.expandDrawer(),this.setDrawerHeight(this.activeContent.children().outerHeight(!0))),e.parent().addClass(\"is-active-drawer\").siblings().removeClass(\"is-active-drawer\")},expandDrawer=function(){this.isExpanded=!0,this.activeContent.attr(\"aria-hidden\",\"false\")},collapseDrawer=function(){this.isExpanded=!1,setTimeout(function(){$drawerContents.attr(\"aria-hidden\",\"true\")},250)},setDrawerHeightNarrow=function(e){0!==e&&(e=this.$menuContent.children().eq(0).outerHeight(!0)),this.setContentBuffer(e)},setDrawerHeight=function(e){return void 0===e?e=this.lastHeight:this.lastHeight=e,this.isMobile?void this.setDrawerHeightNarrow(e):void this.setContentBuffer(e)},\n\n// setContentBuffer=function(e){$content.css({transform:[\"translate3d(0\",e+\"px\",\"0)\"].join(\",\")}),$(\"#footer\").css({transform:[\"translate3d(0\",e+\"px\",\"0)\"].join(\",\"),\"margin-bottom\":e})};\n\nshiftContent=function(e){\n\t// $('.content, .footer').animate({ left: '+=300' }, 400);\n\t// $(\".content, .footer\").animate({\n\t//     step: function() {\n\t//         $(this).css('-webkit-transform',\"translate3d(0px, \" + e + \"px, 0px)\");\n\t//     },\n\t//     duration: 1000,\n\t//     easing: 'easeOutQuint'\n\t// });\n\t$('.content').animate({ marginTop: '+='+e+'px' }, 600, 'easeOutQuint');\n};\n\n// $('.dropdown-link').click(function(e){\n// \te.preventDefault();\n// \tvar $this = $(this);\n// \tshiftContent($this.height());\n\n// })\n\n\n// Active nav\n// console.log(atltransit.nav);\n// console.log(atltransit.nav['{{ page.category }}']);\n// $('.nav-sidebar').append('<li><a href=\"/{{ page.category }}\">{{ page.category }}</a></li>');\n// $.each(atltransit.nav['{{ page.category }}'], function(i, item){\n// \tvar activeLabel = '';\n// \tvar activeBar = '';\n// \tif ('{{ page.id }}' === item ){\n// \t\tactiveLabel = '<span class=\"sr-only\">(current)</span>';\n// \t\tactiveBar = 'class=\"active\"';\n// \t}\n// \t$('.nav-sidebar').append('<li ' + activeBar + '><a href=\"/{{ page.category }}/' + item + '\">'+item + activeLabel + '</a></li>');\n// });\n","var routeTypeMap = {\n\t\t'0': 'Tram',\n\t\t'1': 'Subway',\n\t\t'2': 'Rail',\n\t\t'3': 'Bus',\n\t\t'4': 'Ferry',\n\t\t'5': 'Cable',\n\t\t'6': 'Gondola',\n\t\t'7': 'Funicular'\n\t};\nvar currentTime = moment();\nsetupDatetime();\n\n// Schedules agency select change\n\t$('input[type=radio][name=agency-arrivals-option], #schedules-agencies').change(function(){\n\t\t$('#schedules-routes').html('<option value=\"\">[Select Route]</option>');\n\t\t$('#schedules-trips')\n\t\t\t.html('<option value=\"\">[Select Direction]</option>')\n\t\t\t.prop('disabled', true);\n\t\t$('#schedules-stops')\n\t\t\t.html('<option value=\"\">[Select Stop]</option>')\n\t\t\t.trigger('change')\n\t\t\t.prop('disabled', true);\n\t\tconsole.log(this.value);\n\t\tif (this.value === 'Nearby'){\n\t\t\t$('#get-location').trigger('click');\n\t\t\treturn true;\n\t\t}\n\t\tvar agencyId = this.value;\n\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/routes-for-agency/' + agencyId + '.json?';\n\t\tvar params = {};\n\t\t// params.id = agencyId;\n\t\tparams.key = 'TEST';\n\t\turl += serialize(params);\n\t\t$.ajax({\n\t\t\turl: url,\n\t\t\tdataType: 'jsonp',\n\t\t\tsuccess: function(json){\n\t\t\t\tconsole.log(json.data);\n\t\t\t\tvar routeNest = d3.nest()\n\t\t\t\t\t\t.key(function(d) { return d.type; })\n\t\t\t\t\t\t.sortValues(compareRouteNames)\n\t\t\t\t\t\t.map(json.data.list);\n\t\t\t\tconsole.log(routeNest);\n\t\t\t\tvar routes = json.data.list;\n\t\t\t\t$.each(routeNest, function(type, routes) {  \n\t\t\t\t\tvar optgroup = $('<optgroup>');\n\t\t\t\t\toptgroup.attr('label',routeTypeMap[type]);\n\t\t\t\t\t$.each(routes, function(i, route){\n\t\t\t\t\t\tvar option = $(\"<option></option>\");\n\t\t\t\t\t\tvar routeFullText = routeTypeMap[type] === 'Subway' ? route.shortName : route.shortName + ' - ' + route.longName;\n\t\t\t\t\t\tvar routeText = route.longName === '' ? route.shortName : routeFullText;\n\t\t\t\t\t\toption.val(route.id);\n\t\t\t\t\t\toption.text(routeText);\n\t\t\t\t\t\toptgroup.append(option);\n\t\t\t\t\t});\n\t\t\t\t\t$('#schedules-routes').append(optgroup);\n\t\t\t\t});\n\t\t\t\t$('#schedules-routes').prop('disabled', false);\n\t\t\t}\n\t\t}); // end ajax\n\t});\n\t// Use location \n\t$('#get-location').click(function(){\n\t\t$('#schedules-agencies').val('Nearby');\n\t\t$('#schedules-routes').html('<option value=\"\">[Select Route]</option>');\n\t\t$('#schedules-stops')\n\t\t\t.html('<option value=\"\">[Select Stop]</option>')\n\t\t\t.trigger('change')\n\t\t\t.prop('disabled', true);\n\t\t$('#schedules-trips')\n\t\t\t.html('<option value=\"\">[Select Direction]</option>')\n\t\t\t.prop('disabled', true);;\n\t\t$(this).val(moment().unix());\n\t\tif (geolocationBool && typeof lat !== 'undefined'){\n\t\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/routes-for-location.json?';\n\t\t\tvar params = {};\n\t\t\tparams.lat = lat;\n\t\t\tparams.lon = lon;\n\t\t\tparams.radius = 4000;\n\t\t\tparams.key = 'TEST';\n\t\t\turl += serialize(params);\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\tdataType: 'jsonp',\n\t\t\t\tsuccess: function(json){\n\t\t\t\t\tconsole.log(json.data);\n\t\t\t\t\tvar routeNest = d3.nest()\n\t\t\t\t\t\t.key(function(d) { return d.agencyId; })\n\t\t\t\t\t\t.map(json.data.list);\n\t\t\t\t\tconsole.log(routeNest);\n\t\t\t\t\tvar agencyCount = 0;\n\t\t\t\t\tvar firstValue;\n\t\t\t\t\t$.each(routeNest, function(agency, routes) {  \n\t\t\t\t\t\tvar optgroup = $('<optgroup>');\n\t\t\t\t\t\toptgroup.attr('label',agency);\n\t\t\t\t\t\t$.each(routes, function(i, route){\n\t\t\t\t\t\t\tvar option = $(\"<option></option>\");\n\t\t\t\t\t\t\tif (agencyCount === 0 || i === 0){\n\t\t\t\t\t\t\t\tfirstValue = route.id;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar routeFullText = routeTypeMap[route.type] === 'Subway' ? route.shortName : route.shortName + ' - ' + route.longName;\n\t\t\t\t\t\t\tvar routeText = route.longName === '' ? route.shortName : routeFullText;\n\t\t\t\t\t\t\toption.val(route.id);\n\t\t\t\t\t\t\toption.text(routeText);\n\t\t\t\t\t\t\toptgroup.append(option);\n\t\t\t\t\t\t});\n\t\t\t\t\t    $('#schedules-routes').append(optgroup);\n\t\t\t\t\t    agencyCount++;\n\t\t\t\t\t});\n\t\t\t\t\t// $('#schedules-routes').val(firstValue);\n\t\t\t\t\t$('#schedules-routes').prop('disabled', false);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tconsole.log('no geolocation available');\n\t\t}\n\t});\n\t// Select route change\n\t$('#schedules-routes').change(function(){\n\t\tvar widgetClass;\n\t\tif ($(this).hasClass('nearby')){\n\t\t\twidgetClass = 'nearby';\n\t\t}\n\t\telse{\n\t\t\twidgetClass = 'next';\n\t\t}\n\t\twidgetClass = 'schedules';\n\t\t$('#schedules-stops')\n\t\t\t.html('<option value=\"\">[Select Stop]</option>')\n\t\t\t.trigger('change')\n\t\t\t.prop('disabled', true);\n\t\t$('#schedules-trips').html('<option value=\"\">[Select Direction]</option>');\n\t\tconsole.log(this.value);\n\t\tvar routeId = this.value;\n\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/stops-for-route/' + routeId + '.json?';\n\t\tvar params = {};\n\t\tparams.key = 'TEST';\n\t\tparams.includePolylines = false;\n\t\turl += serialize(params);\n\t\t$.ajax({\n\t\t\turl: url,\n\t\t\tdataType: 'jsonp',\n\t\t\tsuccess: function(json){\n\t\t\t\tvar closestDistance = 10000000000;\n\t\t\t\tvar closestStop = '';\n\t\t\t\tvar selectedTrip;\n\t\t\t\tvar stopGroups = json.data.entry.stopGroupings[0].stopGroups;\n\t\t\t\tconsole.log(json.data.entry.stopGroupings[0].stopGroups);\n\t\t\t\tconsole.log(json.data);\n\t\t\t\tvar stopMap = d3.nest()\n\t\t\t\t\t.key(function(d) { return d.id; })\n\t\t\t\t\t.map(json.data.references.stops);\n\t\t\t\tvar tripMap = d3.nest()\n\t\t\t\t\t// .key(function(d) { return d.name.name; })\n\t\t\t\t\t// .key(function(d) { return d.tripHeadsign; })\n\t\t\t\t\t.key(function(d) { return d.id; })\n\t\t\t\t\t.map(stopGroups);\n\t\t\t\tconsole.log(stopMap);\n\t\t\t\tconsole.log(tripMap);\n\t\t\t\tconsole.log(routeId);\n\t\t\t\tconsole.log(tripMap[routeId]);\n\t\t\t\tvar headsigns = [];\n\t\t\t\tvar tripCounter = 0;\n\t\t\t\t$.each(stopGroups, function(i, trip){\n\t\t\t\t\t// var tripId = trip.tripId;\n\t\t\t\t\t// console.log(trip);\n\t\t\t\t\t\n\t\t\t\t\t// if (typeof tripMap[routeId][tripId] !== 'undefined' && tripMap[routeId][tripId][0].routeId === routeId && headsigns.indexOf(tripMap[routeId][tripId][0].tripHeadsign) === -1){\n\t\t\t\t\t\t// var headsign = tripMap[routeId][tripId][0].tripHeadsign;\n\t\t\t\t\t\t// headsigns.push(headsign);\n\t\t\t\t\t\tvar tripLabel = trip.name.name === '' ? trip.id : trimHeadsign(trip.name.name);\n\t\t\t\t\t\tvar tripOption = $(\"<option></option>\");\n\t\t\t\t\t\ttripOption.val(trip.id);\n\t\t\t\t\t\ttripOption.text(tripLabel);\n\t\t\t\t\t\t$('#schedules-trips').append(tripOption);\n\t\t\t\t\t\tvar optgroup = $('<optgroup>');\n\t\t\t\t\t\toptgroup.attr('id', trip.id);\n\t\t\t\t\t\toptgroup.attr('label',tripLabel);\n\t\t\t\t\t\tif (tripCounter === 0){\n\t\t\t\t\t\t\tselectedTrip = trip.id;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse{\n\t\t\t\t\t\t\toptgroup.addClass('hidden-optgroup');\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\t$.each(trip.stopIds, function(j, stopId){\n\t\t\t\t\t\t\tvar stop = stopMap[stopId][0];\n\t\t\t\t\t\t\tconsole.log(stop)\n\t\t\t\t\t\t\tvar distance = getDistanceFromLatLonInKm(stop.lat, stop.lon, lat, lon);\n\t\t\t\t\t\t\tif (tripCounter === 0){\n\t\t\t\t\t\t\t\tif (distance < closestDistance){\n\t\t\t\t\t\t\t\t\tclosestDistance = distance;\n\t\t\t\t\t\t\t\t\tclosestStop = stop.id;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tvar option = $(\"<option></option>\");\n\t\t\t\t\t\t\toption.val(stop.id);\n\t\t\t\t\t\t\toption.attr('distance', distance);\n\t\t\t\t\t\t\tvar stopName = cleanStopName(stop.name);\n\t\t\t\t\t\t\tvar stopDir = stop.direction !== '' ? '(' + stop.direction + ') ' : '';\n\t\t\t\t\t\t\toption.text(stopDir + stopName);\n\t\t\t\t\t\t\toptgroup.append(option);\n\t\t\t\t\t\t\t// $('#' + widgetClass + '-arrivals-stops').append(option);\n\t\t\t\t\t\t});\n\t\t\t\t\t\t\n\t\t\t\t\t\t$('#schedules-stops').append(optgroup);\n\t\t\t\t\t\ttripCounter++;\n\t\t\t\t\t// } // end if valid trip for route\n\n\t\t\t\t}); // end each trip\n\t\t\t\tvar $stops = $('#schedules-stops');\n\t\t\t\t$('#schedules-trips').prop('disabled', false);\n\t\t\t\t$('#schedules-trips').val(selectedTrip);\n\t\t\t\t$stops.prop('disabled', false);\n\t\t\t\t$stops.val(closestStop);\n\t\t\t\tif ($stops.val() !== ''){\n\t\t\t\t\t$stops.trigger('change');\n\t\t\t\t}\n\t\t\t\tif ($('#schedules-stops').val() !== ''){\n\t\t\t\t\t$('#schedules-btn').prop('disabled', false);\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t$('#schedules-btn').prop('disabled', true);\n\t\t\t\t}\n\t\t\t} // end success\n\t\t}); // end ajax\n\t});\n\tvar previousTrip;\n\t$('#schedules-trips')\n\t\t.on('focus', function () {\n\t\t\t// Store the current value on focus and on change\n\t\t\tpreviousTrip = this.value;\n\t    }).change(function(){\n\t    \tvar closestDistance = 10000000000;\n\t\t\tvar closestStop = '';\n\t\t\tconsole.log(this.value);\n\t\t\t$('#' + previousTrip).addClass('hidden-optgroup');\n\t\t\t$('#' + this.value).removeClass('hidden-optgroup');\n\t\t\t$('#' + this.value + ' > option').each(function(){\n\t\t\t\tvar distance = $(this).attr('distance');\n\t\t\t\tconsole.log(distance);\n\t\t\t\tif (distance < closestDistance){\n\t\t\t\t\tclosestDistance = distance;\n\t\t\t\t\tclosestStop = this.value;\n\t\t\t\t}\n\t\t\t});\n\t\t\tconsole.log(closestStop);\n\t\t\tvar $stops = $('#schedules-stops');\n\t\t\t$stops.val(closestStop);\n\t\t\tif ($stops.val() !== ''){\n\t\t\t\t$stops.trigger('change');\n\t\t\t}\n\t\t});\n\t$('#schedules-stops').change(function(){\n\t\tif (this.value !== ''){\n\t\t\t$('#schedules-btn')\n\t\t\t\t.removeClass('disabled')\n\t\t\t\t.val(this.value);\n\t\t\t$('.get-realtime').removeClass('disabled');\n\t\t}\n\t\telse {\n\t\t\t$('#schedules-btn')\n\t\t\t\t.addClass('disabled')\n\t\t\t\t.val('');\n\t\t\t$('.get-realtime').addClass('disabled');\n\t\t}\n\t});\n\t$('.get-schedules').click(function(){\n\t\tvar widgetClass, stopId;\n\t\t\n\t\tif ($(this).hasClass('stop-code')){\n\t\t\twidgetClass = 'stop-code';\n\t\t}\n\t\telse{\n\t\t\twidgetClass = 'next';\n\t\t}\n\t\twidgetClass = 'schedules';\n\t\tstopId = $('#' + widgetClass + '-btn').val();\n\t\tvar routeId = $('#' + widgetClass + '-routes').val();\n\t\tconsole.log(stopId);\n\t\tconsole.log(routeId);\n\t\tconsole.log(widgetClass);\n\t\tif (stopId !== ''){\n\t\t\t// console.log('stop coding it up');\n\t\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/schedule-for-stop/' + stopId + '.json?';\n\t\t\tvar params = {};\n\t\t\tparams.key = 'TEST';\n\t\t\tparams.minutesBefore = 1;\n\t\t\turl += serialize(params);\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\tdataType: 'jsonp',\n\t\t\t\tsuccess: function(json){\n\t\t\t\t\tvar routes = json.data.entry.stopRouteSchedules;\n\t\t\t\t\tconsole.log(json.data);\n\t\t\t\t\tvar stopMap = d3.nest()\n\t\t\t\t\t\t.key(function(d) { return d.id; })\n\t\t\t\t\t\t.map(json.data.references.stops);\n\t\t\t\t\tvar routeMap = d3.nest()\n\t\t\t\t\t\t.key(function(d) { return d.id; })\n\t\t\t\t\t\t.map(json.data.references.routes);\n\t\t\t\t\tconsole.log(routeMap);\n\t\t\t\t\tconsole.log(json.data.entry.stopRouteSchedules);\n\t\t\t\t\tif (routes.length > 0){\n\t\t\t\t\t\tstopName = stopMap[json.data.entry.stopId][0].name;\n\t\t\t\t\t\t$('#' + widgetClass + '-stop-code').html(cleanStopName('Stop ID: ' + stopId.split('_')[1]));\n\t\t\t\t\t\t$('#' + widgetClass + '-stop-name').html(cleanStopName(stopName));\n\t\t\t\t\t\t// $('#' + widgetClass + '-last-updated').html('<a class=\"get-arrivals next btn\"><span class=\"glyphicon glyphicon-refresh\" aria-hidden=\"true\"></span> ' + moment(arrivals[0].lastUpdateTime).format('h:mm a') + '</a>');\n\t\t\t\t\t\t$('#nearby-arrival-msg').hide();\n\t\t\t\t\t\tvar data = [];\n\t\t\t\t\t\tvar schedulesDiv = $('.schedules-tables');\n\t\t\t\t\t\tvar rowDiv = $('<div class=\"row\"></div>');\n\t\t\t\t\t\tvar rowDiv2 = $('<div class=\"row\"></div>');\n\t\t\t\t\t\tschedulesDiv.empty();\n\t\t\t\t\t\tfor (var i = 0; i < routes.length; i++) {\n\t\t\t\t\t\t\tconsole.log(routes[i]);\n\t\t\t\t\t\t\tvar routeName = routeMap[routes[i].routeId][0].shortName;\n\t\t\t\t\t\t\tvar directions = routes[i].stopRouteDirectionSchedules;\n\t\t\t\t\t\t\tfor (var j = 0; j < directions.length; j++) {\n\t\t\t\t\t\t\t\tvar numTrips = directions.length * routes.length;\n\t\t\t\t\t\t\t\tvar gridWidth = numTrips > 4 ? 3 : 12 / numTrips;\n\t\t\t\t\t\t\t\tgridWidth = numTrips === 1 ? 6 : gridWidth;\n\t\t\t\t\t\t\t\tgridWidth = 6; // modified gridWidth for narrow layout\n\t\t\t\t\t\t\t\tvar gridWidthSm = numTrips > 4 ? 6 : 12 / numTrips * 2;\n\t\t\t\t\t\t\t\t// var tableId = '#' + widgetClass + '-table';\n\t\t\t\t\t\t\t\tvar columnDiv = $('<div class=\"schedule-table table-responsive col-xs-12 col-md-'+gridWidth+' col-sm-6\"></div>')\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tvar table = $('<table class=\"table table-striped table-condensed table-hover col-md-'+gridWidth+'\" id=\"schedule-'+routeId+j+'\"></table>');\n\n\t\t\t\t\t\t\t\ttable.append('<thead><tr><th class=\"text-right\">Hour</th><th>Minute</th></tr></thead>');\n\t\t\t\t\t\t\t\tvar tbody = $('<tbody>');\n\t\t\t\t\t\t\t\tvar headsign = trimHeadsign(directions[j].tripHeadsign);\n\t\t\t\t\t\t\t\tif (directions[j].scheduleFrequencies.length > 0){\n\t\t\t\t\t\t\t\t\tconsole.log('freq based');\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\tconsole.log('sched based');\n\t\t\t\t\t\t\t\t\tconsole.log(directions[j].scheduleStopTimes);\n\t\t\t\t\t\t\t\t\tvar stopTimes = directions[j].scheduleStopTimes;\n\t\t\t\t\t\t\t\t\tvar firstTime = moment(stopTimes[0].arrivalTime);\n\t\t\t\t\t\t\t\t\tvar currentHour = 0;\n\t\t\t\t\t\t\t\t\tvar row;\n\t\t\t\t\t\t\t\t\tvar minuteCell;\n\t\t\t\t\t\t\t\t\tvar morning = firstTime.hour() < 12 ? true : false;\n\t\t\t\t\t\t\t\t\tfor (var k = 0; k < stopTimes.length; k++) {\n\t\t\t\t\t\t\t\t\t\tvar meridian = '';\n\t\t\t\t\t\t\t\t\t\tif (morning && k === 0){\n\t\t\t\t\t\t\t\t\t\t\t// tbody.append('<tr class=\"text-left warning\"><td colspan=\"2\"><strong>AM</strong></td></tr>');\n\t\t\t\t\t\t\t\t\t\t\tmeridian = '<strong>AM</strong>  ';\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tvar seconds = stopTimes[k].arrivalTime;\n\t\t\t\t\t\t\t\t\t\t// console.log(seconds);\n\t\t\t\t\t\t\t\t\t\tvar arrivalTime = moment(seconds);\n\t\t\t\t\t\t\t\t\t\tvar nextArrivalTime;\n\t\t\t\t\t\t\t\t\t\tif (k !== stopTimes.length - 1){\n\t\t\t\t\t\t\t\t\t\t\tnextArrivalTime = moment(stopTimes[k + 1].arrivalTime);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t// console.log(arrivalTime.format('h:mm a'));\n\t\t\t\t\t\t\t\t\t\tif (arrivalTime.hour() !== currentHour){\n\t\t\t\t\t\t\t\t\t\t\t// console.log(arrivalTime.hour())\n\t\t\t\t\t\t\t\t\t\t\t// console.log(currentHour)\n\t\t\t\t\t\t\t\t\t\t\t// if (arrivalTime.hour() > firstTime.hour()){\n\t\t\t\t\t\t\t\t\t\t\t// \ttbody.append($('.' +i+j+arrivalTime.hour()));\n\t\t\t\t\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t\t\t\t\trow = $('<tr id=\"'+i+j+arrivalTime.hour()+'\">');\n\t\t\t\t\t\t\t\t\t\t\tif (arrivalTime.hour() >= 12 && morning){\n\t\t\t\t\t\t\t\t\t\t\t\tmorning = false;\n\t\t\t\t\t\t\t\t\t\t\t\ttbody.append('<tr class=\"blank_row\"><td colspan=\"2\"></td></tr>');\n\t\t\t\t\t\t\t\t\t\t\t\tmeridian = '<strong>PM</strong>  ';\n\t\t\t\t\t\t\t\t\t\t\t\t// tbody.append('<tr class=\"text-left info\"><td colspan=\"2\"><strong>PM</strong></td></tr>');\n\t\t\t\t\t\t\t\t\t\t\t\t// row.append('<td>PM</td>');\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\trow.append('<td class=\"text-right\"><strong>' + meridian + arrivalTime.format('h') + ':</strong></td>');\n\t\t\t\t\t\t\t\t\t\t\tminuteCell = $('<td class=\"text-left\">' + arrivalTime.minutes() + '</td>');\n\t\t\t\t\t\t\t\t\t\t\trow.append();\n\t\t\t\t\t\t\t\t\t\t\tcurrentHour = arrivalTime.hour();\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\t\t\tminuteCell.append(' ' + arrivalTime.minutes());\n\t\t\t\t\t\t\t\t\t\t\t// console.log($('.'+i+j+'-hour-'+arrivalTime.hour()).html());\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (nextArrivalTime.hour() !== arrivalTime.hour()){\n\t\t\t\t\t\t\t\t\t\t\trow.append(minuteCell);\n\t\t\t\t\t\t\t\t\t\t\ttbody.append(row);\n\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\tif (k == stopTimes.length - 1){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('done')\n\t\t\t\t\t\t\t\t\t\t\ttable.append(tbody);\n\t\t\t\t\t\t\t\t\t\t\t// console.log(table);\n\t\t\t\t\t\t\t\t\t\t\tcolumnDiv\n\t\t\t\t\t\t\t\t\t\t\t\t.append('<h4><span class=\"'+labelMap[routeName]+'\">' + routeName + '</span> - ' + headsign +'</h4')\n\t\t\t\t\t\t\t\t\t\t\t\t.append(table);\n\t\t\t\t\t\t\t\t\t\t\tif ( i > 1 ){\n\t\t\t\t\t\t\t\t\t\t\t\trowDiv2\n\t\t\t\t\t\t\t\t\t\t\t\t\t.append(columnDiv);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t\t\t\trowDiv\n\t\t\t\t\t\t\t\t\t\t\t\t\t.append(columnDiv);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tschedulesDiv\n\t\t\t\t\t\t\t\t\t\t\t\t.append(rowDiv)\n\t\t\t\t\t\t\t\t\t\t\t\t.append(rowDiv2);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t// var predicted = routes[i].predictedArrivalTime ? true : false;\n\t\t\t\t\t\t\t// var seconds = routes[i].predictedArrivalTime || routes[i].scheduledArrivalTime;\n\t\t\t\t\t\t\t// var diff = seconds - moment().valueOf();\n\t\t\t\t\t\t\t// var routeName = routes[i].routeShortName;\n\t\t\t\t\t\t\t// var fromNow = Math.floor(diff/60/1000);//moment(seconds).toNow(true)//.replace('minutes', '').replace('a few seconds', '<strong>NOW</strong>').replace('a minute', '<strong>NOW</strong>');\n\t\t\t\t\t\t\t// var fromNowText = fromNow <= 1 ? '<strong>NOW</strong>' : fromNow;\n\t\t\t\t\t\t\t// var headsign = trimHeadsign(routes[i].tripHeadsign);\n\t\t\t\t\t\t\t// var patt = new RegExp(\"Airport\");\n\t\t\t\t\t\t\t// if (patt.test(headsign)){\n\t\t\t\t\t\t\t// \theadsign += ' <i class=\"fa fa-plane\"></i>';\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t// var row = $('<tr class=\"info\">');\n\t\t\t\t\t\t\t// if (predicted){\n\t\t\t\t\t\t\t// \tfromNowText += ' <i style=\"font-size:0.7em;\" alt=\"Predicted arrival time\" title=\"Predicted arrival time\" class=\"fa fa-bolt\"></i>';\n\t\t\t\t\t\t\t// }\n\t\t\t\t\t\t\t// row.append('<td><span class=\"'+labelMap[routeName]+'\">' + routeName + '</span></td>');\n\t\t\t\t\t\t\t// row.append('<td data-order=\"'+fromNow+'\">' + fromNowText + '</td>');\n\t\t\t\t\t\t\t// row.append('<td>' + headsign + '</td>');\n\t\t\t\t\t\t\t// tbody.append(row);\n\t\t\t\t\t\t}\n\t\t\t\t\t\t\n\t\t\t\t\t\tconsole.log(data);\n\t\t\t\t\t\t// if ( $.fn.dataTable.isDataTable(tableId) ) {\n\t\t\t\t\t\t// \tarrivalsDatatable = table.DataTable();\n\t\t\t\t\t\t// \t// arrivalsDatatable.clear();\n\t\t\t\t\t\t// \t// arrivalsDatatable.rows.add(data);\n\t\t\t\t\t\t// \t// arrivalsDatatable.draw();\n\t\t\t\t\t\t// \tarrivalsDatatable.destroy();\n\t\t\t\t\t\t// }\n\t\t\t\t\t\t// else {\n\t\t\t\t\t\t\t// arrivalsDatatable = table.DataTable( {\n\t\t\t\t\t\t\t// \t\"order\": [[ 1, \"asc\" ]],\n\t\t\t\t\t\t\t// \t// \"columns\": [\n\t\t\t\t\t\t\t// \t// \t{\"title\": \"Route\"},\n\t\t\t\t\t\t\t// \t// \t{\"title\": \"Minutes\"},\n\t\t\t\t\t\t\t// \t// \t{\"title\": \"Direction\"},\n\t\t\t\t\t\t\t// \t// \t{\"title\": \"diff\", \"type\": \"num\"}\n\t\t\t\t\t\t\t// \t// ],\n\t\t\t\t\t\t\t// \t// \"columnDefs\": [\n\t\t\t\t\t\t\t// \t// \t// \"targets\": [ 2 ],\n\t\t\t\t\t\t\t// \t// \t// \"visible\": false\n\t\t\t\t\t\t\t// \t// \t// { \"type\": \"num\", \"targets\": 0 }\n\t\t\t\t\t\t\t// \t// \t{ \"visible\": false, \"targets\": 3 },\n\t\t\t\t\t\t\t// \t// \t// { \"orderData\": 1,    \"targets\": 3 },\n\t\t\t\t\t\t\t// \t// ],\n\t\t\t\t\t\t\t// \t// \"data\": data,\n\t\t\t\t\t\t\t// \t\"paging\": false,\n\t\t\t\t\t\t\t// \t// \"pageLength\": 6,\n\t\t\t\t\t\t\t// \t// \"ordering\": false,\n\t\t\t\t\t\t\t// \t\"info\": false,\n\t\t\t\t\t\t\t// \t\"bFilter\": false\n\t\t\t\t\t\t\t// });\n\t\t\t\t\t\t// }\n\t\t\t\t\t} // end if there are arrivals in the list\n\t\t\t\t\t// else{\n\t\t\t\t\t// \ttable.hide();\n\t\t\t\t\t// \t$('#' + widgetClass + '-stop-name').html('');\n\t\t\t\t\t// \t$('#' + widgetClass + '-last-updated').html('');\n\t\t\t\t\t// \t$('#' + widgetClass + '-arrival-msg').text('No arrivals in the next 30 minutes.');\n\t\t\t\t\t// \t$('#' + widgetClass + '-arrival-msg').show();\n\t\t\t\t\t// }\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t});"],"sourceRoot":"/source/"}