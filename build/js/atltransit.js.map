{"version":3,"sources":["planner-widget.js","utilities.js"],"names":[],"mappingshVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"atltransit.js","sourcesContent":["\n// Planner Widget Javascript\n$('#planner-timepicker').timepicker();\n$(function(){\n\tvar geolocationBool = false;\n\tvar lat, lon;\n\t// Geolocation\n\tif (\"geolocation\" in navigator) {\n\t\t/* geolocation is available */\n\t\tconsole.log('geolocation');\n\t\tgeolocationBool = true;\n\t\tnavigator.geolocation.getCurrentPosition(function(position) {\n\t\t\tlat = position.coords.latitude;\n\t\t\tlon = position.coords.longitude;\n\t\t\tconsole.log([position.coords.latitude, position.coords.longitude]);\n\t\t});\n\t} else {\n\t\t/* geolocation IS NOT available */\n\t}\n\t// Agency select change\n\t$('input[type=radio][name=agency-arrivals-option], #next-arrivals-agencies').change(function(){\n\t\t$('#stop-code').val('');\n\t\t$('#next-arrivals-routes').html('<option value=\"\">[Select Route]</option>');\n\t\t$('#next-arrivals-stops').html('<option value=\"\">[Select Stop]</option>');\n\t\tconsole.log(this.value);\n\t\tif (this.value === 'Nearby'){\n\t\t\t$('#get-location').trigger('click');\n\t\t\treturn true;\n\t\t}\n\t\tvar agencyId = this.value;\n\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/routes-for-agency/' + agencyId + '.json?';\n\t\tvar params = {};\n\t\t// params.id = agencyId;\n\t\tparams.key = 'TEST';\n\t\turl += serialize(params);\n\t\t$.ajax({\n\t\t\turl: url,\n\t\t\tdataType: 'jsonp',\n\t\t\tsuccess: function(json){\n\t\t\t\tconsole.log(json.data);\n\t\t\t\tvar routeTypeMap = {\n\t\t\t\t\t'0': 'Tram',\n\t\t\t\t\t'1': 'Subway',\n\t\t\t\t\t'2': 'Rail',\n\t\t\t\t\t'3': 'Bus',\n\t\t\t\t\t'4': 'Ferry',\n\t\t\t\t\t'5': 'Cable',\n\t\t\t\t\t'6': 'Gondola',\n\t\t\t\t\t'7': 'Funicular'\n\t\t\t\t}\n\t\t\t\tvar routeNest = d3.nest()\n\t\t\t\t\t\t.key(function(d) { return d.type; })\n\t\t\t\t\t\t.sortValues(compareRouteNames)\n\t\t\t\t\t\t.map(json.data.list);\n\t\t\t\tconsole.log(routeNest);\n\t\t\t\tvar routes = json.data.list;\n\t\t\t\t$.each(routeNest, function(type, routes) {  \n\t\t\t\t\tvar optgroup = $('<optgroup>');\n\t\t\t\t\toptgroup.attr('label',routeTypeMap[type]);\n\t\t\t\t\t$.each(routes, function(i, route){\n\t\t\t\t\t\tvar option = $(\"<option></option>\");\n\t\t\t\t\t\toption.val(route.id);\n\t\t\t\t\t\toption.text(route.shortName + ' - ' + route.longName);\n\t\t\t\t\t\toptgroup.append(option);\n\t\t\t\t\t});\n\t\t\t\t\t$('#next-arrivals-routes').append(optgroup);\n\t\t\t\t});\n\t\t\t\t$('#next-arrivals-routes').prop('disabled', false);\n\t\t\t}\n\t\t});\n\t});\n\t// Use location \n\t$('#get-location').click(function(){\n\t\t$('#next-arrivals-agencies').val('Nearby');\n\t\t$('#next-arrivals-routes').html('<option value=\"\">[Select Route]</option>');\n\t\t$('#next-arrivals-stops').html('<option value=\"\">[Select Stop]</option>');\n\t\t$(this).val(moment().unix());\n\t\tif (geolocationBool && typeof lat !== 'undefined'){\n\t\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/routes-for-location.json?';\n\t\t\tvar params = {};\n\t\t\tparams.lat = lat;\n\t\t\tparams.lon = lon;\n\t\t\tparams.radius = 2000;\n\t\t\tparams.key = 'TEST';\n\t\t\turl += serialize(params);\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\tdataType: 'jsonp',\n\t\t\t\tsuccess: function(json){\n\t\t\t\t\tconsole.log(json.data);\n\t\t\t\t\tvar routeNest = d3.nest()\n\t\t\t\t\t\t.key(function(d) { return d.agencyId; })\n\t\t\t\t\t\t.map(json.data.list);\n\t\t\t\t\tconsole.log(routeNest);\n\t\t\t\t\tvar agencyCount = 0;\n\t\t\t\t\tvar firstValue;\n\t\t\t\t\t$.each(routeNest, function(agency, routes) {  \n\t\t\t\t\t\tvar optgroup = $('<optgroup>');\n\t\t\t\t\t\toptgroup.attr('label',agency);\n\t\t\t\t\t\t$.each(routes, function(i, route){\n\t\t\t\t\t\t\tvar option = $(\"<option></option>\");\n\t\t\t\t\t\t\tif (agencyCount === 0 || i === 0){\n\t\t\t\t\t\t\t\tfirstValue = route.id;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\toption.val(route.id);\n\t\t\t\t\t\t\toption.text(route.shortName + ' - ' + route.longName);\n\t\t\t\t\t\t\toptgroup.append(option);\n\t\t\t\t\t\t});\n\t\t\t\t\t    $('#next-arrivals-routes').append(optgroup);\n\t\t\t\t\t    agencyCount++;\n\t\t\t\t\t});\n\t\t\t\t\t// $('#next-arrivals-routes').val(firstValue);\n\t\t\t\t\t$('#next-arrivals-routes').prop('disabled', false);\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\telse{\n\t\t\tconsole.log('no geolocation available');\n\t\t}\n\t});\n\t// Select route change\n\t$('.arrivals-routes').change(function(){\n\t\tvar widgetClass;\n\t\t// $('#stop-code').val('');\n\t\tif ($(this).hasClass('nearby')){\n\t\t\twidgetClass = 'nearby';\n\t\t}\n\t\telse{\n\t\t\twidgetClass = 'next';\n\t\t}\n\t\t$('#' + widgetClass + '-arrivals-stops').html('<option value=\"\">[Select Stop]</option>');\n\t\tconsole.log(this.value);\n\t\tvar routeId = this.value;\n\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/stops-for-route/' + routeId + '.json?';\n\t\tvar params = {};\n\t\tparams.key = 'TEST';\n\t\turl += serialize(params);\n\t\t$.ajax({\n\t\t\turl: url,\n\t\t\tdataType: 'jsonp',\n\t\t\tsuccess: function(json){\n\t\t\t\tvar closestDistance = 10000000000;\n\t\t\t\tvar closestStop = '';\n\t\t\t\tconsole.log(json.data.references.stops);\n\t\t\t\t$.each(json.data.references.stops, function(i, stop){\n\t\t\t\t\tvar distance = getDistanceFromLatLonInKm(stop.lat, stop.lon, lat, lon);\n\t\t\t\t\tif (distance < closestDistance){\n\t\t\t\t\t\tclosestDistance = distance;\n\t\t\t\t\t\tclosestStop = stop.id;\n\t\t\t\t\t}\n\t\t\t\t\tvar option = $(\"<option></option>\");\n\t\t\t\t\toption.val(stop.id);\n\t\t\t\t\tvar name = stop.name.replace(/(@)(?!\\s)/g, ' @ ')\n\t\t\t\t\tvar name = name.replace(/(\\/)(?!\\s)/g, ' / ')\n\t\t\t\t\toption.text(toTitleCase(name));\n\t\t\t\t\t$('#' + widgetClass + '-arrivals-stops').append(option);\n\t\t\t\t});\n\t\t\t\t$('#' + widgetClass + '-arrivals-stops').prop('disabled', false);\n\t\t\t\t$('#' + widgetClass + '-arrivals-stops').val(closestStop);\n\n\t\t\t}\n\t\t});\n\t});\n\t$('.arrivals-routes').change(function(){\n\t\t$('#stop-code').val('');\n\t});\n\t$('.get-next-stop-code').click(function(){\n\t\tvar widgetClass, stopId;\n\t\t// $('#stop-code').val('');\n\t\tif ($(this).hasClass('nearby')){\n\t\t\twidgetClass = 'nearby';\n\t\t}\n\t\telse{\n\t\t\twidgetClass = 'next';\n\t\t}\n\t\tvar stopCode = $('#stop-code').val();\n\t\tconsole.log(stopCode);\n\t\tconsole.log(widgetClass);\n\t\tif (widgetClass === 'nearby' && stopCode !== ''){\n\t\t\t// $('#next-arrivals-agencies')\n\t\t\t// \t.val('');\n\t\t\t// $('#next-arrivals-routes')\n\t\t\t// \t.attr('disabled', true)\n\t\t\t// \t.html('<option value=\"\">[Select Route]</option>');\n\t\t\t// $('#next-arrivals-stops')\n\t\t\t// \t.attr('disabled', true)\n\t\t\t// \t.html('<option value=\"\">[Select Stop]</option>');\n\t\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/stops-for-location.json?';\n\t\t\tvar params = {};\n\t\t\tparams.query = stopCode;\n\t\t\tparams.key = 'TEST';\n\t\t\turl += serialize(params);\n\t\t\t$.ajax({\n\t\t\t\turl: url,\n\t\t\t\tdataType: 'jsonp',\n\t\t\t\tsuccess: function(json){\n\t\t\t\t\tconsole.log(json.data);\n\t\t\t\t\tvar refs = json.data.references;\n\t\t\t\t\tif (json.data.list.length > 0){\n\t\t\t\t\t\tstopId = json.data.list[0].id;\n\t\t\t\t\t\t// $.each(refs.routes, function(i, route){\n\n\t\t\t\t\t\t// });\n\t\t\t\t\t\t// $('#next-arrivals-agencies').val(refs.agencies[0].id);\n\t\t\t\t\t\t// $('#next-arrivals-routes').append('<option></option>').val(refs.routes[0].id);\n\t\t\t\t\t\t// $('#next-arrivals-routes').val(refs.routes[0].id);\n\t\t\t\t\t\tconsole.log('stop coding it up');\n\t\t\t\t\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/arrivals-and-departures-for-stop/' + stopId + '.json?';\n\t\t\t\t\t\tvar params = {};\n\t\t\t\t\t\tparams.key = 'TEST';\n\t\t\t\t\t\turl += serialize(params);\n\t\t\t\t\t\t$.ajax({\n\t\t\t\t\t\t\turl: url,\n\t\t\t\t\t\t\tdataType: 'jsonp',\n\t\t\t\t\t\t\tsuccess: function(json){\n\t\t\t\t\t\t\t\tvar arrivals = json.data.entry.arrivalsAndDepartures;\n\t\t\t\t\t\t\t\t// console.log(json.data.entry.arrivalsAndDepartures[0].predictedArrivalTime);\n\t\t\t\t\t\t\t\tif (arrivals.length > 0){\n\t\t\t\t\t\t\t\t\tvar seconds = arrivals[0].predictedArrivalTime || arrivals[0].scheduledArrivalTime;\n\t\t\t\t\t\t\t\t\tvar diff = seconds - moment().unix();\n\t\t\t\t\t\t\t\t\tvar fromNow = moment(seconds).fromNow(true).replace('minutes', 'min');\n\t\t\t\t\t\t\t\t\t$('#nearby-arrival-msg').text(fromNow);\n\t\t\t\t\t\t\t\t\t$('#nearby-arrival-msg').show();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\telse{\n\t\t\t\t\t\t\t\t\t$('#nearby-arrival-msg').text('No arrivals.');\n\t\t\t\t\t\t\t\t\t$('#nearby-arrival-msg').show();\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t// console.log('Invalid stop ID.')\n\t\t\t\t\t\t$('#nearby-arrival-msg').text('Invalid stop ID.');\n\t\t\t\t\t\t$('#nearby-arrival-msg').show();\n\t\t\t\t\t}\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t}\n\t});\n\t// Find next arrival (next and nearby)\n\t$(\".get-next-arrival\").click(function(){\n\t\tconsole.log($(this));\n\t\tvar stopId, routeId;\n\t\t$(\"#next-arrival-msg\").show();\n\t\tvar widgetClass;\n\t\tif ($(this).hasClass('nearby')){\n\t\t\twidgetClass = 'nearby';\n\t\t}\n\t\telse{\n\t\t\twidgetClass = 'next';\n\t\t}\n\t\tstopId = $('#' + widgetClass + '-arrivals-stops').val();\n\t\trouteId = $('#' + widgetClass + '-arrivals-routes').val();\n\t\tagencyId = $('#next-arrivals-agencies').val();\n\t\tconsole.log(stopId);\n\t\tif (stopId === ''){\n\t\t\t$('#' + widgetClass + '-arrival-msg').text('Select route / stop.');\n\t\t\t$('#' + widgetClass + '-arrival-msg')\n\t\t\t\t.show()\n\t\t\t\t// .delay(1000)\n\t\t\t\t// .fadeOut();\n\t\t\treturn true;\n\t\t}\n\t\tif (agencyId === '' && widgetClass === 'next' && stopId === ''){\n\t\t\t$('#' + widgetClass + '-arrival-msg').text('Select agency.');\n\t\t\t$('#' + widgetClass + '-arrival-msg')\n\t\t\t\t.show()\n\t\t\t\t// .delay(1000)\n\t\t\t\t// .fadeOut();\n\t\t\treturn true;\n\t\t}\n\t\tvar url = 'http://atlanta.onebusaway.org/api/api/where/arrivals-and-departures-for-stop/' + stopId + '.json?';\n\t\tvar params = {};\n\t\tparams.key = 'TEST';\n\t\turl += serialize(params);\n\t\t$.ajax({\n\t\t\turl: url,\n\t\t\tdataType: 'jsonp',\n\t\t\tsuccess: function(json){\n\t\t\t\tvar arrivals = json.data.entry.arrivalsAndDepartures;\n\t\t\t\tconsole.log(json.data.entry.arrivalsAndDepartures[0]);\n\t\t\t\tif (arrivals.length > 0){\n\t\t\t\t\tvar seconds = arrivals[0].predictedArrivalTime || arrivals[0].scheduledArrivalTime;\n\t\t\t\t\tvar diff = seconds - moment().unix();\n\t\t\t\t\tvar fromNow = moment(seconds).fromNow(true).replace('minutes', 'min');\n\t\t\t\t\t$('#' + widgetClass + '-arrival-msg').text(fromNow);\n\t\t\t\t\t$('#' + widgetClass + '-arrival-msg').show();\n\t\t\t\t}\n\t\t\t\telse{\n\t\t\t\t\t$('#' + widgetClass + '-arrival-msg').text('No arrivals.');\n\t\t\t\t\t$('#' + widgetClass + '-arrival-msg').show();\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\t});\n\t$(\"#planner-go-btn\").click(function(){\n\t\tvar params = {};\n\t\tvar plannerChoice = $('.planner-choice-btn').val();\n\t\tvar origin = $('.planner-form input[name=fromPlace]').val();\n\t\tvar destination = $('.planner-form input[name=toPlace]').val();\n\t\tvar time = $('#planner-timepicker').val();\n\t\tconsole.log(origin);\n\t\tif (plannerChoice === 'Google Transit'){\n\t\t\tparams.saddr = origin;\n\t\t    params.daddr = destination;\n\t\t    params.dirflg = 'r';\n\t\t\tvar googUrl = 'http://maps.google.com/?';\n\t\t\twindow.location.href = googUrl + serialize(params);\n\t\t}\n\t\telse{\n\n\t\t}\n\t\t// window.location.href='{{ site.baseurl }}/plan' + params;\n\t});\n    $(\".planner-time-menu li a\").click(function(){\n\n      $(\".planner-time-btn:first-child\").html('<span class=\"glyphicon glyphicon-time\" aria-hidden=\"true\"></span> ' + $(this).text() + ' <i class=\"fa fa-caret-down\"></i>');\n      $(\".planner-time-btn:first-child\").val($(this).text());\n      var val = $(\".planner-time-btn:first-child\").val();\n      if (val === 'Depart at' || val === 'Arrive by'){\n      \t$('#planner-time-input').show();\n      }\n      else{\n      \t$('#planner-time-input').hide();\n      }\n   });\n\n   $(\".planner-choice-menu li a\").click(function(){\n      $(\".planner-choice-btn:first-child\").html($(this).text() + ' <i class=\"fa fa-caret-down\"></i>');\n      $(\".planner-choice-btn:first-child\").val($(this).text());\n   });\n\n});","function compareRouteNames(a,b){ return a.shortName - b.shortName; }\nfunction findBootstrapEnvironment() {\n    var envs = ['xs', 'sm', 'md', 'lg'];\n\n    $el = $('<div>');\n    $el.appendTo($('body'));\n\n    for (var i = envs.length - 1; i >= 0; i--) {\n        var env = envs[i];\n\n        $el.addClass('hidden-'+env);\n        if ($el.is(':hidden')) {\n            $el.remove();\n            return env;\n        }\n    }\n}\nfunction getDistanceFromLatLonInKm(lat1,lon1,lat2,lon2) {\n\tvar R = 6371; // Radius of the earth in km\n\tvar dLat = deg2rad(lat2-lat1);  // deg2rad below\n\tvar dLon = deg2rad(lon2-lon1); \n\tvar a = \n\tMath.sin(dLat/2) * Math.sin(dLat/2) +\n\t\tMath.cos(deg2rad(lat1)) * Math.cos(deg2rad(lat2)) * \n\t\tMath.sin(dLon/2) * Math.sin(dLon/2)\n\t\t; \n\tvar c = 2 * Math.atan2(Math.sqrt(a), Math.sqrt(1-a)); \n\tvar d = R * c; // Distance in km\n\treturn d;\n}\nfunction deg2rad(deg) {\n\treturn deg * (Math.PI/180);\n}\nfunction toTitleCase(str) {\n    return str.replace(/\\w\\S*/g, function(txt){\n      if (/LCI|CTP|TDM|CSX|^NW$|^NE$|^SE$|^SW$|MARTA|^FY$|^ARC$|^SR$|^II$|^STP$|^III$|^US$|CMAQ/g.test(txt))\n        return txt\n      else if (/^IN$|^OF$|^AND$|^FOR$/g.test(txt)){\n        return txt.toLowerCase()\n      }\n      else\n        return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n    });\n}\nserialize = function(obj, prefix) {\n\tvar str = [];\n\tfor(var p in obj) {\n\t  if (obj.hasOwnProperty(p)) {\n\t    var k = prefix ? prefix + \"[\" + p + \"]\" : p, v = obj[p];\n\t    str.push(typeof v == \"object\" ?\n\t      serialize(v, k) :\n\t      encodeURIComponent(k) + \"=\" + encodeURIComponent(v));\n\t  }\n\t}\n\treturn str.join(\"&\");\n}\nvar bs = findBootstrapEnvironment();\nconsole.log(bs);\nif (bs === 'md' || bs === 'sm'){\n\t$('.agency-arrivals-radio').addClass('btn-xs');\n}"],"sourceRoot":"/source/"}